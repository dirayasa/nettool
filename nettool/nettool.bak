#!/system/bin/sh
# Segala script dibawah dibuat secara manual dari 0.
# Saya bekerja keras sendiri tanpa partner 1 orang pun, harap tidak mengubah, memperbanyak, ataupun dialihkan pembuat.
# Gunakan sendiri, untuk belajar maupun untuk pengetahuan.
# Dilarang keras untuk berbagi/share kesembarang orang (termasuk teman dan juga orang terdekat), publik, ataupun tanpa ijin pembuat (kecuali script dari Zachary Powell dan Martin Møller)
# Terima kasih sudah mentaati nilai dan peraturan script disini
# Copyright@DHJS2017
#################################################
# Terima kasih kepada:                          #
# - ALLAH                                       #
# - LAPTOP                                      #
# - SEMUA FORUM LINUX                           #
# - NMAP TOOL                                   #
# - KALI LINUX ARM OS                           #
# - Zachary Powell dan Martin Møller            #
# - Script tweak dari forum XDA Developer       #
#################################################
mount -o rw,remount /system
mount -o rw,remount /data
mount -o rw,remount /cache
clear
mincpu="/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_min_freq"
maxcpu="/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq"
govcpu="/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor"
hack1a="ip link set wlan0 address 02:02:A9:3A:EB:F6"
hack1b="ip link set wlan0 broadcast 02:02:A9:3A:EB:F6"
hack2a="ip link set wlan0 address F4:0E:22:15:F2:62"
hack2b="ip link set wlan0 broadcast F4:0E:22:15:F2:62"
hack3a="ip link set wlan0 address 40:45:da:78:9B:AD"
hack3b="ip link set wlan0 broadcast 40:45:da:78:9B:AD"
patcha="ip link set wlan0 address $linkpatch"
patchb="ip link set wlan0 broadcast $linkpatch"
linkpatch="sdcard/nettoolpatch"
sdcard="/sdcard/"
sdcard="/sdcard/"
sdcard1="/storage/emulated/0/"
sdcard1="/storage/emulated/0/"
wlanbin="/system/etc/firmware/wlan/prima/WCNSS_qcom_wlan_nv.bin"
wlanbinbak="/system/etc/firmware/wlan/prima/WCNSS_qcom_wlan_nv.bin.bak"
systembak="/system/WCNSS_qcom_wlan_nv.bin.bak"
wlandefaultpath="/system/etc/firmware/wlan/prima/"
sdcardbak="/sdcard/WCNSS_qcom_wlan_nv.bin.bak"
databak="/data/WCNSS_qcom_wlan_nv.bin.bak"
bakmanual="/sdcard/backupalamathwmanual"
baklangsung="/sdcard/backupalamathw"
fullcache="/data/data/*/cache/.* /data/data/*/code_cache/.* /sdcard/*/.tmp/* /sdcard/*/*/.tmp/* /sdcard/.tmp/* /sdcard/*/.tmp/* /sdcard/*/*/.tmp/* /sdcard/*/*/*/.tmp/* /data/data/*/cache/* /data/data/*/code_cache/* /sdcard/Android/data/.*cache/* /sdcard/Android/data/*/cache/* /sdcard/*/.ads/* /sdcard/*/*/.ads/* /sdcard/*/*/*/.ads/* /sdcard/*/Cache/* /sdcard/*/*/Cache/* /sdcard/.*cache/* /sdcard/*/.*cache/* /sdcard/*/*/.*cache/* /sdcard/*cache/* /sdcard/*/*cache/* /sdcard/*/*/*cache/* /sdcard/DCIM/.thumbnails/* /sdcard/DCIM/.thumbnails/.* /sdcard/UCDownloads/cache/* /data/anr/* /data/cache/* /data/log/* /data/tombstones/* /data/backup/pending/* /data/system/dropbox/* /sdcard/LOST.DIR /data/system/usagestats/* /data/*.log /data/*.txt /data/backup/pending/*.tmp /data/cache/*.* /data/dalvik-cache/*.apk /data/dalvik-cache/*.tmp /data/dalvik-cache/*.log /data/dalvik-cache/*.txt /data/data/*.log /data/data/*.txt /data/log/*.log /data/log/*.txt /data/local/*.apk /data/local/*.log /data/local/*.txt /data/last_alog/*.log /data/last_alog/*.txt /data/last_kmsg/*.log /data/last_kmsg/*.txt /data/mlog/* /data/system/*.log /data/system/*.txt /data/local/tmp/* /data/tmp/* /data/system/appusagestats/* /mnt/expand/*/user*/*"
fullapk="/sdcard/*.apk /sdcard/*/*.apk /sdcard/*/*/*.apk /sdcard/*/*/*/*.apk /sdcard/*/*/*/*/*.apk /sdcard/*/*/*/*/*/*.apk /sdcard/*/*/*/*/*/*.apk /sdcard/*/*/*/*/*/*/*.apk"
id=`id`; id=`echo ${id#*=}`; id=`echo ${id%%\(*}`; id=`echo ${id%% *}`
if [ "$id" != "0" ] && [ "$id" != "root" ]; then
echo "Belum melakukan akses ROOT"
sleep 3
exit
fi
if [[ -f /system/xbin/busybox && -f /system/bin/busybox ]]; then
	echo "BUSYBOX belum di install"
	exit
else
if [ -f /data/hostterinstall ]; then
	hostiklan="\e[1;32mIklan Terblokir\e[0m"
else
	hostiklan="\e[1;31mIklan Belum diblokir\e[0m"
fi
if [ -f /data/tosnettool ]; then
if [ -f /data/.blokiriklan.sh ]; then rm /data/.blokiriklan.sh 2> /dev/null; fi
if [ `ifconfig wlan0 2>/dev/null | grep inet\ addr | wc -l` -eq 0 ]; then
	wistat="\e[1;31m                   Wifi Tidak Aktif\e[0m"
	wistat1="\e[1;31mWifi Tidak Tersambung\e[0m"
else
	wistat="\e[1;32m                      Wifi AKtif\e[0m"
	wistat1="\e[1;32m`ifconfig wlan0 2>/dev/null | grep "inet " | awk -F'[: ]+' '{ print $4 }'`\e[0m"
fi
if [ `ifconfig wlan0 2>/dev/null | grep "HWaddr " | wc -l` -eq 0 ]; then
	wistat2="\e[1;31mHidupkan wifi\e[0m"
else
	wistat2="\e[1;32m`ifconfig wlan0 2>/dev/null | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'`\e[0m"
fi
if [ `ifconfig rmnet_data0 2>/dev/null | grep inet\ addr | wc -l` -eq 1 ]; then
	dataku="\e[1;32m`ifconfig rmnet_data0 2>/dev/null | grep "inet " | awk -F'[: ]+' '{ print $4 }'`\e[0m"
elif [ `ifconfig rmnet_data1 2>/dev/null | grep inet\ addr | wc -l` -eq 1 ]; then
	dataku="\e[1;32m`ifconfig rmnet_data1 2>/dev/null | grep "inet " | awk -F'[: ]+' '{ print $4 }'`\e[0m"
elif [ `ifconfig rmnet_data2 2>/dev/null | grep inet\ addr | wc -l` -eq 1 ]; then
	dataku="\e[1;32m`ifconfig rmnet_data2 2>/dev/null | grep "inet " | awk -F'[: ]+' '{ print $4 }'`\e[0m"
elif [ `ifconfig rmnet_data3 2>/dev/null | grep inet\ addr | wc -l` -eq 1 ]; then
	dataku="\e[1;32m`ifconfig rmnet_data3 2>/dev/null | grep "inet " | awk -F'[: ]+' '{ print $4 }'`\e[0m"
elif [ `ifconfig rmnet_data4 2>/dev/null | grep inet\ addr | wc -l` -eq 1 ]; then
	dataku="\e[1;32m`ifconfig rmnet_data4 2>/dev/null | grep "inet " | awk -F'[: ]+' '{ print $4 }'`\e[0m"
elif [ `ifconfig rmnet_data5 2>/dev/null | grep inet\ addr | wc -l` -eq 1 ]; then
	dataku="\e[1;32m`ifconfig rmnet_data5 2>/dev/null | grep "inet " | awk -F'[: ]+' '{ print $4 }'`\e[0m"
elif [ `ifconfig rmnet_data6 2>/dev/null | grep inet\ addr | wc -l` -eq 1 ]; then
	dataku="\e[1;32m`ifconfig rmnet_data6 2>/dev/null | grep "inet " | awk -F'[: ]+' '{ print $4 }'`\e[0m"
else
	dataku="\e[1;31mData Tidak Aktif\e[0m"
fi
if [ -f `getprop net.dns1` ]; then
	dns1ku="DNS tidak ditentukan"
else
	dns1ku="\e[93m`getprop net.dns1`\e[0m"
fi
if [ -f `getprop net.dns2` ]; then
	dns2ku="DNS tidak ditentukan"
else
	dns2ku="\e[93m`getprop net.dns2`\e[0m"
fi
if [ -f $bakmanual ]; then
	bakmanual80="\e[1;32mBackup OK!\e[0m"
else
	bakmanual80="\e[1;31mTidak ada\e[0m"
fi
if [ -f $baklangsung ]; then
	baklangsung80="\e[1;32mBackup OK!\e[0m"
else
	baklangsung80="\e[1;31mTidak ada\e[0m"
fi
if [ `arp -a 2>/dev/null | grep "?" | awk '{print $2}' | wc -l 2>/dev/null` -eq 1 ]; then
	iphost="\e[1;32m`arp -a | awk '{print $2}' 2>/dev/null`\e[0m"
else
	iphost="Tidak Terkoneksi"
fi
if [ `arp -a 2>/dev/null | grep "at" | awk '{print $4}' | wc -l 2>/dev/null` -eq 1 ]; then
	hwhost="  \e[1;32m`arp -a | awk '{print $4}' 2>/dev/null`\e[0m"
else
	hwhost="Tidak Terkoneksi"
fi
echo ""
echo ""
echo ""
echo "=========================================================="
echo "           NETWORK TOOLS 2017 Powered by Nano             "
echo "=========================================================="
echo ""
echo -n "               Backup Langsung: "
echo $baklangsung80
echo -n "                Backup Manual: "
echo $bakmanual80
echo ""
echo "=========================================================="
echo "                     HOST  Router"
echo "             IP            |          MAC Address         "
echo -n "       $iphost            "
echo "$hwhost"
echo ""
echo -n "\e[1;30mTerdeteksi: \e[0m" 
getprop net.hostname
echo -n "\e[1;36mIP WIFI: \e[0m" 
echo $wistat1
echo -n "\e[1;36mMAC Address : \e[0m" 
echo $wistat2
echo -n "\e[1;36mIP Data: \e[0m" 
echo $dataku
echo -n "\e[1;36mDNS 1: \e[0m" 
echo $dns1ku
echo -n "\e[1;36mDNS 2: \e[0m" 
echo $dns2ku
echo ""
echo "=========================================================="
echo ""
echo "Menu Net tools:"
echo "\e[1;35m1. Recovery Kata Sandi Wifi\e[0m"
echo "\e[1;35m2. Ganti Alamat HW\e[0m"
echo "\e[1;35m3. Backup Alamat HW\e[0m"
echo "\e[1;35m4. Restore Alamat HW (dan dari Wifi ID)\e[0m"
echo "\e[1;35m5. Jadikan Perangkat Anonymous\e[0m"
echo "\e[1;35m6. Restore Perangkat Anonymous\e[0m"
echo "\e[1;35m7. Ganti DNS\e[0m"
echo "\e[1;35m8. Dapatkan IP Address\e[0m"
echo "\e[1;35m9. Ganti IP Address (IP WIFI)\e[0m"
echo "\e[1;35m10. Net Booster\e[0m"
echo "\e[1;35m11. Ping Tool\e[0m"
echo "\e[1;35m12. Blokir Iklan\e[0m"
echo "\e[1;35m13. Deteksi perangkat lain\e[0m"
echo "\e[1;35m14. HACK WIFI (WPA/WEP/WPS)\e[0m"
echo ""
echo "Menu Tambahan:"
echo "\e[90m42. Jalankan KALI LINUX\e[0m"
echo "\e[90m29. Tutorial KALI LINUX\e[0m"
echo "\e[90m87. Utilitas\e[0m"
echo ""
echo "=========================================================="
echo ""
echo "Tool Free WIFI ID"
echo "\e[1;34m33. Free WIFI.ID 1\e[0m"
echo "\e[1;34m71. Free WIFI.ID 2 \e[0m"
echo "\e[1;34m45. Free WIFI.ID 3 \e[0m"
echo "\e[1;34m16. Free Wifi.ID 4 (Butuh Patch)\e[0m"
echo "\e[1;34m99. Tutorial Wifi.id\e[0m"
echo ""
echo "=========================================================="
echo "\e[1;32m98. ToS (Perjanjian) dan Penjelasan nettools\e[0m"
echo "50. Refresh"
echo "66. EXIT"
echo "=========================================================="
echo -n "Pilih angka yang tersedia [0-99]: "
read option
if [ $option -eq 1 ]; then
	clear
	echo ""
	echo ""
	echo "        Daftar nama Wifi (ssid) dan Pass (psk)            "
	echo ""
	cat /data/misc/wifi/wpa_supplicant.conf | grep -E "ssid=|psk=" | awk '{print}'
	echo ""
	echo "              Enter untuk kembali"
	read enterKey
	nettool
elif [ $option -eq 2 ]; then
	clear
	echo ""
	echo ""
	echo ""
   	echo "Mengecek berkas backup"
   	sleep 1
	if [ -e $sdcard/backupalamathw ]; then
		if [ -e $sdcard/backupalamathwmanual ]; then
			manual="dan backup manual"
			else
			manual=""
		fi
		echo ""
   		echo "Perangkat sudah di backup langsung " $manual
   	else
		echo ""
   		echo -n "PERHATIAN!!! Belum melakukan backup, enter jika ingin melanjutkan"
   		read enterKey
   	fi
   	sleep 1
   	echo -n "Tulis/paste kan Alamat HW: "
	read macchanger
	echo ""
   	echo "Pengubahan Broadcast HW.."
   	sleep 2
	ip link set wlan0 address $macchanger
	ip link set wlan0 broadcast ff:ff:ff:ff:ff:ff
   	echo "Ingin mengganti Broadcast HW? Default ff:ff:ff:ff:ff:ff"
	echo "1. Untuk IYA"
	echo "2. Untuk TIDAK"
	echo -n "Pilih angka yang tersedia [1-2]: "
		read bd 
		if [ $bd -eq 1 ]; then
			echo -n "Tulis/Paste Broadcast: "
			read macbd
			echo ""
			echo "Tunggu sebentar"
			sleep 3
			ip link set wlan0 broadcast $macbd
		elif [ $bd -eq 2 ]; then
			nettool
		else
			echo "Perintah salah"
			sleep 1
			nettool
		fi
   	echo "Pengubahan SELESAI!!"
   	sleep 2
   	echo -n "Tekan enter untuk kembali"
	read enterKey
	nettool
elif [ $option -eq 3 ]; then
	clear
	echo ""
	if [ `ifconfig wlan0 2>/dev/null | grep "HWaddr " | wc -l` -eq 1 ]; then
	echo ""
	echo "Tunggu sebentar"
	sleep 3
	echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /data/backupalamathw
	echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /sdcard/backupalamathw
	echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /storage/emulated/0/backupalamathw
	cp  $wlanbin $sdcardbak
	if [ -f $sdcardbak ]; then
		cp  $wlanbin $sdcardbak
	fi
	echo ""
	echo ""
	echo ""
	echo "Backup Selesai, silahkan di cari file (backupalamathw) di luar folder memori internal, pastikan sudah terbackup"
	echo "MAC Address Kamu: $wistat2"
	echo ""
	echo -n "Ingin backup secara manual (y/n)?"
		read pilihan 
		if [ $pilihan == y ]; then
			echo -n "Tulis/Paste Alamat HW :"
			read ganti
			echo ""
			echo "Tunggu sebentar"
			sleep 3
			echo $ganti > /data/backupalamathwmanual;
			echo $ganti > /sdcard/backupalamathwmanual;
			echo $ganti > /storage/emulated/0/backupalamathwmanual;
			echo ""
			echo ""
			echo "Backup manual selesai, silahkan cari file (backupalamathwmanual) di luar folder memori internal"
			echo -n "Klik Enter"
			read enterKey
			nettool
		elif [ $pilihan == n ]; then
			nettool
		else
			echo "Perintah salah"
			sleep 1
			nettool
			fi
		else
			echo ""
			echo "MAC Address tidak terdeteksi, silahkan nyalakan WIFI"
			sleep 3
			nettool
		fi
elif [ $option -eq 4 ]; then
	clear
	if [ -f $sdcardbak ]; then
		mount -o rw,remount /system
		mount -o rw,remount /data
		sleep 1
		echo "Restore Alamat HW ke semula.."
		echo ""
		echo ""
		sleep 2
		cp  $sdcardbak $wlanbin
		chmod 0644 $wlanbin
		echo "Restore berkas sukses.."
		sleep 1
		echo ""
		echo ""
		svc wifi disable
		svc wifi enable
		echo ""
		echo "Alamat HW menjadi Default"
		echo -n "Tekan enter untuk kembali"
		read enterKey
		nettool
	else
   		echo "Berkas tidak ditemukan"
   		echo ""
   		echo ""
   		sleep 1
   		echo "Proses dibatalkan"
   		echo -n "Tekan enter untuk kembali"
		read enterKey
		nettool
	fi
elif [ $option -eq 5 ]; then
	clear
	if [ -f $wlanbin ]; then
		chmod 0660 $wlanbin
		sleep 1
		echo ""
		echo ""
		echo "Perangkat akan menjadi tidak dikenal atau ANONYMOUS"
		sleep 1
		echo "Berkas penting di backup, silahkan tunggu.."
		cp  $wlanbin $wlanbinbak
		sleep 3
		echo "Backup selesai.."
		echo ""
		echo "Proses menjadikan perangkat Anonymous"
		sleep 3
		((v1=($RANDOM%126)+32))
		((v2=($RANDOM%126)+32))
		((v3=($RANDOM%126)+32))
		((v4=($RANDOM%126)+32))
		((v5=($RANDOM%126)+32))
		((v6=($RANDOM%126)+32))
		busybox printf "%x:%x:%x:%x:%x:%x\n" $v1 $v2 $v3 $v4 $v5 $v6
		busybox printf "\x$(busybox printf %x $v1)\x$(busybox printf %x $v2)\x$(busybox printf %x $v3)\x$(busybox printf %x $v4)\x$(busybox printf %x $v5)\x$(busybox printf %x $v6)" | 
		busybox dd of=$wlanbin  seek=10  bs=1 conv=notrunc
		chmod 0600 $wlanbin
		echo "Proses penggantian Hostname"
		sleep 2
		echo "#!/system/bin/sh" > /system/etc/init.d/anonym
		echo "setprop net.hostname Anonymous" > /system/etc/init.d/anonym
		chmod 777 /system/etc/init.d/anonym
		setprop net.hostname Anonymous
		svc wifi disable
		svc wifi enable
		echo "Perangkat telah menjadi Anonymous"
		echo -n "Tekan enter untuk kembali"
		read enterKey
		nettool
	else
   		echo "File tidak ditemukan"
   		echo "Proses ibatalkan"
   		echo -n "Tekan enter untuk kembali"
		read enterKey
		nettool
	fi
	nettool
elif [ $option -eq 6 ]; then
	clear
	if [ -f $wlanbinbak ]; then
		echo ""
		echo ""
		echo "Pengembalian perangkat Anonymous menjadi normal"
		sleep 1
		echo "Mounting System, Data"
		mount -o rw,remount /system
		mount -o rw,remount /data
		sleep 1
		chmod 0660 $wlanbinbak
		chmod 0660 $wlanbin 
		echo ""
		echo "Restore berkas penting.."
		sleep 1
		cp $wlanbinbak $wlanbin
		chmod 0644 $wlanbin
		echo "Restore berkas sukses.."
		sleep 1
		echo ""
		echo "Set Hostname ke default.."
		sleep 1
		if [ -f /system/etc/init.d/anonym ]; then rm -f /system/etc/init.d/anonym; fi
		defaultHostname="android-"
		defaultHostname+="$(settings get secure android_id)"
		setprop net.hostname $defaultHostname
		svc wifi disable
		svc wifi enable
		echo "Perangkat telah menjadi kembali semula"
		echo -n "Tekan enter untuk kembali"
		read enterKey
		nettool
	else
		echo ""
   		echo "Berkas tidak ditemukan"
   		echo ""
   		echo ""
   		echo "Proses dibatalkan"
   		echo -n "Tekan enter untuk kembali"
		read enterKey
		nettool
	fi
elif [ $option -eq 7 ]; then
	clear
	echo ""
	echo ""
	echo "Ganti DNS:"
	echo "1. Google DNS"
   	echo "2. OpenDNS"
   	echo "3. OpenDNS Family Shield"
	echo "99. Manual"
	echo ""
	echo -n "Pilih angka yang tersedia [1,2,3,99]: "
	read milihdns 
		if [ $milihdns  -eq 1 ]; then
			setprop net.dns1 8.8.8.8
   			setprop net.dns2 8.8.4.4
   			sleep 1
   			echo "Google DNS Sukses"
   			sleep 3
   			nettool
		elif [ $milihdns  -eq 2 ]; then
			setprop net.dns1 208.67.222.222
   			setprop net.dns2 208.67.220.220
   			sleep 1
   			echo "OpenDNS Sukses"
   			sleep 3
   			nettool
		elif [ $milihdns  -eq 99 ]; then
			echo "Tuliskan DNS secara manual/copas"
			echo -n "DNS 1: " 
			read setdns1
			echo -n "DNS 1: " 
			read setdns2
			setprop net.dns1 $setdns1
   			setprop net.dns2 $setdns2
   			sleep 1
   			echo "Manual DNS Sukses"
   			sleep 3
   			nettool
   		elif [ $milihdns  -eq 3 ]; then
			setprop net.dns1 208.67.222.123
   			setprop net.dns2 208.67.220.123
   			sleep 1
   			echo "OpenDNS Family Shield Sukses"
   			sleep 3
   			nettool
		else
			echo "Perintah salah"
			sleep 1
			nettool
			fi
elif [ $option -eq 8 ]; then
	clear
	echo ""
	echo ""
	echo "Silahkan tulis domain, dengan/tanpa www | Contoh: www.google.com atau google.com"
	echo -n "Domain: "
	read fing
	echo "Tunggu sebentar.."
	sleep 2
	echo `ping -c 1 $fing | grep "64 bytes from"|awk '{print $4}'` > /sdcard/ShowIp.txt;
	ping -c 1 $fing | grep "64 bytes from"|awk '{print $4}'
	echo ""
	echo -n "IP "$fing" adalah "
	ping -c 1 $fing | grep "64 bytes from"|awk '{print $4}'
	echo ""
	echo "Alamat IP terdapat di file ShowIp.txt di luar folder memori internal"
	echo -n "Tekan enter.."
	read enterKey
	nettool
elif [ $option -eq 9 ]; then
	clear
	if [ `ifconfig wlan0 | wc -l 2> /dev/null` -eq 0 ]; then
		echo ""
		echo ""
		echo "Hidupkan wifi terlebih dahulu"
		sleep 3
		nettool
	else
		echo ""
		echo ""
		echo ""
		echo "IP WIFI terakhir "
		ifconfig wlan0 | grep "inet " | awk -F'[: ]+' '{ print $4 }'
		echo "Default gateway adalah 192.168.x.1"
		echo ""
		echo ""
		sleep 1
		echo -n "Silahkan masukkan baris 3 angka terakhir 1-255:"
		read gantiip
		echo -n "Silahkan masukkan baris 4 angka terakhir 1-255:"
		read gantiip1
		if [ $gantiip 2>/dev/null -gt "255" ]; then
			echo "Value yang dimaksukkan lebih dari 255"
			echo "Proses dibatalkan.."
			sleep 5
			nettool
		elif [ $gantiip 2>/dev/null -lt "1" ]; then
			echo "Value yang dimaksukkan kurang dari 1"
			echo "Proses dibatalkan.."
			sleep 5
			nettool
		elif [ $gantiip1 2>/dev/null -gt "255" ]; then
			echo "Value yang dimaksukkan lebih dari 255"
			echo "Proses dibatalkan.."
			sleep 5
			nettool
		elif [ $gantiip1 2>/dev/null -lt "1" ]; then
			echo "Value yang dimaksukkan kurang dari 1"
			echo "Proses dibatalkan.."
			sleep 5
			nettool
		else
			echo "IP Address diganti"
			ifconfig wlan0 192.168.$gantiip.$gantiip1/24
			sleep 1
			echo "Ganti IP sukses, mulai ulang koneksi untuk kembali ke semula"
			echo -n "IP saat ini "
			ifconfig wlan0 | grep "inet " | awk -F'[: ]+' '{ print $4 }'
			echo ""
			echo -n "Tekan enter"
			read enterKey
			nettool
		fi
	fi
elif [ $option -eq 10 ]; then
	clear
	echo ""
	echo ""
	echo "Silahkan tunggu.."
	sleep 1
	echo "Internet Booster sedang di proses"
	sleep 3
	ip link set dev rmnet0 mtu 1500 2> /dev/null
	ip link set dev rmnet1 mtu 1500 2> /dev/null
	ip link set dev rmnet2 mtu 1500 2> /dev/null
	ip link set dev rmnet3 mtu 1500 2> /dev/null
	ip link set dev rmnet4 mtu 1500 2> /dev/null
	ip link set dev rmnet5 mtu 1500 2> /dev/null
	ip link set dev rmnet6 mtu 1500 2> /dev/null
	ip link set dev rmnet7 mtu 1500 2> /dev/null
	setprop persist.data_dsc_mtu 1500
	setprop persist.data_netmgrd_mtu 1500
	setprop net.tcp.buffersize.default 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.wifi 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.umts 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.edge 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.gprs 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.evdo 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.evdo_a 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.evdo_b 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.hsdpa 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.hsupa 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.lte 4096,62780,256960,4096,62780,256960
	echo "0" > /proc/sys/net/ipv4/conf/default/secure_redirects;
	echo "0" > /proc/sys/net/ipv4/conf/default/accept_redirects;
	echo "0" > /proc/sys/net/ipv4/conf/default/accept_source_route;
	echo "0" > /proc/sys/net/ipv4/conf/all/secure_redirects;
	echo "0" > /proc/sys/net/ipv4/conf/all/accept_redirects;
	echo "0" > /proc/sys/net/ipv4/conf/all/accept_source_route;
	echo "0" > /proc/sys/net/ipv4/ip_forward;
	echo "0" > /proc/sys/net/ipv4/ip_dynaddr;
	echo "0" > /proc/sys/net/ipv4/ip_no_pmtu_disc;
	echo "0" > /proc/sys/net/ipv4/tcp_ecn;
	echo "0" > /proc/sys/net/ipv4/tcp_timestamps;
	echo "1" > /proc/sys/net/ipv4/tcp_tw_reuse;
	echo "1" > /proc/sys/net/ipv4/tcp_fack;
	echo "1" > /proc/sys/net/ipv4/tcp_sack;
	echo "1" > /proc/sys/net/ipv4/tcp_dsack;
	echo "1" > /proc/sys/net/ipv4/tcp_rfc1337;
	echo "1" > /proc/sys/net/ipv4/tcp_tw_recycle;
	echo "1" > /proc/sys/net/ipv4/tcp_window_scaling;
	echo "1" > /proc/sys/net/ipv4/tcp_moderate_rcvbuf;
	echo "1" > /proc/sys/net/ipv4/tcp_no_metrics_save;
	echo "2" > /proc/sys/net/ipv4/tcp_synack_retries;
	echo "2" > /proc/sys/net/ipv4/tcp_syn_retries;
	echo "5" > /proc/sys/net/ipv4/tcp_keepalive_probes;
	echo "30" > /proc/sys/net/ipv4/tcp_keepalive_intvl;
	echo "30" > /proc/sys/net/ipv4/tcp_fin_timeout;
	echo "1800" > /proc/sys/net/ipv4/tcp_keepalive_time;
	echo "256960" > /proc/sys/net/core/rmem_max;
	echo "256960" > /proc/sys/net/core/wmem_max;
	echo "256960" > /proc/sys/net/core/rmem_default;
	echo "256960" > /proc/sys/net/core/wmem_default;
	echo "4096,16384,404480" > /proc/sys/net/ipv4/tcp_wmem;
	echo "4096,87380,404480" > /proc/sys/net/ipv4/tcp_rmem;
	ip link set dev rmnet0 mtu 1500
	ip link set dev rmnet1 mtu 1500 2> /dev/null
	ip link set dev rmnet2 mtu 1500 2> /dev/null
	ip link set dev rmnet3 mtu 1500 2> /dev/null
	ip link set dev rmnet4 mtu 1500 2> /dev/null
	ip link set dev rmnet5 mtu 1500 2> /dev/null
	ip link set dev rmnet6 mtu 1500 2> /dev/null
	ip link set dev rmnet7 mtu 1500 2> /dev/null
	setprop persist.data_dsc_mtu 1500
	setprop persist.data_netmgrd_mtu 1500
	setprop net.tcp.buffersize.default 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.wifi 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.umts 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.edge 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.gprs 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.evdo 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.evdo_a 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.evdo_b 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.hsdpa 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.hsupa 4096,62780,256960,4096,62780,256960
	setprop net.tcp.buffersize.lte 4096,62780,256960,4096,62780,256960
	echo "0" > /proc/sys/net/ipv4/conf/default/secure_redirects;
	echo "0" > /proc/sys/net/ipv4/conf/default/accept_redirects;
	echo "0" > /proc/sys/net/ipv4/conf/default/accept_source_route;
	echo "0" > /proc/sys/net/ipv4/conf/all/secure_redirects;
	echo "0" > /proc/sys/net/ipv4/conf/all/accept_redirects;
	echo "0" > /proc/sys/net/ipv4/conf/all/accept_source_route;
	echo "0" > /proc/sys/net/ipv4/ip_forward;
	echo "0" > /proc/sys/net/ipv4/ip_dynaddr;
	echo "0" > /proc/sys/net/ipv4/ip_no_pmtu_disc;
	echo "0" > /proc/sys/net/ipv4/tcp_ecn;
	echo "0" > /proc/sys/net/ipv4/tcp_timestamps;
	echo "1" > /proc/sys/net/ipv4/tcp_tw_reuse;
	echo "1" > /proc/sys/net/ipv4/tcp_fack;
	echo "1" > /proc/sys/net/ipv4/tcp_sack;
	echo "1" > /proc/sys/net/ipv4/tcp_dsack;
	echo "1" > /proc/sys/net/ipv4/tcp_rfc1337;
	echo "1" > /proc/sys/net/ipv4/tcp_tw_recycle;
	echo "1" > /proc/sys/net/ipv4/tcp_window_scaling;
	echo "1" > /proc/sys/net/ipv4/tcp_moderate_rcvbuf;
	echo "1" > /proc/sys/net/ipv4/tcp_no_metrics_save;
	echo "2" > /proc/sys/net/ipv4/tcp_synack_retries;
	echo "2" > /proc/sys/net/ipv4/tcp_syn_retries;
	echo "5" > /proc/sys/net/ipv4/tcp_keepalive_probes;
	echo "30" > /proc/sys/net/ipv4/tcp_keepalive_intvl;
	echo "30" > /proc/sys/net/ipv4/tcp_fin_timeout;
	echo "1800" > /proc/sys/net/ipv4/tcp_keepalive_time;
	echo "256960" > /proc/sys/net/core/rmem_max;
	echo "256960" > /proc/sys/net/core/wmem_max;
	echo "256960" > /proc/sys/net/core/rmem_default;
	echo "256960" > /proc/sys/net/core/wmem_default;
	echo "4096,16384,404480" > /proc/sys/net/ipv4/tcp_wmem;
	echo "4096,87380,404480" > /proc/sys/net/ipv4/tcp_rmem;
	echo "Internet sudah di booster, booster lagi jika merasa jaringan lelet"
	echo ""
	echo -n "Tekan enter"
	read enterKey
	nettool
elif [ $option -eq 11 ]; then
	clear
	echo ""
	echo ""
	echo -n "Massukkan IP/Domain: "
	read pingtool
	ping $pingtool
elif [ $option -eq 12 ]; then
	clear
	if [[ `curl -sI sudonano.pe.hu/hosts/hosts.txt | grep Length: | awk '{print $2}'` != `wc -c /system/etc/hosts | awk '{print $1}'` && $hostiklan == "\e[1;31mIklan Belum diblokir\e[0m" ]]; then
		statusupdate="-"
	elif [ `curl -sI sudonano.pe.hu/hosts/hosts.txt | grep Length: | awk '{print $2}'` != `wc -c /system/etc/hosts | awk '{print $1}'` ]; then
		statusupdate="\e[93mPembaruan tersedia\e[0m"
	elif [[ `curl -sI sudonano.pe.hu/hosts/hosts.txt | grep Length: | awk '{print $2}'` == `wc -c /system/etc/hosts | awk '{print $1}'` && $hostiklan == "\e[1;31mIklan Belum diblokir\e[0m" ]]; then
		statusupdate="-"
	else
		statusupdate="\e[32mSudah Terbaru\e[0m"
	fi
	echo ""
	echo ""
	echo "=========================================================="
	echo "          Blokir iklan di Androidmu Sekarang              "
	echo "=========================================================="
	echo ""
	echo "Status: $hostiklan"
	echo "Update: $statusupdate"
	echo ""
	echo "1. Blokir Iklan"
	echo "2. Update blokir iklan"
	echo "3. Hapus Blokir Iklan"
	echo "0. Kembali"
	echo ""
	echo -n "Pilih perintah diatas: "
	read iklannya
	sleep 1
	if [ $iklannya -eq 1 ]; then
		echo -n "Cek koneksi"
		sleep 1
		echo -n "."
		sleep 1
		echo -n "."
		sleep 1
		echo -n "."
		sleep 1
		if ping -q -c 1 -W 1 google.com >/dev/null; then
			echo "\e[1;32m OK!\e[0m"
			sleep 1
		if [ -f /data/hostterinstall ]; then
			echo "Semua Iklan sudah di blokir"
			echo "Tekan enter untuk kembali"
			read enterKey
			nettool
		else
			echo "Perangkat masih terdapat iklan"
			echo -n "Memblokir iklan akan diproses, silahkan tunggu.."
			echo ""
			echo 'cd /sdcard/' >> /data/.blokiriklan.sh
			echo 'wget -O hosts http://sudonano.pe.hu/hosts/hosts.txt &> /dev/null' >> /data/.blokiriklan.sh
			echo 'mv /sdcard/hosts /system/etc/hosts &> /dev/null' >> /data/.blokiriklan.sh
			echo 'chmod 644 /system/etc/hosts &> /dev/null' >> /data/.blokiriklan.sh
			sh /data/.blokiriklan.sh /sdcard/
			echo "Iklan Telah di blokir" >> /data/hostterinstall 
			echo "Blokir semua iklan selesai, tekan enter untuk kembali"
			read enterKey
			nettool
		fi
		else
		echo "\e[1;31m GAGAL!\e[0m"
		sleep 1
		echo ""
		echo "Koneksi mati atau tidak bisa di gunakan, silahkan cek koneksi dan ulangi kembali"
		echo "klik enter untuk kembali"
		read enterKey
		nettool
		fi
	elif [ $iklannya -eq 2 ]; then
		echo -n "Cek koneksi"
		sleep 1
		echo -n "."
		sleep 1
		echo -n "."
		sleep 1
		echo -n "."
		sleep 1
		if ping -q -c 1 -W 1 google.com >/dev/null; then
			echo "\e[1;32m OK!\e[0m"
		sleep 1
		if [ `curl -sI sudonano.pe.hu/hosts/hosts.txt | grep Length: | awk '{print $2}'` == `wc -c /system/etc/hosts | awk '{print $1}'` ]; then
			echo "Blokir Iklan sudah terbaru, enter untuk kembali"
			read enterKey
			nettool
			else
			echo 'echo "Konfigurasi iklan"' >> /data/.updateiklan.sh
			echo 'rm -f /system/etc/hosts &> /dev/null' >> /data/.updateiklan.sh
			echo 'echo "" >> /system/etc/hosts &> /dev/null' >> /data/.updateiklan.sh
			echo 'sleep 2' >> /data/.updateiklan.sh
			echo 'echo "Pembaruan blokir iklan..."' >> /data/.updateiklan.sh
			echo 'sleep 2' >> /data/.updateiklan.sh
			echo 'cd /sdcard/ &> /dev/null' >> /data/.updateiklan.sh
			echo 'wget -O hosts http://sudonano.pe.hu/hosts/hosts.txt &> /dev/null' >> /data/.updateiklan.sh
			echo 'echo "Setting up pemblokiran iklan..."' >> /data/.updateiklan.sh
			echo 'sleep 3' >> /data/.updateiklan.sh
			echo 'mv /sdcard/hosts /system/etc/hosts &> /dev/null' >> /data/.updateiklan.sh
			echo 'chmod 644 /system/etc/hosts &> /dev/null' >> /data/.updateiklan.sh
			sh /data/.updateiklan.sh /sdcard/
			echo "Update selesai, enter untuk kembali"
			read enterKey
			if [ -f /data/.updateiklan.sh ]; then rm -f /data/.updateiklan.sh; fi
			nettool
		fi
		else
			echo "\e[1;31m GAGAL!\e[0m"
			sleep 1
			echo ""
			echo "Koneksi mati atau tidak bisa di gunakan, silahkan cek koneksi dan ulangi kembali"
			echo "klik enter untuk kembali"
			read enterKey
			nettool
		fi
	elif [ $iklannya -eq 3 ]; then
		if [ -f /data/hostterinstall ]; then
			echo ""
			echo ""
			echo "Menghapus blokiran iklan"
			sleep 3
			rm -f /data/hostterinstall
			rm -f /system/etc/hosts
			echo '127.0.0.1 localhost' >> /system/etc/hosts
			echo '::1 localhost #[IPv6]' >> /system/etc/hosts
			chmod 644 /system/etc/hosts
			echo "Blokiran iklan berhasil di hapus, iklan everywhere"
			echo "Enter untuk kembali"
			read enterKey
			nettool
		else
			echo ""
			echo ""
			echo "Pemblokiran iklan belum di pasang, proses dibatalkan"
			sleep 2
			nettool
		fi
	elif [ $iklannya -eq 0 ]; then
		nettool
	else
		clear
		echo "Perintah salah"
		sleep 2
		nettool
	fi
elif [ $option -eq 33 ]; then
	clear
	echo "Silahkan tunggu.."
	sleep 1
	echo "Cek backup"
	if [ -e $sdcard/backupalamathw ]; then
			if [ -e $sdcard/backupalamathwmanual ]; then
				manual1="dan backup manual"
			else
				manual1=""
		fi
			echo "Backup ditemukan " $manual1
		else
			echo "Backup tidak ditemukan"
			sleep 1
			echo "Backup dibuat otomatis"
			echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /data/backupalamathw
			echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /sdcard/backupalamathw
			echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /storage/emulated/0/backupalamathw
			sleep 4
			echo "Backup Selesai, silahkan di cari file (backupalamathw) di luar folder memori internal"
	fi
	echo ""
	echo ""
	echo "WIFI ID TOOLS 1 diproses.."
	sleep 3
	$hack1a
	$hack1b
	echo ""
	echo ""
	echo ""
	echo ""
	echo ""
	echo "TOOLS WIFI ID 1 sukses, silahkan melakukan sesuai Tutorial untuk menggunakan."
	sleep 3
	echo ""
	echo -n "Tekan enter untuk kembali"
	read enterKey
	nettool
elif [ $option -eq 71 ]; then
	clear
	echo "Silahkan tunggu.."
	sleep 1
	echo "Cek backup"
	if [ -e $sdcard/backupalamathw ]; then
			if [ -e $sdcard/backupalamathwmanual ]; then
				manual1="dan backup manual"
			else
				manual1=""
		fi
			echo "Backup ditemukan " $manual1
		else
			echo "Backup tidak ditemukan"
			sleep 1
			echo "Backup dibuat otomatis"
			echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /data/backupalamathw
			echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /sdcard/backupalamathw
			echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /storage/emulated/0/backupalamathw
			sleep 4
			echo "Backup Selesai, silahkan di cari file (backupalamathw) di luar folder memori internal"
	fi
	echo ""
	echo ""
	echo "WIFI ID TOOLS 2 diproses.."
	sleep 3
	$hack2a
	$hack2b
	echo ""
	echo ""
	echo ""
	echo ""
	echo ""
	echo "TOOLS WIFI ID 2 sukses, silahkan melakukan sesuai Tutorial untuk menggunakan."
	sleep 3
	echo ""
	echo -n "Tekan enter untuk kembali"
	read enterKey
	nettool
elif [ $option -eq 45 ]; then
	clear
	echo "Silahkan tunggu.."
	sleep 1
	echo "Cek backup"
	if [ -e $sdcard/backupalamathws ]; then
			if [ -e $sdcard/backupalamathwmanual ]; then
				manual1="dan backup manual"
			else
				manual1=""
		fi
			echo "Backup ditemukan " $manual1
		else
			echo "Backup tidak ditemukan"
			sleep 1
			echo "Backup dibuat otomatis"
			echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /data/backupalamathw
			echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /sdcard/backupalamathw
			echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /storage/emulated/0/backupalamathw
			sleep 4
			echo "Backup Selesai, silahkan di cari file (backupalamathw) di luar folder memori internal"
	fi
	echo ""
	echo ""
	echo "WIFI ID TOOLS 3 diproses.."
	sleep 3
	$hack3a
	$hack3b
	echo ""
	echo ""
	echo ""
	echo ""
	echo ""
	echo "TOOLS WIFI ID 3 sukses, silahkan melakukan sesuai Tutorial untuk menggunakan."
	sleep 3
	echo ""
	echo -n "Tekan enter untuk kembali"
	read enterKey
	nettool
elif [ $option -eq 16 ]; then
	clear
	echo "Silahkan tunggu.."
	sleep 1
	echo "Cek berkas Patch"
	sleep 3
	if [ -f $linkpatch ]; then
		echo "Patch ditemukan.."
		sleep 1
		echo " Cek berkas backup"
		if [ -e $sdcard/backupalamathw ]; then
				echo "Backup ditemukan"
		else
			echo "Backup tidak ditemukan"
			sleep 1
			echo "Backup dibuat otomatis"
			echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /data/backupalamathw
			echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /sdcard/backupalamathw
			echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /storage/emulated/0/backupalamathw
			sleep 4
			echo "Backup Selesai, silahkan di cari file (backupalamathw) di luar folder memori internal"
		fi
		echo "Tools Wifi ID diproses"
		sleep 3
		$patcha
		$patchb
		echo ""
		echo ""
		echo ""
		echo "Patching berkas dan Tools WIFI ID (Premium) sukses, silahkan melakukan sesuai Tutorial untuk menggunakan."
		sleep 3
	else
		clear
		echo ""
   		echo "Patch tidak ditemukan, hubungi pembuat"
   		sleep 1
   		echo "Proses dibatalkan"
	fi
	echo ""
	echo ""
	echo "Tool yang tersedia disini adalah gratis tapi tidak untuk fitur Premium, jika ingin Premium silahkan email ke  untuk mendapatkan Tool Premium"
	echo "Isikan subject 'WIFI ID Premium' dengan format seperti berikut"
	echo "Nama:"
	echo "No. HP:"
	echo -n "Tekan enter"
	read enterKey
	nettool
elif [ $option -eq 99 ]; then
	clear
	echo ""
	echo ""
	echo "1. Pilih salah satu Tools wifi id dan aktifkan"
	echo "2. Sambungkan dengan wifi.id seperti biasa dan redirect ke halaman welcome"
	echo "3. Klik Bagian 'khusus Pelanggan Indihome' dan klik gambar 'Klik Disini'"
	echo "4. Tunggu sesaat sampai keluar Notif 'DEVICE AUTO CONNECT'"
	echo "5. Selesai"
	echo ""
	echo "Note:"
	echo "Versi Premium adalah legal dan permanen, karena ini bukan dari aktifitas pencurian ataupun pengambilan data server."
	echo ""
	echo -n "Tekan enter untuk kembali"
	read enterKey
	nettool
elif [ $option == "hide" ]; then
	clear
	echo ""
	echo ""
	echo "\e[1;39m==========================================================\e[0m"
	echo "\e[1;39m                   HIDEN Tweak Tool Lite                  \e[0m"
	echo "\e[1;39m==========================================================\e[0m"
	echo ""
	echo "\e[1;32mSelamat ini adalah menu hiden dimana berisi Tweak untuk android\e[0m"
	echo ""
	echo "\e[1;32m1. Optimasi Baterai dan Performa\e[0m"
	echo "\e[1;32m2. Optimasi Baterai\e[0m"
	echo "\e[1;32m3. Abaikan optimasi dan kembali ke awal\e[0m"
	echo -n "Pilih angka yang tersedia [1-2]: "
	read tweak
	if [ $tweak -eq 1 ]; then
		echo "Tunggu sebentar.."
		sleep 1
		echo "Optimasi di terapkan"
		sleep 5
		setprop mot.proximity.delay 25
		setprop pm.sleep_mode 1
		setprop ro.config.nocheckin 1
		setprop ro.lge.proximity.delay 25
		setprop windowsmgr.max_events_per_sec 90
		setprop ro.max.fling_velocity 15000
		setprop ro.min.fling_velocity 8000
		setprop touch.pressure.scale 0.1
		setprop persist.sys.purgeable_assets 1
		setprop persist.service.pcsync.enable 0
		setprop persist.service.lgospd.enable 0
		setprop ro.config.hw_power_saving true
		setprop profiler.debugmonitor false
		setprop profiler.launch false
		setprop profiler.hung.dumpdobugreport false
		setprop persist.adb.notify 0
		setprop persist.service.adb.enable 1
		setprop persist.service.debuggable 1
		setprop persist.sys.usb.config mtp,adb
		setprop ro.config.htc.nocheckin 1
		setprop ro.config.nocheckin 1
		setprop ro.kernel.android.checkjni 0
		setprop ro.kernel.checkjni 0
		setprop ro.config.combined_signal true
		setprop ro.config.dha_tunnable 1
		setprop persist.android.strictmode 0
		setprop persist.cust.tel.eons 1
		setprop ro.config.hw_fast_dormancy 1
		setprop ro.ril.sensor.sleep.control 1
		setprop boot.fps 20
		setprop ro.config.hw_quickpoweron true
		setprop persist.sys.shutdown.mode hibernate
		setprop persist.sys.scrollingcache 3
		setprop ro.securestorage.knox false
		setprop debug.performance.tuning 1
		setprop ro.telephony.call_ring.delay 0
		setprop ro.lge.proximity.delay 25
		setprop mot.proximity.delay 25
		setprop media.stagefright.enable-meta true
		setprop media.stagefright.enable-record false
		setprop ro.media.dec.aud.wma.enabled 1
		setprop ro.media.dec.vid.wmv.enabled 1
		setprop persist.telephony.support.ipv6 1
		setprop persist.telephony.support.ipv4 1
		setprop persist.sys.use_dithering 1
		setprop ro.ril.enable.amr.wideband 1
		setprop debug.enabletr true
		setprop debug.overlayui.enable 1
		setprop debug.qctwa.preservebuf 1
		setprop hw3d.force 1
		setprop ro.config.disable.hw_accel false
		setprop ro.fb.mode 1
		setprop ro.sf.compbypass.enable 0
		setprop ro.vold.umsdirtyratio 20
		setprop persist.sys.composition.type c2d
		setprop persist.sys.ui.hw 1
		setprop mpq.audio.decode true
		setprop ro.min_pointer_dur 1
		setprop ro.config.hw_menu_unlockscreen false
		setprop ro.mot.eri.losalert.delay 1000
		setprop ro.telephony.sms_segment_size 160
		setprop hw2d.force 1
		setprop ro.secure 0
		setprop ro.config.hw_new_wifitopdp 1
		setprop vm.dirty_ratio 90
		setprop vm.dirty_background_ratio 70
		setprop vm.vfs_cache_pressure 10
		setprop vm.min_free_kbytes 4096
		setprop ro.lcd_min_brightness 1
		setprop ro.HOME_APP_ADJ 1
		setprop debug.qctwa.statusbar 1
		setprop debug.qc.hardware true
		setprop com.qc.hardware true
		setprop debug.qctwa.preservebuf 1
		setprop profiler.force_disable_err_rpt 1
		setprop profiler.force_disable_ulog 1
		setprop dalvik.vm.verify-bytecode false
		setprop dalvik.vm.execution-mode int:fast
		setprop dalvik.vm.checkjni false
		setprop dalvik.vm.dexopt-data-only 1
		setprop dalvik.vm.lockprof.threshold 250
		setprop dalvik.vm.dexopt-flags m=y
		setprop dalvik.vm.jmiopts forcecopy
		setprop debug.kill_allocating_task 0
		setprop force_hw_ui true
		setprop ro.debuggable 1
		setprop power.saving.mode 1
		setprop ro.ril.disable.power.collapse 0
		setprop ro.ril.power_collapse 1
		setprop power_supply.wakeup enable
		setprop profiler.force_disable_ulog true
		setprop profiler.force_disable_err_rpt true
		setprop profiler.force_disable_err_rpt 1
		setprop profiler.force_disable_ulog 1
		setprop ro.product.gpu.driver 1
		setprop ENFORCE_PROCESS_LIMIT false
		setprop ro.wmt.blcr.enable 0
		setprop tunnel.decode false
		setprop persist.sys.media.use-awesome 1
		setprop sys.keep_app_1 com.bel.android.dspmanager
		setprop ro.audio.samplerate 48000
		setprop ro.audio.pcm.samplerate 48000
		setprop af.resample 52000
		setprop persist.sys.NV_FPSLIMIT 60
		setprop persist.sys.NV_POWERMODE 1
		setprop persist.sys.NV_PROFVER 15
		setprop persist.sys.NV_STEREOCTRL 0
		setprop persist.sys.NV_STEREOSEPCHG 0
		setprop persist.sys.NV_STEREOSEP 20
		setprop ro.media.enc.jpeg.quality 100
		setprop debug.sf.hw 1
		setprop debug.egl.profiler 1
		setprop debug.egl.hw 1
		setprop ro.ril.power_collapse 1
		setprop pm.sleep_mode 1
		setprop wifi.supplicant_scan_interval 180
		setprop power.saving.mode 1
		setprop ro.com.google.networklocation 0
		setprop ro.kernel.android.checkjni 0
		setprop ro.config.nocheckin 1
		setprop dalvik.vm.checkjni false
		setprop dalvik.vm.execution-mode int:jit
		setprop profiler.force_disable_err_rpt 1
		setprop ro.media.enc.jpeg.quality 100
		setprop debug.performance.tuning 1
		setprop persist.sys.use_dithering 0
		setprop persist.sys.use_16bpp_alpha 1
		setprop ro.min.fling_velocity 8000
		setprop ro.mot.eri.losalert.delay 1000
		setprop persist.sys.NV_FPSLIMIT 60
		setprop persist.sys.NV_POWERMODE 1 
		setprop persist.sys.NV_PROFVER 15 
		setprop persist.sys.NV_STEREOCTRL 0 
		setprop persist.sys.NV_STEREOSEPCHG 0 
		setprop persist.sys.NV_STEREOSEP 20 
		setprop persist.sys.purgeable_assets 1
		setprop ro.telephony.call_ring.delay 0
		setprop debug.composition.type c2d
		setprop persist.sys.composition.type c2d
		setprop debug.enabletr true
		setprop debug.overlayui.enable 1
		setprop debug.qctwa.preservebuf 1
		setprop dev.pm.dyn_samplingrate 1
		setprop ro.fb.mode 1
		setprop ro.sf.compbypass.enable 0
		setprop hw3d.force 1
		setprop ro.product.gpu.driver 1
		setprop persist.sampling_profiler 0
		setprop hwui.render_dirty_regions false
		setprop persist.sampling_profiler 0
		setprop persist.sys.ui.hw 1
		setprop ro.config.disable.hw_accel false
		setprop video.accelerate.hw 1
		setprop debug.egl.profiler 1
		setprop debug.egl.hw 1
		setprop ro.vold.umsdirtyratio 20
		setprop hwui.disable_vsync true
		setprop persist.service.lgospd.enable 0
		setprop persist.service.pcsync.enable 0
		setprop touch.pressure.scale 0.001
		setprop windowsmgr.max_events_per_sec 200
		setprop ro.min_pointer_dur 2
		setprop ro.max.fling_velocity 12000
		setprop ro.min.fling_velocity 8000
		setprop net.dns1 8.8.8.8
		setprop net.dns2 8.8.4.4
		setprop net.rmnet0.dns1 8.8.8.8
		setprop net.rmnet0.dns2 8.8.4.4
		setprop net.gprs.dns1 8.8.8.8
		setprop net.gprs.dns2 8.8.4.4
		setprop net.ppp0.dns1 8.8.8.8
		setprop net.ppp0.dns2 8.8.4.4
		setprop net.wlan0.dns1 8.8.8.8
		setprop net.wlan0.dns2 8.8.4.4
		setprop net.eth0.dns1 8.8.8.8
		setprop net.eth0.dns2 8.8.4.4
		setprop ro.ril.hsxpa 2
		setprop ro.ril.hep 1
		setprop ro.ril.enable.dtm 1
		setprop ro.ril.hsdpa.category 28
		setprop ro.ril.enable.a53 1
		setprop ro.ril.enable.3g.prefix 1
		setprop ro.ril.gprsclass 12
		setprop ro.ril.hsupa.category 7
		setprop ro.ril.enable.a52 1
		setprop ro.ril.set.mtu1472 1
		setprop persist.cust.tel.eons 1
		setprop net.tcp.buffersize.default 4096,62780,256960,4096,62780,256960
		setprop net.tcp.buffersize.wifi 4096,62780,256960,4096,62780,256960
		setprop net.tcp.buffersize.umts 4096,62780,256960,4096,62780,256960
		setprop net.tcp.buffersize.edge 4096,62780,256960,4096,62780,256960
		setprop net.tcp.buffersize.gprs 4096,62780,256960,4096,62780,256960
		setprop net.tcp.buffersize.evdo 4096,62780,256960,4096,62780,256960
		setprop net.tcp.buffersize.evdo_a 4096,62780,256960,4096,62780,256960
		setprop net.tcp.buffersize.evdo_b 4096,62780,256960,4096,62780,256960
		setprop net.tcp.buffersize.hsdpa 4096,62780,256960,4096,62780,256960
		setprop net.tcp.buffersize.hsupa 4096,62780,256960,4096,62780,256960
		setprop net.tcp.buffersize.lte 4096,62780,256960,4096,62780,256960
		setprop media.stagefright.enable-http true
		setprop media.stagefright.enable-player true
		setprop media.stagefright.enable-meta true
		setprop media.stagefright.enable-aac true
		setprop media.stagefright.enable-qcp true
		setprop media.stagefright.enable-scan true
		setprop media.stagefright.enable-record true
		setprop captive_portal_detection_enable 0
		setprop dalvik.vm.dex2oat-filter interpret-only
		setprop dalvik.vm.image-dex2oat-filter speed
		LOOP=`ls -d /sys/block/loop*`;
		blk0=`ls -d /sys/block/mmcblk*`;
		RAM=`ls -d /sys/block/ram*`;
		MMC=`ls -d /sys/block/mmc*`;
		for j in $LOOP $RAM; do
			echo 4096 > $j/queue/read_ahead_kb;
		done;
		for a in $blk0  $MMC ; do
			echo 4096 > $a/queue/nr_requests;
		done;
		if [ "`ls /sys/devices/virtual/bdi/179*/read_ahead_kb`" ]; then
			for i in `ls /sys/devices/virtual/bdi/179*/read_ahead_kb`; do
				echo 4096 > $i;
			done;
		fi;
		for r in /sys/block/mmc* ; do
			if [ -e ${r}/device/type ]; then 
				rMMC=`cat ${r}/device/type`
				if [ "$rMMC" == "SD" ]; then 
				echo 4096 >> ${r}/queue/read_ahead_kb;
				fi;
			fi;
		done;
		echo "Optimasi baterai dan performa selesai, restart untuk mengembalikan.."
		echo -n "Tekan enter"
		read enterKey
		nettool
	elif [ $tweak -eq 2 ]; then
		setprop ro.FOREGROUND_APP_ADJ 0
		setprop ro.VISIBLE_APP_ADJ 2
		setprop ro.PERCEPTIBLE_APP_ADJ 2
		setprop ro.HEAVY_WEIGHT_APP_ADJ 4
		setprop ro.SECONDARY_SERVER_ADJ 5
		setprop ro.BACKUP_APP_ADJ 6
		setprop ro.HOME_APP_ADJ 1
		setprop ro.HIDDEN_APP_MIN_ADJ 7
		setprop ro.EMPTY_APP_ADJ 15
		setprop ro.FOREGROUND_APP_MEM 1536
		setprop ro.VISIBLE_APP_MEM 4608
		setprop ro.PERCEPTIBLE_APP_MEM 1024
		setprop ro.HEAVY_WEIGHT_APP_MEM 1280
		setprop ro.SECONDARY_SERVER_MEM 1280
		setprop ro.BACKUP_APP_MEM 12800
		setprop ro.HOME_APP_MEM 1024
		setprop ro.HIDDEN_APP_MEM 12800
		setprop ro.EMPTY_APP_MEM 17920
		setprop ro.ril.gprsclass 12
		setprop ro.ril.hep 1
		setprop ro.ril.hsdpa.category 28
		setprop ro.ril.enable.a53 1
		setprop ro.ril.enable.3g.prefix 1
		setprop ro.ril.htcmaskw1.bitmask 4294967295
		setprop ro.ril.enable.amr.wideband 1
		setprop persist.cust.tel.eons 1
		setprop ro.config.hw_fast_dormancy 1
		setprop ro.ril.hsxpa 5
		setprop ro.ril.enable.dtm 1
		setprop ro.ril.enable.a52 1
		setprop ro.ril.hsupa.category 9
		setprop ro.ril.def.agps.mode 2
		setprop ro.ril.def.agps.feature 1
		setprop ro.ril.enable.sdr 1
		setprop ro.ril.enable.gea3 1
		setprop ro.ril.enable.hsupaind 1
		setprop ro.ril.enable.fd.plmn.prefix 23402,23410,23411
		setprop ro.ril.htcmaskw1 268449905
		setprop net.tcp.buffersize.default 6144,87380,1048576,6144,87380,524288
		setprop net.tcp.buffersize.wifi 524288,1048576,2097152,524288,1048576,2097152
		setprop net.tcp.buffersize.umts 6144,87380,1048576,6144,87380,524288
		setprop net.tcp.buffersize.gprs 6144,87380,1048576,6144,87380,524288
		setprop net.tcp.buffersize.edge 6144,87380,524288,6144,16384,262144
		setprop net.tcp.buffersize.hspa 6144,87380,524288,6144,16384,262144
		setprop net.tcp.buffersize.lte 524288,1048576,2097152,524288,1048576,2097152
		setprop net.tcp.buffersize.hsdpa 6144,87380,1048576,6144,87380,1048576
		setprop net.tcp.buffersize.evdo_b 6144,87380,1048576,6144,87380,1048576
		setprop ro.lge.proximity.delay 25
		setprop mot.proximity.delay 25
		setprop net.ipv4.ip_no_pmtu_disc 0
		setprop net.ipv4.route.flush 1
		setprop net.ipv4.tcp_ecn 0
		setprop net.ipv4.tcp_fack 1
		setprop net.ipv4.tcp_mem 187000,187000,187000
		setprop net.ipv4.tcp_moderate_rcvbuf 1
		setprop net.ipv4.tcp_no_metrics_save 1
		setprop net.ipv4.tcp_rfc1337 1
		setprop net.rmnet0.dns1 208.67.222.222
		setprop net.rmnet0.dns2 208.67.220.220
		setprop net.ppp0.dns1 208.67.222.222
		setprop net.ppp0.dns2 208.67.220.220
		setprop net.dns1 208.67.222.222
		setprop net.dns2 208.67.220.220
		setprop persist.telephony.support.ipv4 1
		setprop persist.telephony.support.ipv6 1
		setprop ro.ril.set.mtu1472 1
		setprop ro.ril.hsxpa 3
		setprop ro.com.android.dataroaming true 
		setprop ro.config.ehrpd true
		setprop video.accelerate.hw 1
		setprop ro.max.fling_velocity 12000
		setprop ro.min.fling_velocity 8000
		setprop ro.media.enc.jpeg.quality 100
		setprop ro.media.dec.jpeg.memcap 8000000
		setprop ro.media.enc.hprof.vid.bps 8000000
		setprop ro.media.enc.hprof.vid.fps 75
		setprop ro.media.capture.maxres 8m
		setprop ro.media.capture.fast.fps 4
		setprop ro.media.capture.slow.fps 120
		setprop ro.media.capture.flashMinV 3300000
		setprop ro.media.capture.torchIntensity 40
		setprop ro.media.capture.flashIntensity 70
		setprop ro.camcorder.videoModes true
		setprop ro.media.panorama.defres 3264x1840
		setprop ro.media.panorama.frameres 1280x720
		setprop debug.sf.hw 1
		setprop persist.sys.use_dithering 0
		setprop media.stagefright.enable-player true
		setprop media.stagefright.enable-meta true
		setprop media.stagefright.enable-scan true
		setprop media.stagefright.enable-http true
		setprop media.stagefright.enable-aac true
		setprop media.stagefright.enable-qcp true
		setprop media.stagefright.enable-record true
		setprop debug.egl.profiler 1
		setprop persist.service.lgospd.enable 0
		setprop persist.service.pcsync.enable 0
		setprop touch.presure.scale 0.001
		setprop persist.sys.use_16bpp_alpha 1
		setprop debug.composition.type c2d
		setprop debug.performance.tuning 1
		setprop debug.enabletr true
		setprop debug.qctwa.preservebuf 1
		setprop dev.pm.dyn_samplingrate 1
		setprop ro.vold.umsdirtyratio 20
		setprop debug.overlayui.enable 1
		setprop debug.egl.hw 1
		setprop ro.fb.mode 1
		setprop persist.sys.composition.type c2d
		setprop persist.sys.ui.hw 1
		setprop ro.sf.compbypass.enable 1
		setprop debug.gr.swapinterval 0
		setprop ro.tether.denied false
		setprop persist.android.strictmode 0
		setprop ro.min_pointer_dur 1
		setprop ro.secure 0
		setprop debug.gr.numframebuffers 3
		setprop windowsmgr.support_rotation_360 true;
		setprop debug.enabletr true
		setprop pm.sleep_mode 1
		setprop ro.ril.disable.power.collapse 1
		setprop ro.config.htc.nocheckin 1
		setprop ro.config.nocheckin 1
		setprop profiler.force_disable_ulog 1
		setprop profiler.force_disable_err_rpt 1
		setprop usb_wakeup enable
		setprop proximity_incall enable
		setprop power_supply.wakeup enable
		setprop ro.config.hw_power_saving 1
		setprop ro.mot.eri.losalert.delay 1000
		setprop ro.kernel.android.checkjni 0
		setprop media.stagefright.enable-player true
		setprop media.stagefright.enable-meta true
		setprop media.stagefright.enable-scan true
		setprop media.stagefright.enable-http true
		setprop windowsmgr.max_events_per_sec 15
		setprop persist.sys.purgeable_assets 1
		setprop dalvik.vm.verify_bytecode false
		setprop dalvik.vm.checkjni false
		setprop dalvik.vm.dexopt-data-only 1
		setprop dalvik.vm.heapstartsize 5m
		setprop dalvik.vm.heapgrowthlimit 48m
		setprop dalvik.vm.verify-bytecode false
		setprop dalvik.vm.execution-mode int:jit
		setprop dalvik.vm.lockprof.threshold 250
		setprop dalvik.vm.dexopt-flags m=v,o=y
		setprop dalvik.vm.stack-trace-file /data/anr/traces.txt
		setprop dalvik.vm.jmiopts forcecopy
		setprop dalvik.gc.type precise
		setprop persist.adb.notify 0
		setprop ro.config.hwfeature_wakeupkey 0
		setprop ro.config.hw_quickpoweron true
		setprop mot.proximity.delay 150
		setprop ro.telephony.call_ring.delay 0
		setprop ring.delay 0
		setprop ro.ril.sensor.sleep.control 1
		setprop ro.ril.enable.amr.wideband 1
		setprop ro.kernel.checkjni 0
		LOOP=`ls -d /sys/block/loop*`;
		blk0=`ls -d /sys/block/mmcblk*`;
		RAM=`ls -d /sys/block/ram*`;
		MMC=`ls -d /sys/block/mmc*`;
		for j in $LOOP $RAM; do
			echo 2048 > $j/queue/read_ahead_kb;
		done;
		for a in $blk0  $MMC ; do
			echo 2048 > $a/queue/nr_requests;
		done;
		if [ "`ls /sys/devices/virtual/bdi/179*/read_ahead_kb`" ]; then
			for i in `ls /sys/devices/virtual/bdi/179*/read_ahead_kb`; do
				echo 2048 > $i;
			done;
		fi;
		for r in /sys/block/mmc* ; do
			if [ -e ${r}/device/type ]; then 
				rMMC=`cat ${r}/device/type`
				if [ "$rMMC" == "SD" ]; then 
				echo 2048 >> ${r}/queue/read_ahead_kb;
				fi;
			fi;
		done;
		echo "Optimasi baterai selesai, restart untuk mengembalikan.."
		echo -n "Tekan enter"
		read enterKey
		nettool
	elif [ $tweak -eq 3 ]; then
		clear
		sleep 1
		nettool
	else
		echo "Perintah salah"
		echo -n "Tekan enter"
		read enterKey
		sleep 1
		clear
		nettool
	fi
elif [ $option -eq 13 ]; then
	clear
	if [ -f /system/bin/nmap ];then
		if [ `arp -a | grep "?" | awk '{print $2}' | wc -l 2>/dev/null` -eq 1 ]; then
			iphost678="\e[1;32m`arp -a | awk '{print $2}' 2>/dev/null`\e[0m"
			clear
			echo ""
			echo ""
			echo "=========================================================="
			echo "               Daftar IP dan MAC Address                  "
			echo "=========================================================="
			echo "             IP Host Router $iphost678"
			echo ""
			echo "Ganti baris tiga sesuai dengan IP HOST, cnth 192.168.x.1"
			echo -n "Ganti x dengan: "
			read gantiipnmap
			if [ $gantiipnmap 2>/dev/null -gt "255" ]; then
				echo "Value yang dimaksukkan lebih dari 255"
				echo "Proses dibatalkan.."
				sleep 5
				nettool
			elif [ $gantiipnmap 2>/dev/null -lt "1" ]; then
				echo "Value yang dimaksukkan kurang dari 1"
				echo "Proses dibatalkan.."
				sleep 5
				nettool
			else
				echo ""
				echo -n `nmap -sP 192.168.$gantiipnmap.0/24 | awk '/Host/{printf $2;}/MAC Address:/{print " => "$3;}'`
			fi
			echo ""
			echo ""
			echo "Ketik 'ip' untuk ganti IP Address dan"
			echo "Ketik 'macchanger' untuk ganti MAC Address"
			echo -n "Ketik 'exit' kembali: "
			read hacknano
			if [ $hacknano == "ip" ]; then
				echo ""
				echo ""
				echo "Ganti 192.168.x.x (baris 3 dan 4)"
				echo ""
				echo -n "Silahkan masukkan baris 3 angka terakhir 2-255: "
				read gantiip90
				echo ""
				echo -n "Silahkan masukkan baris 4 angka terakhir 2-255: "
				read gantiip91
				if [ $gantiip90 2>/dev/null -gt "255" ]; then
					echo "Value yang dimaksukkan lebih dari 255"
					echo "Proses dibatalkan.."
					sleep 5
					nettool
				elif [ $gantiip90 2>/dev/null -lt "1" ]; then
					echo "Value yang dimaksukkan kurang dari 1"
					echo "Proses dibatalkan.."
					sleep 5
					nettool
				elif [ $gantiip91 2>/dev/null -gt "255" ]; then
					echo "Value yang dimaksukkan lebih dari 255"
					echo "Proses dibatalkan.."
					sleep 5
					nettool
				elif [ $gantiip91 2>/dev/null -lt "1" ]; then
					echo "Value yang dimaksukkan kurang dari 1"
					echo "Proses dibatalkan.."
					sleep 5
					nettool
				else
					echo "IP Address diganti"
					ifconfig wlan0 192.168.$gantiip90.$gantiip91/24 2>/dev/null
					sleep 1
					echo "Ganti IP sukses, mulai ulang koneksi untuk kembali ke semula"
					echo -n "IP saat ini: "
					ifconfig wlan0 | grep "inet " | awk -F'[: ]+' '{ print $4 }'
					echo ""
					echo -n "Tekan enter"
					read enterKey
					nettool
				fi
			elif [ $hacknano == "macchanger" ]; then
				echo ""
				echo ""
   				echo "Mengecek berkas backup"
   				sleep 1
				if [ -e $sdcard/backupalamathw ]; then
					if [ -e $sdcard/backupalamathwmanual ]; then
						manual="dan backup manual"
						else
						manual=""
					fi
   					echo -n "Sudah melakukan backup langsung "
   					$manual
   				else
   					echo "Tidak ada berkas backup"
					echo ""
					echo "Backup dibuat otomatis"
					echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /data/backupalamathw
					echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /sdcard/backupalamathw
					echo ifconfig wlan0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}' >> /storage/emulated/0/backupalamathw
					sleep 2
					echo -n "Backup selesai, tekan enter untuk melanjutkan"
   					read enterKey
   				fi
   				sleep 1
   				echo -n "Tulis/paste kan Alamat HW: "
				read macchanger99
				ip link set wlan0 address $macchanger99
				ip link set wlan0 broadcast $macchanger99
				sleep 2
   				echo "Pengubahan Selesai"
   				sleep 1
   				echo -n "Tekan enter untuk kembali"
				read enterKey
				nettool
			elif [ $hacknano == "exit" ]; then
				nettool
			else
				echo ""
				echo "Kesalahan perintah"
				sleep 1
				echo "Proses dibatalkan"
				sleep 3
				nettool
			fi
		else
			iphost678=" Tidak Terkoneksi"
			clear
			echo ""
			echo ""
			echo "=========================================================="
			echo "               Daftar IP dan MAC Address                  "
			echo "=========================================================="
			echo "           IP Host Router $iphost678"
			echo ""
			echo "Tidak tersambung dengan WIFI, enter untuk kembali ke menu "
			read enterKey
			nettool
		fi
	else
		clear
		if [ `ifconfig wlan0 2>/dev/null | grep inet\ addr | wc -l` -eq 1 ]; then
		echo ""
		echo ""
		echo "=========================================================="
		echo "               Daftar IP dan MAC Address                  "
		echo "=========================================================="
		echo ""
		echo "\e[1;31m             File dukungan belum di instal\e[0m"
		echo ""
		echo "Ketik 'instal' untuk instal 'exit' untuk kembali"
		echo -n "Ketik disini: "
		read instalnmap
			if [ $instalnmap = "instal" ]; then
				echo -n "Cek koneksi"
				sleep 1
				echo -n "."
				sleep 1
				echo -n "."
				sleep 1
				echo -n "."
				sleep 1
				if ping -q -c 1 -W 1 google.com >/dev/null; then
					echo "\e[1;32m OK!\e[0m"
					sleep 1
					echo "File dukungan akan di instal"
					echo -n "Instal file"
					echo 'mkdir /sdcard/nmap/ 2> /dev/null' >> /data/.instaldukungan.sh
					echo 'mkdir /data/bin/ 2> /dev/null' >> /data/.instaldukungan.sh
					echo 'cd /sdcard/nmap/' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 1..."' >> /data/.instaldukungan.sh
					echo 'wget sudonano.pe.hu/nmap/foo &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 2..."' >> /data/.instaldukungan.sh
					echo 'wget sudonano.pe.hu/nmap/nmap &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 3..."' >> /data/.instaldukungan.sh
					sleep 1
					echo -n "."
					echo 'wget sudonano.pe.hu/nmap/nmap-4.01-1.spec &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 4..."' >> /data/.instaldukungan.sh
					echo 'wget sudonano.pe.hu/nmap/nmap-mac-prefixes &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 5..."' >> /data/.instaldukungan.sh
					echo 'wget sudonano.pe.hu/nmap/nmap-os-fingerprints &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 6..."' >> /data/.instaldukungan.sh
					sleep 1
					echo -n "."
					echo 'wget sudonano.pe.hu/nmap/nmap-protocols &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 7..."' >> /data/.instaldukungan.sh
					echo 'wget sudonano.pe.hu/nmap/nmap-rpc &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 8..."' >> /data/.instaldukungan.sh
					sleep 1
					echo "."
					echo 'wget sudonano.pe.hu/nmap/nmap-service-probes &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 9..."' >> /data/.instaldukungan.sh
					echo 'wget sudonano.pe.hu/nmap/nmap-services &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					sh /data/.instaldukungan.sh /sdcard/nmap/
					echo "Konfigurasi file"
					mv /sdcard/nmap/nmap-4.01-1.spec /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap-mac-prefixes /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap-os-fingerprints /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap-protocols /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap-rpc /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap-service-probes /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap-services /data/bin/ 2>/dev/null
					mv /sdcard/nmap/foo /system/bin/nmap 2>/dev/null
					chmod 755 /system/bin/nmap 2>/dev/null
					chmod 755 /data/bin/nmap 2>/dev/null
					if [ -d /sdcard/nmap/ ]; then rm -rf /sdcard/nmap/; fi
					if [ -f /data/.instaldukungan.sh ]; then rm /data/.instaldukungan.sh ; fi
					sleep 3
					echo -n "Instal selesai dan dapat digunakan, silahkan enter untuk kembali "
					read enterKey
					nettool
				else
					echo "\e[1;31m GAGAL!\e[0m"
					sleep 1
					echo ""
					echo "Koneksi mati atau tidak bisa di gunakan, silahkan cek koneksi dan ulangi kembali"
					echo "klik enter untuk kembali"
					read enterKey
					nettool
				fi
			elif [ $instalnmap == "exit" ]; then
					nettool
			else
					echo "Perintah salah"
					sleep 1
					nettool
			fi
		elif [ `ifconfig rmnet_data0 2>/dev/null | grep inet\ addr | wc -l` -eq 1 ]; then
				echo ""
				echo ""
				echo "=========================================================="
				echo "               Daftar IP dan MAC Address                  "
				echo "=========================================================="
				echo ""
				echo "\e[1;31m             File dukungan belum di instal\e[0m"
				echo ""
				echo "Ketik 'instal' untuk instal 'exit' untuk kembali"
				echo -n "Ketik disini: "
				read instalnmap
				if [ $instalnmap = "instal" ]; then
					echo -n "Cek koneksi"
					sleep 1
					echo -n "."
					sleep 1
					echo -n "."
					sleep 1
					echo -n "."
					sleep 1
				if ping -q -c 1 -W 1 google.com >/dev/null; then
					echo "\e[1;32m OK!\e[0m"
					sleep 1
					echo "File dukungan akan di instal"
					echo -n "Instal file"
					echo 'mkdir /sdcard/nmap/ 2> /dev/null' >> /data/.instaldukungan.sh
					echo 'mkdir /data/bin/ 2> /dev/null' >> /data/.instaldukungan.sh
					echo 'cd /sdcard/nmap/' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 1..."' >> /data/.instaldukungan.sh
					echo 'wget sudonano.pe.hu/nmap/foo &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 2..."' >> /data/.instaldukungan.sh
					echo 'wget sudonano.pe.hu/nmap/nmap &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 3..."' >> /data/.instaldukungan.sh
					sleep 1
					echo -n "."
					echo 'wget sudonano.pe.hu/nmap/nmap-4.01-1.spec &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 4..."' >> /data/.instaldukungan.sh
					echo 'wget sudonano.pe.hu/nmap/nmap-mac-prefixes &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 5..."' >> /data/.instaldukungan.sh
					echo 'wget sudonano.pe.hu/nmap/nmap-os-fingerprints &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 6..."' >> /data/.instaldukungan.sh
					sleep 1
					echo -n "."
					echo 'wget sudonano.pe.hu/nmap/nmap-protocols &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 7..."' >> /data/.instaldukungan.sh
					echo 'wget sudonano.pe.hu/nmap/nmap-rpc &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 8..."' >> /data/.instaldukungan.sh
					sleep 1
					echo "."
					echo 'wget sudonano.pe.hu/nmap/nmap-service-probes &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					echo 'echo -n "Unduh File 9..."' >> /data/.instaldukungan.sh
					echo 'wget sudonano.pe.hu/nmap/nmap-services &>/dev/null' >>  /data/.instaldukungan.sh
					echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.instaldukungan.sh
					sh /data/.instaldukungan.sh /sdcard/nmap/
					echo "Konfigurasi file"
					mv /sdcard/nmap/nmap-4.01-1.spec /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap-mac-prefixes /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap-os-fingerprints /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap-protocols /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap-rpc /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap-service-probes /data/bin/ 2>/dev/null
					mv /sdcard/nmap/nmap-services /data/bin/ 2>/dev/null
					mv /sdcard/nmap/foo /system/bin/nmap 2>/dev/null
					chmod 755 /system/bin/nmap 2>/dev/null
					chmod 755 /data/bin/nmap 2>/dev/null
					if [ -d /sdcard/nmap/ ]; then rm -rf /sdcard/nmap/; fi
					if [ -f /data/.instaldukungan.sh ]; then rm /data/.instaldukungan.sh ; fi
					sleep 3
					echo -n "Instal selesai dan dapat digunakan, silahkan enter untuk kembali "
					read enterKey
					nettool
				else
					echo "\e[1;31m GAGAL!\e[0m"
					sleep 1
					echo ""
					echo "Koneksi mati atau tidak bisa di gunakan, silahkan cek koneksi dan ulangi kembali"
					echo "klik enter untuk kembali"
					read enterKey
					nettool
				fi
				elif [ $instalnmap == "exit" ]; then
					nettool
				else
					echo "Perintah salah"
					sleep 1
					nettool
				fi
		else
				echo ""
				echo ""
				echo "=========================================================="
				echo "               Daftar IP dan MAC Address                  "
				echo "=========================================================="
				echo ""
				echo "         Koneksi tidak aktif atau tidak tersedia"
				echo "                   Proses dibatalkan"
				sleep 3
				nettool
		fi
	fi
elif [ $option -eq 42 ]; then
	clear
	echo ""
	echo ""
	echo "=========================================================="
	echo "                  KALI LINUX on ANDROID                   "
	echo "=========================================================="
	echo ""
	echo "1. Jalankan KALI LINUX"
	echo "2. Jalankan KALI LINUX (Hanya setelah reboot)"
	echo "3. Kembali"
	echo ""
	echo -n "Pilih opsi [1-3]: "
	read opsikali
	echo "Cek berkas"
	sleep 1
	if [ $opsikali -eq 1 ]; then
		if [ -f "/data/.bootkali.sh" ]; then
		echo "Berkas tersedia"
		clear
		echo "=========================================================="
		echo "|                                                        |"
		echo "|              Menjalankan Kali Linux ARM                |"
		echo "|        Ketik 'exit' untuk keluar dari Kali ARM         |"
		echo "|       Lakukan apt-get update && apt-get upgrade        |"
		echo "|   'unset LD_PRELOAD', jika terdapat error LD_PRELOAD   |"
		echo "|                                                        |"
		echo "|         NETTOOLS@NANO2017 dengan KALI LINUX            |"
		echo "=========================================================="
		sleep 1
		echo ""
		if [ -f /data/.runkali.sh ]; then
			sh /data/.runkali.sh
		else
			echo 'if [ -f /system/bin/busybox ]; then' >> /data/.runkali.sh
			echo '	export bbox=/system/bin/busybox' >> /data/.runkali.sh
			echo 'else' >> /data/.runkali.sh
			echo '	export bbox=/system/xbin/busybox' >> /data/.runkali.sh
			echo 'fi' >> /data/.runkali.sh
			echo 'export usermounts=android 2> /dev/null' >> /data/.runkali.sh
			echo 'export bin=/system/bin 2> /dev/null' >> /data/.runkali.sh
			echo 'export mnt=/data/local/mnt 2> /dev/null' >> /data/.runkali.sh
			echo 'export USER=root 2> /dev/null' >> /data/.runkali.sh
			echo 'if [[ ! -d $mnt ]]; then mkdir $mnt; fi 2> /dev/null' >> /data/.runkali.sh
			echo 'export PATH=$bin:/usr/bin:/usr/local/bin:/usr/sbin:/bin:/usr/local/sbin:/usr/games:$PATH 2> /dev/null' >> /data/.runkali.sh
			echo 'export TERM=linux 2> /dev/null' >> /data/.runkali.sh
			echo 'export HOME=/root 2> /dev/null' >> /data/.runkali.sh
			echo 'export kit=/sdcard/kali 2> /dev/null' >> /data/.runkali.sh
			echo 'export bin=/system/bin 2> /dev/null' >> /data/.runkali.sh
			echo 'export mnt=/data/local/mnt 2> /dev/null' >> /data/.runkali.sh
			echo 'if ! ls /data/local/ | fgrep mnt &> /dev/null; 2> /dev/null' >> /data/.runkali.sh
			echo ' then 2> /dev/null' >> /data/.runkali.sh
			echo '   mkdir $mnt 2> /dev/null' >> /data/.runkali.sh
			echo 'fi 2> /dev/null' >> /data/.runkali.sh
			echo 'export PATH=$bin:/usr/bin:/usr/local/bin:/usr/sbin:/bin:/usr/local/sbin:/usr/games:$PATH 2> /dev/null' >> /data/.runkali.sh
			echo 'export TERM=linux 2> /dev/null' >> /data/.runkali.sh
			echo 'export HOME=/root 2> /dev/null' >> /data/.runkali.sh
			echo 'mount -o loop,bind,noatime -t ext4 $kit/kali.img $mnt 2> /dev/null' >> /data/.runkali.sh
			echo 'losetup /dev/block/loop255 $kit/kali.img 2> /dev/null' >> /data/.runkali.sh
			echo 'mount -t ext4 /dev/block/loop255 $mnt 2> /dev/null' >> /data/.runkali.sh
			echo 'mount -o bind /dev/ashmem $mnt/dev/ashmem 2> /dev/null' >> /data/.runkali.sh
			echo 'mount -t devpts devpts $mnt/dev/pts 2> /dev/null' >> /data/.runkali.sh
			echo 'mount -t proc proc $mnt/proc 2> /dev/null' >> /data/.runkali.sh
			echo 'mount -t sysfs sysfs $mnt/sys 2> /dev/null' >> /data/.runkali.sh
			echo '	if [ -d /sdcard/ ]; then $bbox mount -o bind /sdcard/ $mnt/sdcard; fi 2> /dev/null' >> /data/.runkali.sh
			echo '	if [ -d /sdcard/external_sd ]; then $bbox mount -o bind /sdcard/external_sd  $mnt/external_sd; fi 2> /dev/null' >> /data/.runkali.sh
			echo '	if [ -d /Removable/MicroSD ]; then $bbox mount -o bind /Removable/MicroSD  $mnt/external_sd; fi 2> /dev/null' >> /data/.runkali.sh
			echo '	if [ -d /storage ]; then $bbox mount -o bind /storage  $mnt/external_sd; fi 2> /dev/null' >> /data/.runkali.sh
			echo 'if [ -f $imgfile.mounts ]; then' >> /data/.runkali.sh
			echo '	olddir=$(pwd)' >> /data/.runkali.sh
			echo '	echo "Mounting pengguna mounts"' >> /data/.runkali.sh
			echo '	cd $mnt' >> /data/.runkali.sh
			echo '	if [[ ! -d $mnt/$usermounts ]]; then $bbox mkdir -p $usermounts; fi' >> /data/.runkali.sh
			echo '	echo "# Script untuk unmount ditetapkan pengguna mounts, jangan di hapus atau mengedit!" > $imgfile.shutdown' >> /data/.runkali.sh
			echo '	echo "cd $mnt/$usermounts" > $imgfile.shutdown' >> /data/.runkali.sh
			echo '	cd $mnt/$usermounts' >> /data/.runkali.sh
			echo '	for entry in $(cat "$imgfile.mounts"); do' >> /data/.runkali.sh
			echo '		ANDROID=${entry%;*}' >> /data/.runkali.sh
			echo '		LINUX=${entry#*;}' >> /data/.runkali.sh
			echo '		if [[ -d $ANDROID ]]; then' >> /data/.runkali.sh
			echo '			echo -n "Mounting $ANDROID to $usermounts/$LINUX... "' >> /data/.runkali.sh
			echo '			if [[ ! -d $mnt/$usermounts/$LINUX ]]; then $bbox mkdir -p $LINUX; fi' >> /data/.runkali.sh
			echo '			$bbox mount -o bind $ANDROID $mnt/$usermounts/$LINUX &> /dev/null' >> /data/.runkali.sh
			echo '			if [ $? -ne 0 ];then' >> /data/.runkali.sh
			echo '				echo FAIL' >> /data/.runkali.sh
			echo '				if [[ -d $mnt/$usermounts/$LINUX ]]; then $bbox rmdir -p $LINUX; fi' >> /data/.runkali.sh
			echo '			else' >> /data/.runkali.sh
			echo '				echo OK' >> /data/.runkali.sh
			echo '				echo "$bbox umount $mnt/$usermounts/$LINUX" >> $imgfile.shutdown' >> /data/.runkali.sh
			echo '				echo "$bbox rmdir -p $LINUX" >> $imgfile.shutdown' >> /data/.runkali.sh
			echo '			fi' >> /data/.runkali.sh
			echo '		else' >> /data/.runkali.sh
			echo '			echo "Folder android tidak ditemukan: $ANDROID"' >> /data/.runkali.sh
			echo '		fi' >> /data/.runkali.sh
			echo '	done' >> /data/.runkali.sh
			echo '	echo "cd $mnt" >> $imgfile.shutdown' >> /data/.runkali.sh
			echo '	echo "$bbox rmdir -p $usermounts" >> $imgfile.shutdown' >> /data/.runkali.sh
			echo '	cd $olddir' >> /data/.runkali.sh
			echo 'else' >> /data/.runkali.sh
			echo '	echo "Tidak ada pengguna yang ditetapkan sebagai mount point"' >> /data/.runkali.sh
			echo 'fi' >> /data/.runkali.sh
			echo 'busybox sysctl -w net.ipv4.ip_forward=1 2> /dev/null' >> /data/.runkali.sh
			echo 'echo "nameserver 8.8.8.8" > $mnt/etc/resolv.conf 2> /dev/null' >> /data/.runkali.sh
			echo 'echo "nameserver 8.8.4.4" >> $mnt/etc/resolv.conf 2> /dev/null' >> /data/.runkali.sh
			echo 'echo "127.0.0.1 localhost kali" > $mnt/etc/hosts 2> /dev/null' >> /data/.runkali.sh
			echo 'export mnt=/data/local/mnt' >> /data/.runkali.sh
			echo 'busybox chroot $mnt /bin/bash -i' >> /data/.runkali.sh
			echo 'echo "Mematikan KALI LINUX"' >> /data/.runkali.sh
			echo 'sleep 3' >> /data/.runkali.sh
			echo "for pid in `$bbox lsof | $bbox grep $mnt | $bbox sed -e's/  / /g' | $bbox cut -d' ' -f2`; do $bbox kill -9 $pid >/dev/null 2>&1; done" >> /data/.runkali.sh
			echo 'sleep 5' >> /data/.runkali.sh
			echo 'if [ -f $imgfile.shutdown ]; then' >> /data/.runkali.sh
			echo '	sh $imgfile.shutdown' >> /data/.runkali.sh
			echo '	rm $imgfile.shutdown' >> /data/.runkali.sh
			echo 'fi' >> /data/.runkali.sh
			echo '$bbox umount $mnt/root/cfg' >> /data/.runkali.sh
			echo '$bbox umount $mnt/sdcard' >> /data/.runkali.sh
			echo '$bbox umount $mnt/external_sd' >> /data/.runkali.sh
			echo '$bbox umount $mnt/dev/pts' >> /data/.runkali.sh
			echo '$bbox umount $mnt/dev' >> /data/.runkali.sh
			echo '$bbox umount $mnt/proc' >> /data/.runkali.sh
			echo '$bbox umount $mnt/sys' >> /data/.runkali.sh
			echo '$bbox umount $mnt' >> /data/.runkali.sh
			echo '$bbox losetup -d /dev/block/loop255 &> /dev/null' >> /data/.runkali.sh
			echo 'nettool' >> /data/.runkali.sh
			echo '#!/system/bin/sh' >> /system/bin/kali
			echo 'sh /data/.runkali.sh' >> /system/bin/kali
			sh /data/.runkali.sh
		fi
		else
		echo "Berkas tidak tersedia"
		sleep 1
		echo "Setup boot Kali Linux"
		echo "Pastikan tidak ada aplikasi linux deploy, complete linux installer"
		echo "Enter untuk melanjutkan"
		read enterKey
		if [ -f /sdcard/kali/kali.img ]; then
			echo "Mengecek ketersediaan busybox"
			sleep 2
			if [ -f /system/bin/busybox &>/dev/null ]; then
				echo "Busybox tesedia"
				echo "Tunggu 5 detik.."
				sleep 5
				echo 'cd /sdcard/kali/' >> /data/.bootkali.sh
				echo 'error_exit() {' >> /data/.bootkali.sh
				echo '    echo "Error: $1"' >> /data/.bootkali.sh
				echo '    exit 1' >> /data/.bootkali.sh
				echo '    echo -n "Tekan Enter untuk kembali"' >> /data/.bootkali.sh
				echo '    read enterKey' >> /data/.bootkali.sh
				echo '    nettool' >> /data/.bootkali.sh
				echo '}' >> /data/.bootkali.sh
				echo 'if [ -f /system/bin/busybox ]; then' >> /data/.bootkali.sh
				echo '	export bbox=/system/bin/busybox' >> /data/.bootkali.sh
				echo 'else' >> /data/.bootkali.sh
				echo '	export bbox=/system/xbin/busybox' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'export usermounts=android' >> /data/.bootkali.sh
				echo 'export imgfile=$(dirname $0)/kali.img' >> /data/.bootkali.sh
				echo 'export bin=/system/bin' >> /data/.bootkali.sh
				echo 'export mnt=/data/local/mnt' >> /data/.bootkali.sh
				echo 'export USER=root' >> /data/.bootkali.sh
				echo 'if [[ ! -d $mnt ]]; then mkdir $mnt; fi' >> /data/.bootkali.sh
				echo 'export PATH=$bin:/usr/bin:/usr/local/bin:/usr/sbin:/bin:/usr/local/sbin:/usr/games:$PATH' >> /data/.bootkali.sh
				echo 'export TERM=linux' >> /data/.bootkali.sh
				echo 'export HOME=/root' >> /data/.bootkali.sh
				echo 'if [ $# -ne 0 ]; then' >> /data/.bootkali.sh
				echo '	if [ -f $1 ]; then' >> /data/.bootkali.sh
				echo '		imgfile=$1' >> /data/.bootkali.sh
				echo '	elif [ -f $(dirname $0)/$1 ]; then' >> /data/.bootkali.sh
				echo '		imgfile=$(dirname $0)/$1' >> /data/.bootkali.sh
				echo '	else' >> /data/.bootkali.sh
				echo '		error_exit "File image tidak ditemukan!($1)"' >> /data/.bootkali.sh
				echo '	fi' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'if [ -f $imgfile.md5 ]; then' >> /data/.bootkali.sh
				echo '	echo "File MD5 ditemukan, gunakan untuk memeriksa berkas .img? (y/n)"' >> /data/.bootkali.sh
				echo '	read answer' >> /data/.bootkali.sh
				echo '	if [ $answer == y ]; then' >> /data/.bootkali.sh
				echo '		echo -n "Validasi image checksum... "' >> /data/.bootkali.sh
				echo '		$bbox md5sum -c -s $imgfile.md5' >> /data/.bootkali.sh
				echo '		if [ $? -ne 0 ];then' >> /data/.bootkali.sh
				echo '			echo "GAGAL!"' >> /data/.bootkali.sh
				echo '			error_exit "Checksum gagal! IMG rusak!"' >> /data/.bootkali.sh
				echo '		else' >> /data/.bootkali.sh
				echo '			echo "OK"' >> /data/.bootkali.sh
				echo '			rm $imgfile.md5' >> /data/.bootkali.sh
				echo '		fi' >> /data/.bootkali.sh
				echo '	fi' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'use_swap=no' >> /data/.bootkali.sh
				echo 'cfgfile=$imgfile.config' >> /data/.bootkali.sh
				echo 'if [ -f $imgfile.config ]; then' >> /data/.bootkali.sh
				echo '	source $imgfile.config' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'if [ $use_swap == yes ]; then' >> /data/.bootkali.sh
				echo '	if [ -f $imgfile.swap ]; then' >> /data/.bootkali.sh
				echo '		echo "Swap file ditemukan, menggunakan berkas"' >> /data/.bootkali.sh
				echo '		echo "Menyalakan swap (jika kesalahan di sini Anda tidak memiliki dukungan Swap)"' >> /data/.bootkali.sh
				echo '		swapon $imgfile.swap' >> /data/.bootkali.sh
				echo '	else' >> /data/.bootkali.sh
				echo '		echo "Membuat file Swap"' >> /data/.bootkali.sh
				echo '		dd if=/dev/zero of=$imgfile.swap bs=1048576 count=1024' >> /data/.bootkali.sh
				echo '		mkswap $imgfile.swap' >> /data/.bootkali.sh
				echo '		echo "Menyalakan swap (jika kesalahan di sini Anda tidak memiliki dukungan Swap)"' >> /data/.bootkali.sh
				echo '		swapon $imgfile.swap' >> /data/.bootkali.sh
				echo '	fi' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'echo -n "Memeriksa perangkat loop..."' >> /data/.bootkali.sh
				echo 'if [ -b /dev/block/loop255 ]; then' >> /data/.bootkali.sh
				echo '	echo "DITEMUKAN"' >> /data/.bootkali.sh
				echo 'else' >> /data/.bootkali.sh
				echo '	echo "HILANG"' >> /data/.bootkali.sh
				echo '	echo -n "Menciptakan perangkat loop..."' >> /data/.bootkali.sh
				echo '	$bbox mknod /dev/block/loop255 b 7 255' >> /data/.bootkali.sh
				echo '	if [ -b /dev/block/loop255 ]; then' >> /data/.bootkali.sh
				echo '		echo "OK"' >> /data/.bootkali.sh
				echo '	else' >> /data/.bootkali.sh
				echo '		echo "GAGAL"' >> /data/.bootkali.sh
				echo '		error_exit "Tidak dapat membuat perangkat loop!"' >> /data/.bootkali.sh
				echo '	fi' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo '$bbox losetup /dev/block/loop255 $imgfile' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat melampirkan file img ke perangkat loop! (Image = $imgfile)"; fi' >> /data/.bootkali.sh
				echo '$bbox mount -t ext4 /dev/block/loop255 $mnt' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat me-mount perangkat loop!"; fi' >> /data/.bootkali.sh
				echo '$bbox mount -t devpts devpts $mnt/dev/pts' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat me-mount $mnt/dev/pts!"; fi' >> /data/.bootkali.sh
				echo '$bbox mount -t proc proc $mnt/proc' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat me-mount $mnt/proc!"; fi' >> /data/.bootkali.sh
				echo '$bbox mount -t sysfs sysfs $mnt/sys' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat me-mount $mnt/sys!"; fi' >> /data/.bootkali.sh
				echo '$bbox mount -o bind /sdcard $mnt/sdcard' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat mengikat $mnt/sdcard!"; fi' >> /data/.bootkali.sh
				echo 'if [[ ! -d $mnt/root/cfg ]]; then mkdir $mnt/root/cfg; fi' >> /data/.bootkali.sh
				echo '$bbox mount -o bind $(dirname $imgfile) $mnt/root/cfg' >> /data/.bootkali.sh
				echo 'if [ -d /sdcard/external_sd ]; then' >> /data/.bootkali.sh
				echo '	$bbox mount -o bind /sdcard/external_sd  $mnt/external_sd' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'if [ -d /Removable/MicroSD ]; then' >> /data/.bootkali.sh
				echo '	$bbox mount -o bind /Removable/MicroSD  $mnt/external_sd' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo  'if [ -d /storage ]; then' >> /data/.bootkali.sh
				echo '	$bbox mount -o bind /storage  $mnt/external_sd' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'if [ -f $imgfile.mounts ]; then' >> /data/.bootkali.sh
				echo '	olddir=$(pwd)' >> /data/.bootkali.sh
				echo '	echo "Mounting pengguna mounts"' >> /data/.bootkali.sh
				echo '	cd $mnt' >> /data/.bootkali.sh
				echo '	if [[ ! -d $mnt/$usermounts ]]; then $bbox mkdir -p $usermounts; fi' >> /data/.bootkali.sh
				echo '	echo "# Script untuk unmount ditetapkan pengguna mounts, jangan di hapus atau mengedit!" > $imgfile.shutdown' >> /data/.bootkali.sh
				echo '	echo "cd $mnt/$usermounts" > $imgfile.shutdown' >> /data/.bootkali.sh
				echo '	cd $mnt/$usermounts' >> /data/.bootkali.sh
				echo '	for entry in $(cat "$imgfile.mounts"); do' >> /data/.bootkali.sh
				echo '		ANDROID=${entry%;*}' >> /data/.bootkali.sh
				echo '		LINUX=${entry#*;}' >> /data/.bootkali.sh
				echo '		if [[ -d $ANDROID ]]; then' >> /data/.bootkali.sh
				echo '			echo -n "Mounting $ANDROID to $usermounts/$LINUX... "' >> /data/.bootkali.sh
				echo '			if [[ ! -d $mnt/$usermounts/$LINUX ]]; then $bbox mkdir -p $LINUX; fi' >> /data/.bootkali.sh
				echo '			$bbox mount -o bind $ANDROID $mnt/$usermounts/$LINUX &> /dev/null' >> /data/.bootkali.sh
				echo '			if [ $? -ne 0 ];then' >> /data/.bootkali.sh
				echo '				echo FAIL' >> /data/.bootkali.sh
				echo '				if [[ -d $mnt/$usermounts/$LINUX ]]; then $bbox rmdir -p $LINUX; fi' >> /data/.bootkali.sh
				echo '			else' >> /data/.bootkali.sh
				echo '				echo OK' >> /data/.bootkali.sh
				echo '				echo "$bbox umount $mnt/$usermounts/$LINUX" >> $imgfile.shutdown' >> /data/.bootkali.sh
				echo '				echo "$bbox rmdir -p $LINUX" >> $imgfile.shutdown' >> /data/.bootkali.sh
				echo '			fi' >> /data/.bootkali.sh
				echo '		else' >> /data/.bootkali.sh
				echo '			echo "Folder android tidak ditemukan: $ANDROID"' >> /data/.bootkali.sh
				echo '		fi' >> /data/.bootkali.sh
				echo '	done' >> /data/.bootkali.sh
				echo '	echo "cd $mnt" >> $imgfile.shutdown' >> /data/.bootkali.sh
				echo '	echo "$bbox rmdir -p $usermounts" >> $imgfile.shutdown' >> /data/.bootkali.sh
				echo '	cd $olddir' >> /data/.bootkali.sh
				echo 'else' >> /data/.bootkali.sh
				echo '	echo "Tidak ada pengguna yang ditetapkan sebagai mount point"' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'echo "Setup selesai, akan menjalankan KALI LINUX"' >> /data/.bootkali.sh
				echo 'sleep 5' >> /data/.bootkali.sh
				echo '$bbox sysctl -w net.ipv4.ip_forward=1' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat meneruskan jaringan!"; fi' >> /data/.bootkali.sh
				echo 'if [ ! -f $mnt/root/DONOTDELETE.txt ]; then' >> /data/.bootkali.sh
				echo '	echo "nameserver 8.8.8.8" > $mnt/etc/resolv.conf' >> /data/.bootkali.sh
				echo '	if [ $? -ne 0 ];then error_exit "Tidak dapat menulis file resolv.conf!"; fi' >> /data/.bootkali.sh
				echo '	echo "nameserver 8.8.4.4" >> $mnt/etc/resolv.conf' >> /data/.bootkali.sh
				echo '	echo "127.0.0.1 localhost" > $mnt/etc/hosts' >> /data/.bootkali.sh
				echo '	if [ $? -ne 0 ];then error_exit "Tidak dapat menulis file host!"; fi' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo '$bbox chroot $mnt /root/init.sh $(basename $imgfile)' >> /data/.bootkali.sh
				echo 'echo "Mematikan Kali Linux"' >> /data/.bootkali.sh
				echo "for pid in `$bbox lsof | $bbox grep $mnt | $bbox sed -e's/  / /g' | $bbox cut -d' ' -f2`; do $bbox kill -9 $pid >/dev/null 2>&1; done" >> /data/.bootkali.sh
				echo 'sleep 5' >> /data/.bootkali.sh
				echo 'if [ -f $imgfile.shutdown ]; then' >> /data/.bootkali.sh
				echo '	sh $imgfile.shutdown' >> /data/.bootkali.sh
				echo '	rm $imgfile.shutdown' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/root/cfg 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/sdcard 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/external_sd 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/dev/pts 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/dev 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/proc 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/sys 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox losetup -d /dev/block/loop255 &> /dev/null' >> /data/.bootkali.sh
				echo 'nettool'  >> /data/.bootkali.sh
				echo ''  >> /data/.bootkali.sh
				echo '# Terima kasih, sumber kode dari Zachary Powell dan Martin Møller'  >> /data/.bootkali.sh
				echo '# Boot kali linux sudah di modifikasi dan di gabungkan menggunakan NETTOOLS'  >> /data/.bootkali.sh
				echo "Setup KALI LINUX on Android oleh NETTOOL akan dilakukan, otomatis menjalankan"
				echo "Enter untuk melanjutkan"
				read enterKey
				sh /data/.bootkali.sh /sdcard/kali/kali.img
				echo "Enter untuk kembali"
				read enterKey
				nettool
			elif [ -f /system/xbin/busybox &>/dev/null ]; then
				echo "Busybox tesedia"
				echo "Tunggu 5 detik.."
				sleep 5
				echo 'cd /sdcard/kali/' >> /data/.bootkali.sh
				echo 'error_exit() {' >> /data/.bootkali.sh
				echo '    echo "Error: $1"' >> /data/.bootkali.sh
				echo '    exit 1' >> /data/.bootkali.sh
				echo '    echo -n "Tekan Enter untuk kembali"' >> /data/.bootkali.sh
				echo '    read enterKey' >> /data/.bootkali.sh
				echo '    nettool' >> /data/.bootkali.sh
				echo '}' >> /data/.bootkali.sh
				echo 'if [ -f /system/bin/busybox ]; then' >> /data/.bootkali.sh
				echo '	export bbox=/system/bin/busybox' >> /data/.bootkali.sh
				echo 'else' >> /data/.bootkali.sh
				echo '	export bbox=/system/xbin/busybox' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'export usermounts=android' >> /data/.bootkali.sh
				echo 'export imgfile=$(dirname $0)/kali.img' >> /data/.bootkali.sh
				echo 'export bin=/system/bin' >> /data/.bootkali.sh
				echo 'export mnt=/data/local/mnt' >> /data/.bootkali.sh
				echo 'export USER=root' >> /data/.bootkali.sh
				echo 'if [[ ! -d $mnt ]]; then mkdir $mnt; fi' >> /data/.bootkali.sh
				echo 'export PATH=$bin:/usr/bin:/usr/local/bin:/usr/sbin:/bin:/usr/local/sbin:/usr/games:$PATH' >> /data/.bootkali.sh
				echo 'export TERM=linux' >> /data/.bootkali.sh
				echo 'export HOME=/root' >> /data/.bootkali.sh
				echo 'if [ $# -ne 0 ]; then' >> /data/.bootkali.sh
				echo '	if [ -f $1 ]; then' >> /data/.bootkali.sh
				echo '		imgfile=$1' >> /data/.bootkali.sh
				echo '	elif [ -f $(dirname $0)/$1 ]; then' >> /data/.bootkali.sh
				echo '		imgfile=$(dirname $0)/$1' >> /data/.bootkali.sh
				echo '	else' >> /data/.bootkali.sh
				echo '		error_exit "File image tidak ditemukan!($1)"' >> /data/.bootkali.sh
				echo '	fi' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'if [ -f $imgfile.md5 ]; then' >> /data/.bootkali.sh
				echo '	echo "File MD5 ditemukan, gunakan untuk memeriksa berkas .img? (y/n)"' >> /data/.bootkali.sh
				echo '	read answer' >> /data/.bootkali.sh
				echo '	if [ $answer == y ]; then' >> /data/.bootkali.sh
				echo '		echo -n "Validasi image checksum... "' >> /data/.bootkali.sh
				echo '		$bbox md5sum -c -s $imgfile.md5' >> /data/.bootkali.sh
				echo '		if [ $? -ne 0 ];then' >> /data/.bootkali.sh
				echo '			echo "GAGAL!"' >> /data/.bootkali.sh
				echo '			error_exit "Checksum gagal! IMG rusak!"' >> /data/.bootkali.sh
				echo '		else' >> /data/.bootkali.sh
				echo '			echo "OK"' >> /data/.bootkali.sh
				echo '			rm $imgfile.md5' >> /data/.bootkali.sh
				echo '		fi' >> /data/.bootkali.sh
				echo '	fi' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'use_swap=no' >> /data/.bootkali.sh
				echo 'cfgfile=$imgfile.config' >> /data/.bootkali.sh
				echo 'if [ -f $imgfile.config ]; then' >> /data/.bootkali.sh
				echo '	source $imgfile.config' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'if [ $use_swap == yes ]; then' >> /data/.bootkali.sh
				echo '	if [ -f $imgfile.swap ]; then' >> /data/.bootkali.sh
				echo '		echo "Swap file ditemukan, menggunakan berkas"' >> /data/.bootkali.sh
				echo '		echo "Menyalakan swap (jika kesalahan di sini Anda tidak memiliki dukungan Swap)"' >> /data/.bootkali.sh
				echo '		swapon $imgfile.swap' >> /data/.bootkali.sh
				echo '	else' >> /data/.bootkali.sh
				echo '		echo "Membuat file Swap"' >> /data/.bootkali.sh
				echo '		dd if=/dev/zero of=$imgfile.swap bs=1048576 count=1024' >> /data/.bootkali.sh
				echo '		mkswap $imgfile.swap' >> /data/.bootkali.sh
				echo '		echo "Menyalakan swap (jika kesalahan di sini Anda tidak memiliki dukungan Swap)"' >> /data/.bootkali.sh
				echo '		swapon $imgfile.swap' >> /data/.bootkali.sh
				echo '	fi' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'echo -n "Memeriksa perangkat loop..."' >> /data/.bootkali.sh
				echo 'if [ -b /dev/block/loop255 ]; then' >> /data/.bootkali.sh
				echo '	echo "DITEMUKAN"' >> /data/.bootkali.sh
				echo 'else' >> /data/.bootkali.sh
				echo '	echo "HILANG"' >> /data/.bootkali.sh
				echo '	echo -n "Menciptakan perangkat loop..."' >> /data/.bootkali.sh
				echo '	$bbox mknod /dev/block/loop255 b 7 255' >> /data/.bootkali.sh
				echo '	if [ -b /dev/block/loop255 ]; then' >> /data/.bootkali.sh
				echo '		echo "OK"' >> /data/.bootkali.sh
				echo '	else' >> /data/.bootkali.sh
				echo '		echo "GAGAL"' >> /data/.bootkali.sh
				echo '		error_exit "Tidak dapat membuat perangkat loop!"' >> /data/.bootkali.sh
				echo '	fi' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo '$bbox losetup /dev/block/loop255 $imgfile' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat melampirkan file img ke perangkat loop! (Image = $imgfile)"; fi' >> /data/.bootkali.sh
				echo '$bbox mount -t ext4 /dev/block/loop255 $mnt' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat me-mount perangkat loop!"; fi' >> /data/.bootkali.sh
				echo '$bbox mount -t devpts devpts $mnt/dev/pts' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat me-mount $mnt/dev/pts!"; fi' >> /data/.bootkali.sh
				echo '$bbox mount -t proc proc $mnt/proc' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat me-mount $mnt/proc!"; fi' >> /data/.bootkali.sh
				echo '$bbox mount -t sysfs sysfs $mnt/sys' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat me-mount $mnt/sys!"; fi' >> /data/.bootkali.sh
				echo '$bbox mount -o bind /sdcard $mnt/sdcard' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat mengikat $mnt/sdcard!"; fi' >> /data/.bootkali.sh
				echo 'if [[ ! -d $mnt/root/cfg ]]; then mkdir $mnt/root/cfg; fi' >> /data/.bootkali.sh
				echo '$bbox mount -o bind $(dirname $imgfile) $mnt/root/cfg' >> /data/.bootkali.sh
				echo 'if [ -d /sdcard/external_sd ]; then' >> /data/.bootkali.sh
				echo '	$bbox mount -o bind /sdcard/external_sd  $mnt/external_sd' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'if [ -d /Removable/MicroSD ]; then' >> /data/.bootkali.sh
				echo '	$bbox mount -o bind /Removable/MicroSD  $mnt/external_sd' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo  'if [ -d /storage ]; then' >> /data/.bootkali.sh
				echo '	$bbox mount -o bind /storage  $mnt/external_sd' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'if [ -f $imgfile.mounts ]; then' >> /data/.bootkali.sh
				echo '	olddir=$(pwd)' >> /data/.bootkali.sh
				echo '	echo "Mounting pengguna mounts"' >> /data/.bootkali.sh
				echo '	cd $mnt' >> /data/.bootkali.sh
				echo '	if [[ ! -d $mnt/$usermounts ]]; then $bbox mkdir -p $usermounts; fi' >> /data/.bootkali.sh
				echo '	echo "# Script untuk unmount ditetapkan pengguna mounts, jangan di hapus atau mengedit!" > $imgfile.shutdown' >> /data/.bootkali.sh
				echo '	echo "cd $mnt/$usermounts" > $imgfile.shutdown' >> /data/.bootkali.sh
				echo '	cd $mnt/$usermounts' >> /data/.bootkali.sh
				echo '	for entry in $(cat "$imgfile.mounts"); do' >> /data/.bootkali.sh
				echo '		ANDROID=${entry%;*}' >> /data/.bootkali.sh
				echo '		LINUX=${entry#*;}' >> /data/.bootkali.sh
				echo '		if [[ -d $ANDROID ]]; then' >> /data/.bootkali.sh
				echo '			echo -n "Mounting $ANDROID to $usermounts/$LINUX... "' >> /data/.bootkali.sh
				echo '			if [[ ! -d $mnt/$usermounts/$LINUX ]]; then $bbox mkdir -p $LINUX; fi' >> /data/.bootkali.sh
				echo '			$bbox mount -o bind $ANDROID $mnt/$usermounts/$LINUX &> /dev/null' >> /data/.bootkali.sh
				echo '			if [ $? -ne 0 ];then' >> /data/.bootkali.sh
				echo '				echo FAIL' >> /data/.bootkali.sh
				echo '				if [[ -d $mnt/$usermounts/$LINUX ]]; then $bbox rmdir -p $LINUX; fi' >> /data/.bootkali.sh
				echo '			else' >> /data/.bootkali.sh
				echo '				echo OK' >> /data/.bootkali.sh
				echo '				echo "$bbox umount $mnt/$usermounts/$LINUX" >> $imgfile.shutdown' >> /data/.bootkali.sh
				echo '				echo "$bbox rmdir -p $LINUX" >> $imgfile.shutdown' >> /data/.bootkali.sh
				echo '			fi' >> /data/.bootkali.sh
				echo '		else' >> /data/.bootkali.sh
				echo '			echo "Folder android tidak ditemukan: $ANDROID"' >> /data/.bootkali.sh
				echo '		fi' >> /data/.bootkali.sh
				echo '	done' >> /data/.bootkali.sh
				echo '	echo "cd $mnt" >> $imgfile.shutdown' >> /data/.bootkali.sh
				echo '	echo "$bbox rmdir -p $usermounts" >> $imgfile.shutdown' >> /data/.bootkali.sh
				echo '	cd $olddir' >> /data/.bootkali.sh
				echo 'else' >> /data/.bootkali.sh
				echo '	echo "Tidak ada pengguna yang ditetapkan sebagai mount point"' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo 'echo "Setup selesai, akan menjalankan KALI LINUX"' >> /data/.bootkali.sh
				echo 'sleep 5' >> /data/.bootkali.sh
				echo '$bbox sysctl -w net.ipv4.ip_forward=1' >> /data/.bootkali.sh
				echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat meneruskan jaringan!"; fi' >> /data/.bootkali.sh
				echo 'if [ ! -f $mnt/root/DONOTDELETE.txt ]; then' >> /data/.bootkali.sh
				echo '	echo "nameserver 8.8.8.8" > $mnt/etc/resolv.conf' >> /data/.bootkali.sh
				echo '	if [ $? -ne 0 ];then error_exit "Tidak dapat menulis file resolv.conf!"; fi' >> /data/.bootkali.sh
				echo '	echo "nameserver 8.8.4.4" >> $mnt/etc/resolv.conf' >> /data/.bootkali.sh
				echo '	echo "127.0.0.1 localhost" > $mnt/etc/hosts' >> /data/.bootkali.sh
				echo '	if [ $? -ne 0 ];then error_exit "Tidak dapat menulis file host!"; fi' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo '$bbox chroot $mnt /root/init.sh $(basename $imgfile)' >> /data/.bootkali.sh
				echo 'echo "Mematikan Kali Linux"' >> /data/.bootkali.sh
				echo "for pid in `$bbox lsof | $bbox grep $mnt | $bbox sed -e's/  / /g' | $bbox cut -d' ' -f2`; do $bbox kill -9 $pid >/dev/null 2>&1; done" >> /data/.bootkali.sh
				echo 'sleep 5' >> /data/.bootkali.sh
				echo 'if [ -f $imgfile.shutdown ]; then' >> /data/.bootkali.sh
				echo '	sh $imgfile.shutdown' >> /data/.bootkali.sh
				echo '	rm $imgfile.shutdown' >> /data/.bootkali.sh
				echo 'fi' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/root/cfg 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/sdcard 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/external_sd 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/dev/pts 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/dev 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/proc 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt/sys 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox umount $mnt 2>/dev/null' >> /data/.bootkali.sh
				echo '$bbox losetup -d /dev/block/loop255 &> /dev/null' >> /data/.bootkali.sh
				echo 'nettool'  >> /data/.bootkali.sh
				echo ''  >> /data/.bootkali.sh
				echo '# Terima kasih, sumber kode dari Zachary Powell dan Martin Møller'  >> /data/.bootkali.sh
				echo '# Boot kali linux sudah di modifikasi dan di gabungkan menggunakan NETTOOLS'  >> /data/.bootkali.sh
				echo "Setup KALI LINUX on Android oleh NETTOOL akan dilakukan, otomatis menjalankan"
				echo "Enter untuk melanjutkan"
				read enterKey
				sh /data/.bootkali.sh /sdcard/kali/kali.img
				echo "Enter untuk kembali"
				read enterKey
				nettool
			else
				echo "Instal busybox terlebih dahulu"
				echo "Busybox tidak tersedia, Setup KALI LINUX dibatalkan"
				echo "Tekan enter"
				read enterKey
				nettool
			fi
		else
			echo ""
			echo "Dibutuhkan berkas kali.img ( ARM )"
			echo "Tidak terdapat berkas .img di folder /sdcard/kali/"
			echo "Proses dibatalkan"
			echo "Tekan enter"
			read enterKey
			nettool
		fi
		fi
	elif [ $opsikali -eq 2 ]; then
		if [ -f /data/.bootkali.sh ]; then rm -f /data/.bootkali.sh; fi
		echo 'cd /sdcard/kali/' >> /data/.bootkali.sh
		echo 'error_exit() {' >> /data/.bootkali.sh
		echo '    echo "Error: $1"' >> /data/.bootkali.sh
		echo '    exit 1' >> /data/.bootkali.sh
		echo '    echo -n "Tekan Enter untuk kembali"' >> /data/.bootkali.sh
		echo '    read enterKey' >> /data/.bootkali.sh
		echo '    nettool' >> /data/.bootkali.sh
		echo '}' >> /data/.bootkali.sh
		echo 'if [ -f /system/bin/busybox ]; then' >> /data/.bootkali.sh
		echo '	export bbox=/system/bin/busybox' >> /data/.bootkali.sh
		echo 'else' >> /data/.bootkali.sh
		echo '	export bbox=/system/xbin/busybox' >> /data/.bootkali.sh
		echo 'fi' >> /data/.bootkali.sh
		echo 'export usermounts=android' >> /data/.bootkali.sh
		echo 'export imgfile=$(dirname $0)/kali.img' >> /data/.bootkali.sh
		echo 'export bin=/system/bin' >> /data/.bootkali.sh
		echo 'export mnt=/data/local/mnt' >> /data/.bootkali.sh
		echo 'export USER=root' >> /data/.bootkali.sh
		echo 'if [[ ! -d $mnt ]]; then mkdir $mnt; fi' >> /data/.bootkali.sh
		echo 'export PATH=$bin:/usr/bin:/usr/local/bin:/usr/sbin:/bin:/usr/local/sbin:/usr/games:$PATH' >> /data/.bootkali.sh
		echo 'export TERM=linux' >> /data/.bootkali.sh
		echo 'export HOME=/root' >> /data/.bootkali.sh
		echo 'if [ $# -ne 0 ]; then' >> /data/.bootkali.sh
		echo '	if [ -f $1 ]; then' >> /data/.bootkali.sh
		echo '		imgfile=$1' >> /data/.bootkali.sh
		echo '	elif [ -f $(dirname $0)/$1 ]; then' >> /data/.bootkali.sh
		echo '		imgfile=$(dirname $0)/$1' >> /data/.bootkali.sh
		echo '	else' >> /data/.bootkali.sh
		echo '		error_exit "File image tidak ditemukan!($1)"' >> /data/.bootkali.sh
		echo '	fi' >> /data/.bootkali.sh
		echo 'fi' >> /data/.bootkali.sh
		echo 'if [ -f $imgfile.md5 ]; then' >> /data/.bootkali.sh
		echo '	echo "File MD5 ditemukan, gunakan untuk memeriksa berkas .img? (y/n)"' >> /data/.bootkali.sh
		echo '	read answer' >> /data/.bootkali.sh
		echo '	if [ $answer == y ]; then' >> /data/.bootkali.sh
		echo '		echo -n "Validasi image checksum... "' >> /data/.bootkali.sh
		echo '		$bbox md5sum -c -s $imgfile.md5' >> /data/.bootkali.sh
		echo '		if [ $? -ne 0 ];then' >> /data/.bootkali.sh
		echo '			echo "GAGAL!"' >> /data/.bootkali.sh
		echo '			error_exit "Checksum gagal! IMG rusak!"' >> /data/.bootkali.sh
		echo '		else' >> /data/.bootkali.sh
		echo '			echo "OK"' >> /data/.bootkali.sh
		echo '			rm $imgfile.md5' >> /data/.bootkali.sh
		echo '		fi' >> /data/.bootkali.sh
		echo '	fi' >> /data/.bootkali.sh
		echo 'fi' >> /data/.bootkali.sh
		echo 'use_swap=no' >> /data/.bootkali.sh
		echo 'cfgfile=$imgfile.config' >> /data/.bootkali.sh
		echo 'if [ -f $imgfile.config ]; then' >> /data/.bootkali.sh
		echo '	source $imgfile.config' >> /data/.bootkali.sh
		echo 'fi' >> /data/.bootkali.sh
		echo 'if [ $use_swap == yes ]; then' >> /data/.bootkali.sh
		echo '	if [ -f $imgfile.swap ]; then' >> /data/.bootkali.sh
		echo '		echo "Swap file ditemukan, menggunakan berkas"' >> /data/.bootkali.sh
		echo '		echo "Menyalakan swap (jika kesalahan di sini Anda tidak memiliki dukungan Swap)"' >> /data/.bootkali.sh
		echo '		swapon $imgfile.swap' >> /data/.bootkali.sh
		echo '	else' >> /data/.bootkali.sh
		echo '		echo "Membuat file Swap"' >> /data/.bootkali.sh
		echo '		dd if=/dev/zero of=$imgfile.swap bs=1048576 count=1024' >> /data/.bootkali.sh
		echo '		mkswap $imgfile.swap' >> /data/.bootkali.sh
		echo '		echo "Menyalakan swap (jika kesalahan di sini Anda tidak memiliki dukungan Swap)"' >> /data/.bootkali.sh
		echo '		swapon $imgfile.swap' >> /data/.bootkali.sh
		echo '	fi' >> /data/.bootkali.sh
		echo 'fi' >> /data/.bootkali.sh
		echo 'echo -n "Memeriksa perangkat loop..."' >> /data/.bootkali.sh
		echo 'if [ -b /dev/block/loop255 ]; then' >> /data/.bootkali.sh
		echo '	echo "DITEMUKAN"' >> /data/.bootkali.sh
		echo 'else' >> /data/.bootkali.sh
		echo '	echo "HILANG"' >> /data/.bootkali.sh
		echo '	echo -n "Menciptakan perangkat loop..."' >> /data/.bootkali.sh
		echo '	$bbox mknod /dev/block/loop255 b 7 255' >> /data/.bootkali.sh
		echo '	if [ -b /dev/block/loop255 ]; then' >> /data/.bootkali.sh
		echo '		echo "OK"' >> /data/.bootkali.sh
		echo '	else' >> /data/.bootkali.sh
		echo '		echo "GAGAL"' >> /data/.bootkali.sh
		echo '		error_exit "Tidak dapat membuat perangkat loop!"' >> /data/.bootkali.sh
		echo '	fi' >> /data/.bootkali.sh
		echo 'fi' >> /data/.bootkali.sh
		echo '$bbox losetup /dev/block/loop255 $imgfile' >> /data/.bootkali.sh
		echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat melampirkan file img ke perangkat loop! (Image = $imgfile)"; fi' >> /data/.bootkali.sh
		echo '$bbox mount -t ext4 /dev/block/loop255 $mnt' >> /data/.bootkali.sh
		echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat me-mount perangkat loop!"; fi' >> /data/.bootkali.sh
		echo '$bbox mount -t devpts devpts $mnt/dev/pts' >> /data/.bootkali.sh
		echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat me-mount $mnt/dev/pts!"; fi' >> /data/.bootkali.sh
		echo '$bbox mount -t proc proc $mnt/proc' >> /data/.bootkali.sh
		echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat me-mount $mnt/proc!"; fi' >> /data/.bootkali.sh
		echo '$bbox mount -t sysfs sysfs $mnt/sys' >> /data/.bootkali.sh
		echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat me-mount $mnt/sys!"; fi' >> /data/.bootkali.sh
		echo '$bbox mount -o bind /sdcard $mnt/sdcard' >> /data/.bootkali.sh
		echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat mengikat $mnt/sdcard!"; fi' >> /data/.bootkali.sh
		echo 'if [[ ! -d $mnt/root/cfg ]]; then mkdir $mnt/root/cfg; fi' >> /data/.bootkali.sh
		echo '$bbox mount -o bind $(dirname $imgfile) $mnt/root/cfg' >> /data/.bootkali.sh
		echo 'if [ -d /sdcard/external_sd ]; then' >> /data/.bootkali.sh
		echo '	$bbox mount -o bind /sdcard/external_sd  $mnt/external_sd' >> /data/.bootkali.sh
		echo 'fi' >> /data/.bootkali.sh
		echo 'if [ -d /Removable/MicroSD ]; then' >> /data/.bootkali.sh
		echo '	$bbox mount -o bind /Removable/MicroSD  $mnt/external_sd' >> /data/.bootkali.sh
		echo 'fi' >> /data/.bootkali.sh
		echo  'if [ -d /storage ]; then' >> /data/.bootkali.sh
		echo '	$bbox mount -o bind /storage  $mnt/external_sd' >> /data/.bootkali.sh
		echo 'fi' >> /data/.bootkali.sh
		echo 'if [ -f $imgfile.mounts ]; then' >> /data/.bootkali.sh
		echo '	olddir=$(pwd)' >> /data/.bootkali.sh
		echo '	echo "Mounting pengguna mounts"' >> /data/.bootkali.sh
		echo '	cd $mnt' >> /data/.bootkali.sh
		echo '	if [[ ! -d $mnt/$usermounts ]]; then $bbox mkdir -p $usermounts; fi' >> /data/.bootkali.sh
		echo '	echo "# Script untuk unmount ditetapkan pengguna mounts, jangan di hapus atau mengedit!" > $imgfile.shutdown' >> /data/.bootkali.sh
		echo '	echo "cd $mnt/$usermounts" > $imgfile.shutdown' >> /data/.bootkali.sh
		echo '	cd $mnt/$usermounts' >> /data/.bootkali.sh
		echo '	for entry in $(cat "$imgfile.mounts"); do' >> /data/.bootkali.sh
		echo '		ANDROID=${entry%;*}' >> /data/.bootkali.sh
		echo '		LINUX=${entry#*;}' >> /data/.bootkali.sh
		echo '		if [[ -d $ANDROID ]]; then' >> /data/.bootkali.sh
		echo '			echo -n "Mounting $ANDROID to $usermounts/$LINUX... "' >> /data/.bootkali.sh
		echo '			if [[ ! -d $mnt/$usermounts/$LINUX ]]; then $bbox mkdir -p $LINUX; fi' >> /data/.bootkali.sh
		echo '			$bbox mount -o bind $ANDROID $mnt/$usermounts/$LINUX &> /dev/null' >> /data/.bootkali.sh
		echo '			if [ $? -ne 0 ];then' >> /data/.bootkali.sh
		echo '				echo FAIL' >> /data/.bootkali.sh
		echo '				if [[ -d $mnt/$usermounts/$LINUX ]]; then $bbox rmdir -p $LINUX; fi' >> /data/.bootkali.sh
		echo '			else' >> /data/.bootkali.sh
		echo '				echo OK' >> /data/.bootkali.sh
		echo '				echo "$bbox umount $mnt/$usermounts/$LINUX" >> $imgfile.shutdown' >> /data/.bootkali.sh
		echo '				echo "$bbox rmdir -p $LINUX" >> $imgfile.shutdown' >> /data/.bootkali.sh
		echo '			fi' >> /data/.bootkali.sh
		echo '		else' >> /data/.bootkali.sh
		echo '			echo "Folder android tidak ditemukan: $ANDROID"' >> /data/.bootkali.sh
		echo '		fi' >> /data/.bootkali.sh
		echo '	done' >> /data/.bootkali.sh
		echo '	echo "cd $mnt" >> $imgfile.shutdown' >> /data/.bootkali.sh
		echo '	echo "$bbox rmdir -p $usermounts" >> $imgfile.shutdown' >> /data/.bootkali.sh
		echo '	cd $olddir' >> /data/.bootkali.sh
		echo 'else' >> /data/.bootkali.sh
		echo '	echo "Tidak ada pengguna yang ditetapkan sebagai mount point"' >> /data/.bootkali.sh
		echo 'fi' >> /data/.bootkali.sh
		echo '$bbox sysctl -w net.ipv4.ip_forward=1' >> /data/.bootkali.sh
		echo 'if [ $? -ne 0 ];then error_exit "Tidak dapat meneruskan jaringan!"; fi' >> /data/.bootkali.sh
		echo 'if [ ! -f $mnt/root/DONOTDELETE.txt ]; then' >> /data/.bootkali.sh
		echo '	echo "nameserver 8.8.8.8" > $mnt/etc/resolv.conf' >> /data/.bootkali.sh
		echo '	if [ $? -ne 0 ];then error_exit "Tidak dapat menulis file resolv.conf!"; fi' >> /data/.bootkali.sh
		echo '	echo "nameserver 8.8.4.4" >> $mnt/etc/resolv.conf' >> /data/.bootkali.sh
		echo '	echo "127.0.0.1 localhost" > $mnt/etc/hosts' >> /data/.bootkali.sh
		echo '	if [ $? -ne 0 ];then error_exit "Tidak dapat menulis file host!"; fi' >> /data/.bootkali.sh
		echo 'fi' >> /data/.bootkali.sh
		echo '$bbox chroot $mnt /root/init.sh $(basename $imgfile)' >> /data/.bootkali.sh
		echo 'echo "Mematikan Kali Linux"' >> /data/.bootkali.sh
		echo "for pid in `$bbox lsof | $bbox grep $mnt | $bbox sed -e's/  / /g' | $bbox cut -d' ' -f2`; do $bbox kill -9 $pid >/dev/null 2>&1; done" >> /data/.bootkali.sh
		echo 'sleep 5' >> /data/.bootkali.sh
		echo 'if [ -f $imgfile.shutdown ]; then' >> /data/.bootkali.sh
		echo '	sh $imgfile.shutdown' >> /data/.bootkali.sh
		echo '	rm $imgfile.shutdown' >> /data/.bootkali.sh
		echo 'fi' >> /data/.bootkali.sh
		echo '$bbox umount $mnt/root/cfg 2>/dev/null' >> /data/.bootkali.sh
		echo '$bbox umount $mnt/sdcard 2>/dev/null' >> /data/.bootkali.sh
		echo '$bbox umount $mnt/external_sd 2>/dev/null' >> /data/.bootkali.sh
		echo '$bbox umount $mnt/dev/pts 2>/dev/null' >> /data/.bootkali.sh
		echo '$bbox umount $mnt/dev 2>/dev/null' >> /data/.bootkali.sh
		echo '$bbox umount $mnt/proc 2>/dev/null' >> /data/.bootkali.sh
		echo '$bbox umount $mnt/sys 2>/dev/null' >> /data/.bootkali.sh
		echo '$bbox umount $mnt 2>/dev/null' >> /data/.bootkali.sh
		echo '$bbox losetup -d /dev/block/loop255 &> /dev/null' >> /data/.bootkali.sh
		echo 'nettool'  >> /data/.bootkali.sh
		echo ''  >> /data/.bootkali.sh
		echo '# Terima kasih, sumber kode dari Zachary Powell dan Martin Møller'  >> /data/.bootkali.sh
		echo '# Boot kali linux sudah di modifikasi dan di gabungkan menggunakan NETTOOLS'  >> /data/.bootkali.sh
		sh /data/.bootkali.sh /sdcard/kali/kali.img
		nettool
	elif [ $opsikali -eq 3 ]; then
		nettool
	else
		echo "Perintah salah"
		sleep 3
		nettool
	fi
elif [ $option -eq 29 ]; then
	clear
	echo ""
	echo ""
	echo "Tutorial Menjalankan kali linux (dapat menggunakan window baru untuk mempermudah)"
	echo "1. Pilih perintah 1. Jalankan Kali Linux"
	echo "2. Konfigurasi Kali linux untuk pertama kali, VNC/SSH y/n tidak masalah, disini hanya menggunakan NON-GUI"
	echo "3. Selesai setup lakukan perintah seperti dibawah"
	echo ""
	echo "	unset LD_PRELOAD"
	echo "	nano /etc/apt/sources.list"
	echo ""
	echo "Ganti sources.list dengan source apt menjadi"
	echo "		deb http://http.kali.org/kali kali-rolling main contrib non-free"
	echo "		deb-src http://http.kali.org/kali kali-rolling main contrib non-free"
	echo ""
	echo "	sudo rm /var/lib/apt/lists/lock"
	echo "	sudo rm /var/cache/apt/archives/lock"
	echo "	sudo rm /var/lib/dpkg/lock"
	echo "	rm -rf /var/lib/apt/lists"
	echo "	sudo apt-get update"
	echo "	sudo apt-get install kali-archive-keyring"
	echo "	sudo apt-get clean && sudo apt-get update && sudo apt-get upgrade"
	echo "	sudo dpkg --configure -a"
	echo "	sudo apt-get -f install"
	echo "	sudo msfupdate"
	echo ""
	echo "Note : Saat menjalankan setiap perintah terdapat error jadi biarkan saja, sisanya tools kali bisa di update dan digunakan"
	echo ""
	echo "Setiap saat setelah reboot jalankan perintah '2. Jalankan kali linux (hanya setelah reboot)', ini berfungsi untuk re-mount file img"
	echo "unset LD_PRELOAD digunakan saat memulai kali linux"
	echo ""
	echo "Tutorial akan di impor ke folder luar memori internal 'Tutorial Menjalankan Kali Linux.txt'"
	echo "Enter untuk kembali"
	read enterKey
	echo "Tutorial Menjalankan kali linux (dapat menggunakan window baru untuk mempermudah)" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "1. Pilih perintah 1. Jalankan Kali Linux" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "2. Konfigurasi Kali linux untuk pertama kali, VNC/SSH y/n tidak masalah, disini hanya menggunakan NON-GUI" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "3. Selesai setup lakukan perintah seperti dibawah" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "	unset LD_PRELOAD" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "	nano /etc/apt/sources.list" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "Ganti sources.list dengan source apt menjadi" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "		deb http://http.kali.org/kali kali-rolling main contrib non-free" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "		deb-src http://http.kali.org/kali kali-rolling main contrib non-free" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "	sudo rm /var/lib/apt/lists/lock" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "	sudo rm /var/cache/apt/archives/lock" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "	sudo rm /var/lib/dpkg/lock" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "	rm -rf /var/lib/apt/lists" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "	sudo apt-get update" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "	sudo apt-get install kali-archive-keyring" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "	sudo apt-get clean && sudo apt-get update && sudo apt-get upgrade" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "	sudo dpkg --configure -a" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "	sudo apt-get -f install" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "	sudo msfupdate" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "Note : Saat menjalankan setiap perintah terdapat error jadi biarkan saja, sisanya tools kali bisa di update dan digunakan" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "Setiap saat setelah reboot jalankan perintah '2. Jalankan kali linux (hanya setelah reboot)', ini berfungsi untuk re-mount file img" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	echo "unset LD_PRELOAD digunakan saat memulai kali linux" >> /sdcard/Tutorial Menjalankan Kali Linux.txt
	nettool
elif [ $option -eq 98 ]; then
	clear
	echo ""
	echo "\e[1;36mTerms of Service NETTOOLS\e[0m"
	echo "Saya berjanji, untuk menyetujui hal dibawah ini:"
	echo "1. Penggunaan dan penyalahgunaan NETTOOLS adalah tanggung jawab pengguna"
	echo "2. Tidak boleh di share ke semua orang/sembarangan (Termasuk teman dan orang terdekat)"
	echo "3. DWYOR (Do With Your Own Risk), Lakukan dengan resikomu"
	echo "4. Pembuat tidak akan menjawab pertanyaan mengenai NETTOOLS"
	echo "\e[1;31m5. Tidak menjual NETTOOLS ini ke orang lain selain pembuat!! \e[0m"
	echo "6. Harus mentaati UU ITE yang berlaku"
	echo "7. Nettool hanya untuk belajar dan tes di perangkatnya sendiri"
	echo "8. Tidak mengubah, memperbanyak (copy), ataupun dialihkan pembuat program nettool"
	echo ""
	echo "Terima kasih atas partisipasinya sudah tidak melakukan hal diatas"
	echo "HAK CIPTA @ DHJS 2017"
	echo ""
	echo "NETTOOLS hanya untuk memudahkan penggunaan UNIX Command untuk aktifitas internet tanpa menggunakan Aplikasi apapun."
	echo "Selain itu NETTOOLS hanyalah hobi dan pembelajaran bagi pembuat, tidak ada niat untuk melakukan hal 'cybercrime' atas pembuatan script ini."
	echo ""
	echo ""
	echo "Backup file secara manual untuk jaga jaga"
	echo "Sumber file penting backup /system/etc/firmware/wlan/prima/WCNSS_qcom_wlan_nv.bin"
	echo -n "Tekan enter"
	read enterKey
	nettool
elif [ $option -eq 87 ]; then
	clear
	echo "=========================================================="
	echo ""
	echo "           Free Menu Utilitas Powered by Nano"
	echo ""
	echo "=========================================================="
	echo "   Reboot untuk mengembalikan opsi 'optimasi' kesemula    "
	echo "=========================================================="
	echo ""
	echo "Menu Utilitas:"
	echo "1. Full Cleaner"
	echo "2. Cleaner APK"
	echo "3. Cleaner Dalvik Cache"
	echo "4. Optimasi Baterai"
	echo "5. Optimasi Baterai dan Performa"
	echo "6. Optimasi Gaming (Performa penuh)"
	echo "7. Nomor Generator"
	echo "8. Pasang AIRCRACK-NG (Monitoring/HACK WIFI)"
	echo "9. Pasang Perintah pindah folder"
	echo ""
	echo "\e[93m100. Uninstall\e[0m"
	echo "\e[93m101. Reboot\e[0m"
	echo "\e[93m102. Update NETTOOLS\e[0m"
	echo ""
	echo "90. Kembali"
	echo ""
	echo "=========================================================="
	echo -n "Pilih angka yang tersedia [1-7]: "
	read opsi
	if [ $opsi -eq 1 ]; then
		echo ""
		echo "Menghitung..."
		if [ `du -shc $fullcache 2> /dev/null | tail -1 | cut -f 1` == 0 ]; then
			echo -n "\e[1;32mPerangkat kamu sudah dibersihkan, enter untuk kembali\e[0m"
			read enterKey
			nettool
		else
			echo -n "Cache Aplikasi: \e[1;31m"
			echo `du -shc $fullcache 2> /dev/null | tail -1 | cut -f 1`
			echo "\e[0m"
			echo -n "Ingin membersihkannya (y/n)? "
			read jawab
			if [ $jawab == y ]; then
				echo -n "Sedang menghapus sampah"
				sleep 1
				echo -n "."
				echo `du -shc $fullcache 2> /dev/null | tail -1 | cut -f 1` >> /sdcard/total.txt
				rm -f $fullcache 2> /dev/null
				rm -rf $fullcache 2> /dev/null
				sleep 1
				echo -n "."
				rm -f /sdcard/DCIM/.thumbnails/* 2> /dev/null
				if [ -e /dev/log/main ]
				then
				  rm -f /dev/log/main
				fi
				rm -f /data/dalvik-cache/*.apk
				rm -f /data/dalvik-cache/*.tmp
				sleep 1
				echo "."
				bebas=`cat /sdcard/total.txt`
				echo ""
				echo "\e[1;32m$bebas sudah dibebaskan!\e[0m"
				echo "Enter untuk kembali"
				read enterKey
				rm -f /sdcard/total.txt
				nettool
			elif [ $jawab == n ]; then
				nettool
			else
				echo "Perintah Salah"
				sleep 3
				nettool
			fi
		fi
	elif [ $opsi -eq 9 ]; then
		echo -n "Membuat pintasan"
		sleep 1
		echo -n "."
		echo 'cd /storage/*-*/' >> /system/bin/extsdcard
		sleep 1
		echo -n "."
		echo 'cd /storage/emulated/0/' >> /system/bin/sdcard
		sleep 1
		echo "."
		echo "Perintah pintasan sukses, silahkan menggunakan perintah 'sdcard' atau 'extsdcard'"
		echo "Enter untuk kembali"
		read enterKey
		nettool
	elif [ $opsi -eq 102 ]; then
		clear
		echo -n "Mengecek Pembaruan"
			sleep 1
			echo -n "."
			sleep 1
			echo -n "."
			sleep 1
			echo "."
		if [ `curl -sI http://sudonano.pe.hu/nettool/nettool | grep Length: | awk '{print $2}'` == `wc -c /system/vendor/bin/nettool | awk '{print $1}'` ]; then
			sleep 1
			echo "NETTOOL sudah terbaru, enter untuk kembali.."
			read enterKey
			nettool
		else
			sleep 1
			echo "NETTOOL akan di update.."
			echo -n "Mengunduh berkas"
			sleep 1
			echo -n "."
			echo 'mkdir /sdcard/Pembaruan &> /dev/null' >> /sdcard/update.sh
			echo 'cd /sdcard/Pembaruan &> /dev/null' >> /sdcard/update.sh
			echo 'wget http://sudonano.pe.hu/nettool/nettool &> /dev/null' >> /sdcard/update.sh
			echo 'mv /sdcard/Pembaruan/nettool /system/vendor/bin/nettool &> /dev/null' >> /sdcard/update.sh
			echo 'chmod 755 /system/vendor/bin/nettool &> /dev/null' >> /sdcard/update.sh
			echo 'rm -rf /sdcard/Pembaruan &> /dev/null' >> /sdcard/update.sh
			sleep 1
			echo -n "."
			sleep 1
			echo "."
			echo -n "Konfigurasi NETTOOLS"
			sleep 1
			echo -n "."
			sleep 1
			sh /sdcard/update.sh /sdcard/
			echo -n "."
			sleep 1
			echo "."
			echo -n "NETTOOL telah diperbarui, memulai ulang NETTOOL"
			sleep 1
			echo -n "."
			sleep 1
			echo -n "."
			sleep 1
			echo "."
			sleep 1
			nettool
		fi
	elif [ $opsi -eq 100 ]; then
		clear
		echo "Semua berkas NETTOOL akan dihapus"
		sleep 10
		cp $wlanbinbak $wlanbin 2> /dev/null
		chmod 0644 $wlanbin 2> /dev/null
		defaultHostname="android-" 2> /dev/null
		defaultHostname+="$(settings get secure android_id)" 2> /dev/null
		setprop net.hostname $defaultHostname 2> /dev/null
		svc wifi disable 2> /dev/null
		svc wifi enable 2> /dev/null
		rm -f /system/bin/airbase-ng &> /dev/null
		rm -f /system/bin/aircrack-ng &> /dev/null
		rm -f /system/bin/airdecap-ng &> /dev/null
		rm -f /system/bin/airdecloak-ng &> /dev/null
		rm -f /system/bin/aireplay-ng &> /dev/null
		rm -f /system/bin/airodump-ng &> /dev/null
		rm -f /system/bin/airolib-ng &> /dev/null
		rm -f /system/bin/airserv-ng &> /dev/null
		rm -f /system/bin/airtun-ng &> /dev/null
		rm -f /system/bin/besside-ng &> /dev/null
		rm -f /system/bin/besside-ng-crawler &> /dev/null
		rm -f /system/bin/buddy-ng &> /dev/null
		rm -f /system/bin/easside-ng &> /dev/null
		rm -f /system/bin/ifrename &> /dev/null
		rm -f /system/bin/ivstools &> /dev/null
		rm -f /system/bin/iwconfig &> /dev/null
		rm -f /system/bin/iwevent &> /dev/null
		rm -f /system/bin/iwgetid &> /dev/null
		rm -f /system/bin/iwlist &> /dev/null
		rm -f /system/bin/iwmulticall &> /dev/null
		rm -f /system/bin/iwpriv &> /dev/null
		rm -f /system/bin/iwspy &> /dev/null
		rm -f /system/bin/kstats &> /dev/null
		rm -f /system/bin/macaddr &> /dev/null
		rm -f /system/bin/makeivs-ng &> /dev/null
		rm -f /system/bin/packetforge-ng &> /dev/null
		rm -f /system/bin/tcpdump &> /dev/null
		rm -f /system/bin/tkiptun-ng &> /dev/null
		rm -f /system/bin/wesside-ng &> /dev/null
		rm -f /system/bin/wmon &> /dev/null
		rm -f /system/bin/wpaclean &> /dev/null
		if [ -f /data/tosnettool ]; then rm /data/tosnettool 2> /dev/null; fi
		if [ -f /dev/block/loop255 ]; then rm /dev/block/loop255 2> /dev/null; fi
		if [ -f /data/tosnettool ]; then rm /data/tosnettool 2> /dev/null; fi
		if [ -f /sdcard/ShowIp.txt ]; then rm /sdcard/ShowIp.txt 2> /dev/null; fi
		if [ -f /system/etc/firmware/wlan/prima/WCNSS_qcom_wlan_nv.bin.bak ]; then rm /system/etc/firmware/wlan/prima/WCNSS_qcom_wlan_nv.bin.bak 2> /dev/null; fi
		if [ -f /system/WCNSS_qcom_wlan_nv.bin.bak ]; then rm /system/WCNSS_qcom_wlan_nv.bin.bak 2> /dev/null; fi
		if [ -f /sdcard/WCNSS_qcom_wlan_nv.bin.bak ]; then rm /sdcard/WCNSS_qcom_wlan_nv.bin.bak 2> /dev/null; fi
		if [ -f /data/WCNSS_qcom_wlan_nv.bin.bak ]; then rm /data/WCNSS_qcom_wlan_nv.bin.bak 2> /dev/null; fi
		if [ -f /sdcard/backupalamathwmanual ]; then rm /sdcard/backupalamathwmanual 2> /dev/null; fi
		if [ -f /sdcard/backupalamathw ]; then rm /sdcard/backupalamathw 2> /dev/null; fi
		if [ -f /data/.bootkali.sh ]; then rm /data/.bootkali.sh 2> /dev/null; fi
		if [ -f /data/hostterinstall ]; then rm /data/hostterinstall 2> /dev/null; fi
		if [ -f /system/etc/hosts ]; then rm -f /system/etc/hosts 2> /dev/null; fi
		echo '127.0.0.1 localhost' >> /system/etc/hosts
		echo '::1 localhost #[IPv6]' >> /system/etc/hosts
		chmod 644 /system/etc/hosts
		if [ -f /data/backupalamathw ]; then rm /data/backupalamathw 2> /dev/null; fi
		if [ -f /sdcard/backupalamathw ]; then rm /sdcard/backupalamathw 2> /dev/null; fi
		if [ -f /storage/emulated/0/backupalamathw ]; then rm /storage/emulated/0/backupalamathw 2> /dev/null; fi
		if [ -d /system/bin/NMAP_for_android/ ]; then rm -rf /system/bin/NMAP_for_android/ 2> /dev/null; fi
		if [ -f /sdcard/Tutorial Menjalankan Kali Linux.txt ]; then rm /sdcard/Tutorial Menjalankan Kali Linux.txt 2> /dev/null; fi
		if [ -f /data/.bootkali.sh ]; then rm /data/.bootkali.sh 2> /dev/null; fi
		if [ -f /data/.runkali.sh ]; then rm /data/.runkali.sh 2> /dev/null; fi
		if [ -d /data/bin/ ]; then rm -rf /data/bin/ 2> /dev/null; fi
		if [ -f /system/bin/nmap ]; then rm /system/bin/nmap 2> /dev/null; fi
		if [ -f /sdcard/nmap ]; then rm /sdcard/nmap 2> /dev/null; fi
		if [ -d /data/local/mnt/ ]; then rm -rf /data/local/mnt/ 2> /dev/null; fi
		if [ -f /system/bin/nettool ]; then rm /system/bin/nettool 2> /dev/null; fi
		svc wifi disable 2> /dev/null
		exit
	elif [ $opsi -eq 101 ]; then
		reboot
	elif [ $opsi -eq 2 ]; then
		echo ""
		echo -n "Menghitung APK..."
		echo ""
		if [ `find /sdcard/ -type f -name "*.apk" 2> /dev/null | wc -l` == 0 ]; then
			echo -n "\e[1;32mFile APK lama sudah dibebaskan semua, enter untuk kembali\e[0m"
			read enterKey
			nettool
		else
			calc=`find /sdcard/ -type f -name "*.apk" 2> /dev/null | wc -l`
			echo -n "Total Sampah APK $calc file, ingin menghapusnya (y/n)? "
			read jawab
			if [ $jawab == y ]; then
				echo -n "Sedang menghapus file APK"
				sleep 1
				echo -n "."
				echo `find /sdcard/ -type f -name "*.apk" 2> /dev/null | wc -l` >> /sdcard/total.txt
				sleep 1
				echo -n "."
				sleep 1
				echo -n "."
				sleep 1
				echo -n "."
				sleep 1
				echo -n "."
				rm -f $fullapk 2> /dev/null
				echo ""
				totalapknya=`cat /sdcard/total.txt`
				echo "\e[1;32m$totalapknya APK berhasil dihapus!\e[0m"
				echo "Enter untuk kembali"
				read enterKey
				rm -f /sdcard/total.txt
				nettool
			elif [ $jawab == n ]; then
				nettool
			else
				echo "Perintah Salah"
				sleep 3
				nettool
			fi
		fi
	elif [ $opsi -eq 3 ]; then
		echo ""
		echo "Menghitung Dalvik Cache..."
		sleep 3
		echo -n "Total Dalvik Cache: "
		echo `du -shc /data/dalvik-cache/* 2> /dev/null | tail -1 | cut -f 1`
		echo ""
		sleep 1
		echo "Menghapus akan membuat booting awal menunggu lama dan membuat perangkat fresh"
		echo "Proses akan reboot otomatis"
		echo -n "Ingin menghapus Dalvik Cache (y/n)? "
		read jawab
		if [ $jawab == y ]; then
			echo -n "Sedang menghapus Dalvik Cache"
			sleep 1
			echo -n "."
			sleep 1
			echo -n "."
			sleep 1
			echo -n "."
			sleep 1
			echo -n "."
			sleep 1
			echo -n "."
			echo `du -shc /data/dalvik-cache/* 2> /dev/null | tail -1 | cut -f 1` >> /data/totaldc.txt
			rm -rf /data/dalvik-cache/* 2> /dev/null
			bebas=`cat /data/totaldc.txt`
			echo ""
			echo "\e[1;32m$bebas sudah dibebaskan dari Dalvik Cache!\e[0m"
			echo -n "Perangkat akan di nyalakan ulang dalam 5 detik"
			sleep 1
			echo -n "."
			sleep 1
			echo -n "."
			sleep 1
			echo -n "."
			sleep 1
			echo -n "."
			sleep 1
			echo "."
			rm -rf /data/totaldc.txt
			reboot
		elif [ $jawab == n ]; then
			nettool
		else
			echo "Perintah Salah"
			sleep 3
			nettool
		fi
	elif [ $opsi -eq 4 ]; then
		echo ""
		echo -n "Optimasi di proses"
		setprop ro.mot.eri.losalert.delay 1000
		setprop ro.ril.disable.power.collapse 1
		setprop pm.sleep_mode 2
		setprop wifi.supplicant_scan_interval 180
		setprop power_supply.wakeup enable
		setprop power.saving.mode 1
		setprop ro.config.hw_power_saving 1
		setprop ro.vold.umsdirtyratio 20
		sleep 1
		echo -n "."
		if [ -e /sys/block/zram0/comp_algorithm 2> /dev/null ]; then
		busybox echo "lz4" > /sys/block/zram0/comp_algorithm &> /dev/null
		fi;
		if [ -e /sys/block/zram0 2> /dev/null ]; then
		busybox echo $((1024*1024*96)) > /sys/block/zram0/disksize &> /dev/null
		busybox sysctl -e -w vm.swappiness=10 &> /dev/null
		busybox mkswap /dev/block/zram0 &> /dev/null
		busybox swapon /dev/block/zram0 &> /dev/null
		fi;
		echo "10" > /proc/sys/vm/swappiness
		sleep 1
		echo -n "."
		busybox killall -9 android.process.media &> /dev/null
		busybox killall -9 mediaserver &> /dev/null
		busybox killall -9 android.process.media &> /dev/null
		busybox killall -9 mediaserver &> /dev/null
		busybox killall -9 com.google.android.gms &> /dev/null
		busybox killall -9 com.google.android.gsf &> /dev/null
		busybox killall -9 com.google.android.gms &> /dev/null
		busybox killall -9 com.google.android.gms.persistent &> /dev/null
		busybox killall -9 com.google.process.gapps &> /dev/null
		busybox killall -9 com.google.android.gsf &> /dev/null
		busybox killall -9 com.google.android.gsf.persistent &> /dev/null
		sleep 1
		echo -n "."
		setprop ro.config.nocheckin 1
		setprop ro.kernel.android.checkjni 0
		setprop ro.kernel.checkjni 0
		setprop profiler.force_disable_ulog 1
		setprop profiler.force_disable_err_rpt 1
		setprop persist.sys.use_dithering 0
		setprop persist.sys.purgeable_assets 1
		sleep 1
		echo -n "."
		if [ -e /proc/sys/vm/oom_kill_allocating_task ];
		then
		    busybox sysctl -w vm.oom_kill_allocating_task=0
		fi
		if [ -e /proc/sys/vm/panic_on_oom ];
		then
		    busybox sysctl -w vm.panic_on_oom=0
		fi
		if [ -e /proc/sys/vm/laptop_mode ];
		then
		    busybox sysctl -w vm.laptop_mode=5
		fi
		if [ -e /proc/sys/vm/dirty_ratio ];
		then
		    busybox sysctl -w vm.dirty_ratio=90
		fi
		if [ -e /proc/sys/vm/dirty_background_ratio ];
		then
		    busybox sysctl -w vm.dirty_background_ratio=80
		fi
		if [ -e /proc/sys/vm/page_cluster ];
		then
		    busybox sysctl -w  vm.page-cluster=8
		fi
		if [ -e /proc/sys/vm/overcommit_memory ];
		then
		    busybox sysctl -w vm.overcommit_memory=1
		fi
		if [ -e /proc/sys/vm/free_order_shift ];
		then
		    busybox sysctl -w vm.free_order_shift=4
		fi
		if [ -e /proc/sys/vm/block_dump ];
		then
		    busybox sysctl -w vm.block_dump=0
		fi
		if [ -e /proc/sys/debug/sched_features ];
		then
		    busybox sysctl -w sched_features=NO_NORMALIZED_SLEEPER
		fi
		if [ -e /proc/sys/fs/lease-break-times ];
		then
		    busybox sysctl -w  fs.lease-break-time=10
		fi
		if [ -e /proc/sys/fs/nr_open ];
		then
		    busybox sysctl -w fs.nr_open=105396
		fi
		if [ -e /proc/sys/fs/inotify/max_queued_events ];
		then
		    busybox sysctl -w fs.inotify.max_queued_events=32000
		fi
		if [ -e /proc/sys/fs/inotify/max_user_instances ];
		then
		    busybox sysctl -w fs.inotify.max_user_instances=256
		fi
		if [ -e /proc/sys/fs/inotify/max_user_watches ];
		then
		    busybox sysctl -w fs.inotify.max_user_watches=10240
		fi
		if [ -e /proc/sys/fs/file-max ];
		then
		    busybox sysctl -w fs.file-max=165164
		fi
		if [ -e /proc/sys/kernel/sem ];
		then
		    busybox sysctl -w kernel.sem="500 5120000 64 2048"
		fi
		if [ -e /proc/sys/kernel/threads_max ];
		then
		    busybox sysctl -w kernel.threads_max=525810
		fi
		if [ -e /proc/sys/kernel/sched_compat_yield ];
		then
		    busybox sysctl -w kernel.sched_compat_yield=1
		fi
		if [ -e /proc/sys/kernel/panic_on_oops ];
		then
		    busybox sysctl -w kernel.panic_on_oops=1
		fi
		if [ -e /proc/sys/kernel/panic ];
		then
		    busybox sysctl -w kernel.panic=5
		fi
		if [ -e /proc/sys/kernel/msgmni ];
		then
		    busybox sysctl -w kernel.msgmni=2048
		fi
		if [ -e /proc/sys/kernel/msgmax ];
		then
		    busybox sysctl -w kernel.msgmax=64000
		fi
		if [ -e /proc/sys/kernel/shmni ];
		then
		    busybox sysctl -w kernel.shmni=4096
		fi
		if [ -e /proc/sys/kernel/shmall ];
		then
		    busybox sysctl -w kernel.shmall=2097152
		fi
		if [ -e /proc/sys/kernel/shmax ];
		then
		    busybox sysctl -w kernel.shmmax=268435456
		fi
		if [ -e /proc/sys/kernel/sched_features ];
		then
		    busybox echo sysctl -w kernel.sched_features=24189
		fi
		if [ -e /proc/sys/kernel/sched_latency_ns ];
		then
		    busybox sysctl -w kernel.sched_latency_ns=18000000
		fi
		if [ -e /proc/sys/kernel/sched_min_granularity_ns ];
		then
		    busybox sysctl -w kernel.sched_min_granularity_ns=1500000
		fi
		if [ -e /proc/sys/kernel/sched_wakeup_granularity_ns ];
		then
		    busybox sysctl -w kernel.sched_wakeup_granularity_ns=3000000
		fi
		if [ -e /proc/sys/kernel/sched_shares_ratelimit ];
		then
		    busybox sysctl -w kernel.sched_shares_ratelimit=256000
		fi
		if [ -e /proc/sys/kernel/sched_childs_run_first ];
		then
		    busybox sysctl -w kernel.sched_childs_run_first=0
		fi
		if [ -e /proc/sys/kernel/sched_rt_runtime_us ];
		then
		    busybox sysctl -w kernel.sched_rt_runtime_us=-1
		fi
		if [ -e /proc/sys/kernel/sched_rt_period_us ];
		then
		    busybox sysctl -w kernel.sched_rt_period_us=1000000
		fi
		if [ -e /proc/sys/kernel/sched_rt_runtimes_us ];
		then
		    busybox sysctl -w kernel.sched_rt_runtimes_us=95000
		fi
		sleep 1
		echo "."
		STL=`ls -d /sys/block/stl* 2> /dev/null`;
		BML=`ls -d /sys/block/bml* 2> /dev/null`;
		MMC=`ls -d /sys/block/mmc* 2> /dev/null`;
		for i in $STL $BML $MMC;
		do
			if [ -e $i/queue/rotational ]; 
			then
				echo 0 > $i/queue/rotational; 
			fi;
			if [ -e $i/queue/nr_requests ];
			then
				echo 1024 > $i/queue/nr_requests; 
			fi;
		done
			if [ -e $i/queue/read_ahead_kb ];
			then
				echo "1024" >  $i/queue/read_ahead_kb;
			fi;
			if [ -e $i/queue/iostats ];
			then
				echo "0" > $i/queue/iostats;
			fi;
		READ_AHEAD_KB="1024"
		if [ -e /sys/devices/virtual/bdi/0:18/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/0:18/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/179:0/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/179:0/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:0/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:0/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:1/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:1/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:2/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:2/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:3/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:3/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:4/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:4/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:5/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:5/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:6/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:6/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:7/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:7/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/default/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/default/read_ahead_kb
		fi
		echo "Optimasi selesai, enter untuk kembali"
		read enterKey
		nettool
	elif [ $opsi -eq 5 ]; then
		echo ""
		echo -n "Optimasi di proses"
		for n in 1 2
		do
		USER_LAUNCHER=com.process.acore
		NUMBER_OF_CHECKS=0
		SLEEP_TIME=0
		PROCESSES_TOTAL=14
		DEBUG_ECHO=0
		CHECK_COUNT=0
		P_CHECK=0
		CHECK_OK=0
		PROCESS_1=0; PROCESS_2=0; PROCESS_3=0; PROCESS_4=0; PROCESS_5=0; PROCESS_6=0;
		PROCESS_7=0; PROCESS_8=0; PROCESS_9=0; PROCESS_10=0; PROCESS_11=0; PROCESS_12=0;
		PROCESS_13=0; PROCESS_14=0; PROCESS_15=0; PROCESS_16=0; PROCESS_17=0; PROCESS_18=0;
		PROCESS_19=0; PROCESS_20=0; PROCESS_21=0; PROCESS_22=0; PROCESS_23=0; PROCESS_24=0;
		 if [ $n -eq "1" ]; then
		    if [ $DEBUG_ECHO -eq "1" ]; then
		      echo ""
		      echo "LST Debug: $(date)"
		      echo "LST Debug: Initiate"
		    fi;
		    sleep 1
		    SWAP_SLEEP_TIME=3; SWAP_NUMBER_OF_CHECKS=30; SWAP_CHECK_COUNT=0; SWAP_CHECK_COUNT_OK=0; while [ $SWAP_CHECK_COUNT -lt $SWAP_NUMBER_OF_CHECKS ]; do if [ `pidof kswapd0` ]; then renice 19 `pidof kswapd0`; SWAP_CHECK_COUNT=$SWAP_NUMBER_OF_CHECKS; SWAP_CHECK_COUNT_OK=1; else sleep $SWAP_SLEEP_TIME; fi; SWAP_CHECK_COUNT=`expr $SWAP_CHECK_COUNT + 1`; done; if [ $SWAP_CHECK_COUNT_OK -lt 1 ]; then echo "LST Debug: 'kswapd0' expired after `expr $SWAP_CHECK_COUNT \* $SWAP_SLEEP_TIME` seconds"; fi;
		    if [ $DEBUG_ECHO -eq "1" ]; then
		      echo "LST Debug: $(date)";
		      echo "LST Debug: kswapd0 found";
		    fi;
		fi;
		if [ $n -eq "2" ]; then
		    if [ $DEBUG_ECHO -eq "1" ]; then
		      echo "LST Debug: 2nd loop"
		    fi;
		    NUMBER_OF_CHECKS=6
		    SLEEP_TIME=5
		fi;
		while [ $CHECK_COUNT -lt $NUMBER_OF_CHECKS ];
		do
		    if [ $PROCESS_1 -eq "0" ]; then PNAME="com.android.phone"; NICELEVEL=-20; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_1=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_2 -eq "0" ]; then PNAME="com.android.systemui"; NICELEVEL=-18; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_2=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_3 -eq "0" ]; then PNAME="com.android.settings"; NICELEVEL=-18; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_3=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_4 -eq "0" ]; then PNAME="com.swype.android.inputmethod"; NICELEVEL=-18; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_4=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_5 -eq "0" ]; then PNAME="$USER_LAUNCHER"; NICELEVEL=-18; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_5=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_6 -eq "0" ]; then PNAME="com.android.vending"; NICELEVEL=-18; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_6=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_7 -eq "0" ]; then PNAME="com.android.mms"; NICELEVEL=-19; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_7=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_8 -eq "0" ]; then PNAME="android.process.acore"; NICELEVEL=-3; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_8=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_9 -eq "0" ]; then PNAME="android.process.media"; NICELEVEL=-3; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_9=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_10 -eq "0" ]; then PNAME=""; NICELEVEL=-19; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_10=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_11 -eq "0" ]; then PNAME=""; NICELEVEL=-19; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_11=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_12 -eq "0" ]; then PNAME=""; NICELEVEL=-18; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_12=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_13 -eq "0" ]; then PNAME=""; NICELEVEL=19; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_13=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_14 -eq "0" ]; then PNAME="com.speedsoftware.rootexplorer"; NICELEVEL=-15; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_14=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_15 -eq "0" ]; then PNAME=""; NICELEVEL=-15; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_15=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_16 -eq "0" ]; then PNAME=""; NICELEVEL=-15; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_16=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_17 -eq "0" ]; then PNAME=""; NICELEVEL=-15; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_17=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_18 -eq "0" ]; then PNAME=""; NICELEVEL=-15; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_18=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $P_CHECK -ge $PROCESSES_TOTAL ]; then CHECK_COUNT=$NUMBER_OF_CHECKS; else sleep $SLEEP_TIME; fi;
		    CHECK_COUNT=`expr $CHECK_COUNT + 1`;
		done
		if [ $DEBUG_ECHO -eq "1" ]; then
		    echo "LST Debug: $(date)"
		    if [ $PROCESS_1 -eq "0" ]; then echo "LST Debug: PROCESS_1 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_2 -eq "0" ]; then echo "LST Debug: PROCESS_2 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_3 -eq "0" ]; then echo "LST Debug: PROCESS_3 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_4 -eq "0" ]; then echo "LST Debug: PROCESS_4 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_5 -eq "0" ]; then echo "LST Debug: PROCESS_5 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_6 -eq "0" ]; then echo "LST Debug: PROCESS_6 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_7 -eq "0" ]; then echo "LST Debug: PROCESS_7 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_8 -eq "0" ]; then echo "LST Debug: PROCESS_8 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_9 -eq "0" ]; then echo "LST Debug: PROCESS_9 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_10 -eq "0" ]; then echo "LST Debug: PROCESS_10 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_11 -eq "0" ]; then echo "LST Debug: PROCESS_11 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_12 -eq "0" ]; then echo "LST Debug: PROCESS_12 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_13 -eq "0" ]; then echo "LST Debug: PROCESS_13 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_14 -eq "0" ]; then echo "LST Debug: PROCESS_14 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_15 -eq "0" ]; then echo "LST Debug: PROCESS_15 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_16 -eq "0" ]; then echo "LST Debug: PROCESS_16 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_17 -eq "0" ]; then echo "LST Debug: PROCESS_17 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
	    	if [ $PROCESS_18 -eq "0" ]; then echo "LST Debug: PROCESS_18 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    echo "LST Debug: Checking complete"
		fi;
		done
		sleep 1
		echo -n "."
		chmod 644 $govcpu
		busybox echo "interactive" > $govcpu
		if [ -e /sys/devices/system/cpu/cpufreq/interactive/ ]; then
		busybox echo "75" > /sys/devices/system/cpu/cpufreq/interactive/go_hispeed_load
		busybox echo "1512000" > /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
		busybox echo "10000" > /sys/devices/system/cpu/cpufreq/interactive/min_sample_time
		busybox echo "40000" > /sys/devices/system/cpu/cpufreq/interactive/timer_rate
		fi
		chmod 644 /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
		busybox echo `cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_min_freq` > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
		pm enable com.google.android.gms/.update.SystemUpdateActivity &> /dev/null
		pm enable com.google.android.gms/.update.SystemUpdateService &> /dev/null
		pm enable com.google.android.gms/.update.SystemUpdateService$ActiveReceiver &> /dev/null
		pm enable com.google.android.gms/.update.SystemUpdateService$Receiver &> /dev/null
		pm enable com.google.android.gms/.update.SystemUpdateService$SecretCodeReceiver &> /dev/null
		pm enable com.google.android.gsf/.update.SystemUpdateActivity &> /dev/null
		pm enable com.google.android.gsf/.update.SystemUpdatePanoActivity &> /dev/null
		pm enable com.google.android.gsf/.update.SystemUpdateService &> /dev/null
		pm enable com.google.android.gsf/.update.SystemUpdateService$Receiver &> /dev/null
		pm enable com.google.android.gsf/.update.SystemUpdateService$SecretCodeReceiver &> /dev/null
		sleep 1
		echo -n "."
		echo "10" > /proc/sys/vm/swappiness;
		echo "3" > /proc/sys/vm/page-cluster;
		echo "10" > /proc/sys/vm/vfs_cache_pressure;
		echo "2000" > /proc/sys/vm/dirty_writeback_centisecs;
		echo "1000" > /proc/sys/vm/dirty_expire_centisecs;
		echo "0" > /proc/sys/vm/laptop_mode;
		echo "90" > /proc/sys/vm/dirty_ratio;
		echo "85" > /proc/sys/vm/dirty_background_ratio;
		echo "0" > /proc/sys/vm/oom_kill_allocating_task;
		echo "8" > /proc/sys/vm/page-cluster;
		echo "10" > /proc/sys/fs/lease-break-time;
		echo "0" > /proc/sys/vm/panic_on_oom;
		echo "64000" > /proc/sys/kernel/msgmni;
		echo "64000" > /proc/sys/kernel/msgmax;
		echo "10" > /proc/sys/fs/lease-break-time;
		setprop dalvik.vm.execution-mode int:jit
		setprop persist.sys.purgeable_assets 1
		setprop dalvik.vm.dexopt-flags m=y
		setprop ro.media.enc.jpeg.quality 90
		setprop dalvik.vm.heapsize 48m
		setprop ro.telephony.call_ring.delay 0
		setprop debug.performance.tuning 1
		setprop pm.sleep_mode 1
		setprop video.accelerate.hw 1
		setprop windowsmgr.max_events_per_sec 180
		setprop ro.ril.disable.power.collapse 1
		setprop wifi.supplicant_scan_interval 150
		setprop mot.proximity.delay 150
		setprop persist.sys.shutdown.mode hibernate
		setprop ro.ext4fs 1
		setprop debug.egl.swapinterval -60
		setprop ro.config.hwfeature_wakeupkey 0
		setprop dalvik.vm.startheapsize 4
		setprop ro.kernel.android.checkjni 0
		setprop keyguard.no_require_sim true
		setprop windowsmgr.support_rotation_270 true
		setprop ro.mot.eri.losalert.delay 000
		setprop ro.lge.proximity.delay 25
		setprop ro.media.dec.jpeg.memcap 20000000
		setprop ro.mot.eri.losalert.delay 1000
		setprop ro.ril.disable.power.collapse 1
		setprop wifi.supplicant_scan_interval 180
		setprop power_supply.wakeup enable
		setprop power.saving.mode 1
		setprop ro.ril.enable.amr.wideband 1
		setprop ro.fast.dormancy 1
		setprop ro.ril.fast.dormancy.rule 1
		setprop ro.config.hw_power_saving 1
		setprop ro.vold.umsdirtyratio 20
		fstrim -v /cache &> /dev/null
		fstrim -v /data &> /dev/null
		fstrim -v /system &> /dev/null
		fstrim -v /preload &> /dev/null
		setenforce 0
		busybox echo "0" > /sys/fs/selinux/enforce
		sleep 1
		echo -n "."
		if [ -e /sys/block/zram0/comp_algorithm 2> /dev/null ]; then
		busybox echo "lz4" > /sys/block/zram0/comp_algorithm &> /dev/null
		fi;
		if [ -e /sys/block/zram0 2> /dev/null ]; then
		busybox echo $((1024*1024*96)) > /sys/block/zram0/disksize &> /dev/null
		busybox sysctl -e -w vm.swappiness=10 &> /dev/null
		busybox mkswap /dev/block/zram0 &> /dev/null
		busybox swapon /dev/block/zram0 &> /dev/null
		fi;
		echo "10" > /proc/sys/vm/swappiness
		path=`busybox ls -d /sys/block/* 2>/dev/null`;
		for S in $path;
		do
			if [ -e $S/queue/rotational ]; then
				busybox echo "0" > $S/queue/rotational;
			fi;
			if [ -e $S/queue/iostats ]; then
				busybox echo "0" > $S/queue/iostats;
			fi;
			if [ -e $S/queue/nr_requests ]; then
				busybox echo "1024" > $S/queue/nr_requests;
			fi;
			if [ -e $S/queue/nomerges ]; then
				busybox echo "1" > $S/queue/nomerges;
			fi;	
		done
		sleep 1
		echo -n "."
		renice -20 `pidof com.android.phone`
		renice -19 `pidof com.android.inputmethod.latin`
		renice -19 `pidof com.swype.android.inputmethod`
		renice -17 `pidof com.android.systemui`
		renice -9 `pidof com.android.settings`
		renice -9 `pidof com.android.vending`
		renice -6 `pidof com.sec.android.app.camera`
		renice -6 `pidof com.sec.android.app.fm`
		renice -6 `pidof com.google.android.apps.maps`
		renice -4 `pidof com.google.android.apps.googlevoice`
		renice -3 `pidof android.process.media`
		renice -15 `pgrep android.process.acore`
		STL=`ls -d /sys/block/stl* 2> /dev/null`;
		BML=`ls -d /sys/block/bml* 2> /dev/null`;
		MMC=`ls -d /sys/block/mmc* 2> /dev/null`;
		for i in $STL $BML $MMC;
		do
			if [ -e $i/queue/rotational ]; 
			then
				echo 0 > $i/queue/rotational; 
			fi;
			if [ -e $i/queue/nr_requests ];
			then
				echo 2048 > $i/queue/nr_requests; 
			fi;
		done
			if [ -e $i/queue/read_ahead_kb ];
			then
				echo "2048" >  $i/queue/read_ahead_kb;
			fi;
			if [ -e $i/queue/iostats ];
			then
				echo "0" > $i/queue/iostats;
			fi;
		READ_AHEAD_KB="2048"
		if [ -e /sys/devices/virtual/bdi/0:18/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/0:18/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/179:0/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/179:0/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:0/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:0/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:1/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:1/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:2/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:2/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:3/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:3/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:4/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:4/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:5/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:5/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:6/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:6/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:7/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:7/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/default/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/default/read_ahead_kb
		fi
		sleep 1
		echo "."
		echo "Optimasi selesai, tekan enter"
		read enterKey
		nettool
	elif [ $opsi -eq 6 ]; then
		echo ""
		echo -n "Booster sedang di proses"
		echo "10" > /proc/sys/vm/swappiness;
		echo "3" > /proc/sys/vm/page-cluster;
		echo "10" > /proc/sys/vm/vfs_cache_pressure;
		echo "2000" > /proc/sys/vm/dirty_writeback_centisecs;
		echo "1000" > /proc/sys/vm/dirty_expire_centisecs;
		echo "0" > /proc/sys/vm/laptop_mode;
		echo "90" > /proc/sys/vm/dirty_ratio;
		echo "85" > /proc/sys/vm/dirty_background_ratio;
		echo "0" > /proc/sys/vm/oom_kill_allocating_task;
		echo "8" > /proc/sys/vm/page-cluster;
		echo "10" > /proc/sys/fs/lease-break-time;
		echo "0" > /proc/sys/vm/panic_on_oom;
		echo "64000" > /proc/sys/kernel/msgmni;
		echo "64000" > /proc/sys/kernel/msgmax;
		echo "10" > /proc/sys/fs/lease-break-time;
		setprop dalvik.vm.execution-mode int:jit
		setprop persist.sys.purgeable_assets 1
		setprop dalvik.vm.dexopt-flags m=y
		setprop ro.media.enc.jpeg.quality 90
		setprop dalvik.vm.heapsize 48m
		setprop ro.telephony.call_ring.delay 0
		setprop debug.performance.tuning 1
		setprop pm.sleep_mode 1
		setprop video.accelerate.hw 1
		setprop windowsmgr.max_events_per_sec 180
		setprop ro.ril.disable.power.collapse 1
		setprop wifi.supplicant_scan_interval 150
		setprop mot.proximity.delay 150
		setprop persist.sys.shutdown.mode hibernate
		setprop ro.ext4fs 1
		setprop debug.egl.swapinterval -60
		setprop ro.config.hwfeature_wakeupkey 0
		setprop dalvik.vm.startheapsize 4
		setprop ro.kernel.android.checkjni 0
		setprop keyguard.no_require_sim true
		setprop windowsmgr.support_rotation_270 true
		setprop ro.mot.eri.losalert.delay 000
		setprop ro.lge.proximity.delay 25
		setprop ro.media.dec.jpeg.memcap 20000000
		setprop ro.mot.eri.losalert.delay 1000
		setprop ro.ril.disable.power.collapse 1
		setprop wifi.supplicant_scan_interval 180
		setprop power_supply.wakeup enable
		setprop power.saving.mode 1
		setprop ro.ril.enable.amr.wideband 1
		setprop ro.fast.dormancy 1
		setprop ro.ril.fast.dormancy.rule 1
		setprop ro.config.hw_power_saving 1
		setprop ro.vold.umsdirtyratio 20
		fstrim -v /cache &> /dev/null
		fstrim -v /data &> /dev/null
		fstrim -v /system &> /dev/null
		fstrim -v /preload &> /dev/null
		setenforce 0
		busybox echo "0" > /sys/fs/selinux/enforce
		for n in 1 2
		do
		USER_LAUNCHER=com.process.acore
		NUMBER_OF_CHECKS=0
		SLEEP_TIME=0
		PROCESSES_TOTAL=14
		DEBUG_ECHO=0
		CHECK_COUNT=0
		P_CHECK=0
		CHECK_OK=0
		PROCESS_1=0; PROCESS_2=0; PROCESS_3=0; PROCESS_4=0; PROCESS_5=0; PROCESS_6=0;
		PROCESS_7=0; PROCESS_8=0; PROCESS_9=0; PROCESS_10=0; PROCESS_11=0; PROCESS_12=0;
		PROCESS_13=0; PROCESS_14=0; PROCESS_15=0; PROCESS_16=0; PROCESS_17=0; PROCESS_18=0;
		PROCESS_19=0; PROCESS_20=0; PROCESS_21=0; PROCESS_22=0; PROCESS_23=0; PROCESS_24=0;
		 if [ $n -eq "1" ]; then
		    if [ $DEBUG_ECHO -eq "1" ]; then
		      echo ""
		      echo "LST Debug: $(date)"
		      echo "LST Debug: Initiate"
		    fi;
		    sleep 1
		    SWAP_SLEEP_TIME=3; SWAP_NUMBER_OF_CHECKS=30; SWAP_CHECK_COUNT=0; SWAP_CHECK_COUNT_OK=0; while [ $SWAP_CHECK_COUNT -lt $SWAP_NUMBER_OF_CHECKS ]; do if [ `pidof kswapd0` ]; then renice 19 `pidof kswapd0`; SWAP_CHECK_COUNT=$SWAP_NUMBER_OF_CHECKS; SWAP_CHECK_COUNT_OK=1; else sleep $SWAP_SLEEP_TIME; fi; SWAP_CHECK_COUNT=`expr $SWAP_CHECK_COUNT + 1`; done; if [ $SWAP_CHECK_COUNT_OK -lt 1 ]; then echo "LST Debug: 'kswapd0' expired after `expr $SWAP_CHECK_COUNT \* $SWAP_SLEEP_TIME` seconds"; fi;
		    if [ $DEBUG_ECHO -eq "1" ]; then
		      echo "LST Debug: $(date)";
		      echo "LST Debug: kswapd0 found";
		    fi;
		fi;
		if [ $n -eq "2" ]; then
		    if [ $DEBUG_ECHO -eq "1" ]; then
		      echo "LST Debug: 2nd loop"
		    fi;
		    NUMBER_OF_CHECKS=6
		    SLEEP_TIME=5
		fi;
		while [ $CHECK_COUNT -lt $NUMBER_OF_CHECKS ];
		do
		    if [ $PROCESS_1 -eq "0" ]; then PNAME="com.android.phone"; NICELEVEL=-20; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_1=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_2 -eq "0" ]; then PNAME="com.android.systemui"; NICELEVEL=-18; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_2=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_3 -eq "0" ]; then PNAME="com.android.settings"; NICELEVEL=-18; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_3=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_4 -eq "0" ]; then PNAME="com.swype.android.inputmethod"; NICELEVEL=-18; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_4=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_5 -eq "0" ]; then PNAME="$USER_LAUNCHER"; NICELEVEL=-18; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_5=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_6 -eq "0" ]; then PNAME="com.android.vending"; NICELEVEL=-18; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_6=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_7 -eq "0" ]; then PNAME="com.android.mms"; NICELEVEL=-19; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_7=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_8 -eq "0" ]; then PNAME="android.process.acore"; NICELEVEL=-3; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_8=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_9 -eq "0" ]; then PNAME="android.process.media"; NICELEVEL=-3; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_9=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_10 -eq "0" ]; then PNAME=""; NICELEVEL=-19; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_10=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_11 -eq "0" ]; then PNAME=""; NICELEVEL=-19; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_11=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_12 -eq "0" ]; then PNAME=""; NICELEVEL=-18; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_12=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_13 -eq "0" ]; then PNAME=""; NICELEVEL=19; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_13=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_14 -eq "0" ]; then PNAME="com.speedsoftware.rootexplorer"; NICELEVEL=-15; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_14=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_15 -eq "0" ]; then PNAME=""; NICELEVEL=-15; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_15=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_16 -eq "0" ]; then PNAME=""; NICELEVEL=-15; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_16=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_17 -eq "0" ]; then PNAME=""; NICELEVEL=-15; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_17=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $PROCESS_18 -eq "0" ]; then PNAME=""; NICELEVEL=-15; if [ `pidof $PNAME` ]; then renice $NICELEVEL `pidof $PNAME`; PROCESS_18=1; P_CHECK=`expr $P_CHECK + 1`; fi; fi;
		    if [ $P_CHECK -ge $PROCESSES_TOTAL ]; then CHECK_COUNT=$NUMBER_OF_CHECKS; else sleep $SLEEP_TIME; fi;
		    CHECK_COUNT=`expr $CHECK_COUNT + 1`;
		done
		if [ $DEBUG_ECHO -eq "1" ]; then
		    echo "LST Debug: $(date)"
		    if [ $PROCESS_1 -eq "0" ]; then echo "LST Debug: PROCESS_1 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_2 -eq "0" ]; then echo "LST Debug: PROCESS_2 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_3 -eq "0" ]; then echo "LST Debug: PROCESS_3 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_4 -eq "0" ]; then echo "LST Debug: PROCESS_4 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_5 -eq "0" ]; then echo "LST Debug: PROCESS_5 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_6 -eq "0" ]; then echo "LST Debug: PROCESS_6 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_7 -eq "0" ]; then echo "LST Debug: PROCESS_7 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_8 -eq "0" ]; then echo "LST Debug: PROCESS_8 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_9 -eq "0" ]; then echo "LST Debug: PROCESS_9 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_10 -eq "0" ]; then echo "LST Debug: PROCESS_10 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_11 -eq "0" ]; then echo "LST Debug: PROCESS_11 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_12 -eq "0" ]; then echo "LST Debug: PROCESS_12 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_13 -eq "0" ]; then echo "LST Debug: PROCESS_13 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_14 -eq "0" ]; then echo "LST Debug: PROCESS_14 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_15 -eq "0" ]; then echo "LST Debug: PROCESS_15 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_16 -eq "0" ]; then echo "LST Debug: PROCESS_16 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    if [ $PROCESS_17 -eq "0" ]; then echo "LST Debug: PROCESS_17 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
	    	if [ $PROCESS_18 -eq "0" ]; then echo "LST Debug: PROCESS_18 expired after `expr $CHECK_COUNT \* $SLEEP_TIME` seconds"; fi;
		    echo "LST Debug: Checking complete"
		fi;
		done
		
		sleep 1
		echo -n "."
		if [ -e /proc/sys/kernel/softlockup_panic ]; then 
			busybox echo "0" > /proc/sys/kernel/softlockup_panic
		fi
		if [ -e /proc/sys/kernel/panic_on_oops ]; then 
			busybox echo "0" > /proc/sys/kernel/panic_on_oops
		fi
		if [ -e /proc/sys/kernel/panic ]; then 
			busybox echo "0" > /proc/sys/kernel/panic
		fi
		if [ -e /proc/sys/vm/panic_on_oom ]; then 
			 busybox echo "0" > /proc/sys/vm/panic_on_oom
		fi
		mem=`awk '/MemTotal/{print $2}' /proc/meminfo`
		totmem=`(echo - | awk -v A=$mem '{print A*1024;}')`
		max=`(echo - | awk -v A=$totmem '{print A*75/100;}')`
		page_size=`cat /proc/sys/kernel/shmmni`
		all=`(echo - | awk -v A=$totmem -v B=$page_size '{print A*80/100/B}')`
		if [ -e /proc/sys/kernel/shmall ]; then 
		        busybox echo $all > /proc/sys/kernel/shmall
		fi
		if [ -e /proc/sys/kernel/shmmax ]; then 
		        busybox echo $max > /proc/sys/kernel/shmmax
		fi
		if [ -e /proc/sys/kernel/shmmni ]; then 
		        busybox echo "1024" > /proc/sys/kernel/shmmni
		fi
		if [ -e /proc/sys/kernel/hung_task_timeout_secs ]; then 
		       busybox echo "0" > /proc/sys/kernel/hung_task_timeout_secs
		fi
		if [ -e /sys/kernel/dyn_fsync/Dyn_fsync_active ]; then
		       busybox echo "1" > /sys/kernel/dyn_fsync/Dyn_fsync_active
		fi
		if [ -e /proc/sys/fs/lease-break-time ]; then 
			     busybox echo "5" > /proc/sys/fs/lease-break-time
		fi
		if [ -e /proc/sys/fs/inotify/max_queued_events ]; then 
		        busybox echo "32000" > /proc/sys/fs/inotify/max_queued_events
		fi
		if [ -e /proc/sys/fs/inotify/max_user_instances ]; then 
		        busybox echo "256" > /proc/sys/fs/inotify/max_user_instances
		fi
		if [ -e /proc/sys/fs/inotify/max_user_watches ]; then 
		        busybox echo "10240" > /proc/sys/fs/inotify/max_user_watches
		fi
		RAM=$((`awk '/MemTotal/{print $2}' /proc/meminfo`/1024))
		filemax=$(($RAM/4*256))
		busybox echo $filemax > /proc/sys/fs/file-max
		chmod 644 $govcpu
		busybox echo "performance" > $govcpu
		chmod 644 /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
		busybox echo `cat /sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_min_freq` > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
		if [ -e /sys/devices/system/cpu/cpufreq/ondemand/ ]; then
			busybox echo "85" > /sys/devices/system/cpu/cpufreq/ondemand/up_threshold
			busybox echo "10" > /sys/devices/system/cpu/cpufreq/ondemand/down_differential
		fi
		if [ -e /sys/devices/system/cpu/cpufreq/ondemandx/ ]; then
			busybox echo "85" > /sys/devices/system/cpu/cpufreq/ondemandx/up_threshold
			busybox echo "10" > /sys/devices/system/cpu/cpufreq/ondemandx/down_differential
		fi
		if [ -e /sys/devices/system/cpu/cpufreq/ondemandplus/ ]; then
			busybox echo "32" > /sys/devices/system/cpu/cpufreq/ondemandplus/down_differential
			busybox echo "1026000" > /sys/devices/system/cpu/cpufreq/ondemandplus/inter_hifreq
			busybox echo "702000" > /sys/devices/system/cpu/cpufreq/ondemandplus/inter_lofreq
			busybox echo "2" > /sys/devices/system/cpu/cpufreq/ondemandplus/inter_staycycles
			busybox echo "2" > /sys/devices/system/cpu/cpufreq/ondemandplus/io_is_busy
			busybox echo "486000" > /sys/devices/system/cpu/cpufreq/ondemandplus/staycycles_resetfreq
			busybox echo "60000" > /sys/devices/system/cpu/cpufreq/ondemandplus/timer_rate
			busybox echo "95" > /sys/devices/system/cpu/cpufreq/ondemandplus/up_threshold
		fi
		if [ -e /sys/devices/system/cpu/cpufreq/conservative/ ]; then
			busybox echo "85" > /sys/devices/system/cpu/cpufreq/conservative/up_threshold
			busybox echo "75" > /sys/devices/system/cpu/cpufreq/conservative/down_threshold
			busybox echo "100" > /sys/devices/system/cpu/cpufreq/conservative/freq_step
		fi
		if [ -e /sys/devices/system/cpu/cpufreq/interactive/ ]; then
		busybox echo "75" > /sys/devices/system/cpu/cpufreq/interactive/go_hispeed_load
		busybox echo "1512000" > /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq
		busybox echo "10000" > /sys/devices/system/cpu/cpufreq/interactive/min_sample_time
		busybox echo "40000" > /sys/devices/system/cpu/cpufreq/interactive/timer_rate
		fi
		sleep 1
		echo "."
		STL=`ls -d /sys/block/stl* 2> /dev/null`;
		BML=`ls -d /sys/block/bml* 2> /dev/null`;
		MMC=`ls -d /sys/block/mmc* 2> /dev/null`;
		for i in $STL $BML $MMC;
		do
			if [ -e $i/queue/rotational ]; 
			then
				echo 0 > $i/queue/rotational; 
			fi;
			if [ -e $i/queue/nr_requests ];
			then
				echo 8192 > $i/queue/nr_requests; 
			fi;
		done
			if [ -e $i/queue/read_ahead_kb ];
			then
				echo "8192" >  $i/queue/read_ahead_kb;
			fi;
			if [ -e $i/queue/iostats ];
			then
				echo "0" > $i/queue/iostats;
			fi;
		sleep 1
		echo "."
		READ_AHEAD_KB="8192"
		if [ -e /sys/devices/virtual/bdi/0:18/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/0:18/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/179:0/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/179:0/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:0/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:0/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:1/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:1/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:2/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:2/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:3/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:3/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:4/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:4/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:5/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:5/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:6/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:6/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/7:7/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/7:7/read_ahead_kb
		fi
		if [ -e /sys/devices/virtual/bdi/default/read_ahead_kb ]; then
		    echo $READ_AHEAD_KB > /sys/devices/virtual/bdi/default/read_ahead_kb
		fi
		if [ -e /sys/devices/system/cpu/sched_mc_power_savings ]; then 
		busybox echo "2" > /sys/devices/system/cpu/sched_mc_power_savings
		fi
		echo "0,1,3,5,7,15" > /sys/module/lowmemorykiller/parameters/adj;
		if [ -e /sys/module/lowmemorykiller/parameters/cost ]; then
		    busybox chmod 644 /sys/module/lowmemorykiller/parameters/cost
		    busybox echo "48" > /sys/module/lowmemorykiller/parameters/cost
		  fi
		if [ -e /sys/module/lowmemorykiller/parameters/debug_level ]; then
		    busybox chmod 644 /sys/module/lowmemorykiller/parameters/debug_level
		    busybox echo "0" > /sys/module/lowmemorykiller/parameters/debug_level
		  fi
		if [ -e /sys/module/lowmemorykiller/parameters/adj ]; then
		    busybox chmod 644 /sys/module/lowmemorykiller/parameters/adj
		    busybox echo "0,1,3,5,7,15" > /sys/module/lowmemorykiller/parameters/adj
		fi
		mem=`awk '/MemTotal/{print $2}' /proc/meminfo`
		oom11=8
		oom21=12
		oom31=28
		oom41=32
		oom51=36
		oom61=42
		lmk11=$(($oom11*1024/4));
		lmk21=$(($oom21*1024/4));
		lmk31=$(($oom31*1024/4));
		lmk41=$(($oom41*1024/4));
		lmk51=$(($oom51*1024/4));
		lmk61=$(($oom61*1024/4));
		oom12=6
		oom22=18
		oom32=21
		oom42=41
		oom52=54
		oom62=70
		lmk12=$(($oom12*1024/4));
		lmk22=$(($oom22*1024/4));
		lmk32=$(($oom32*1024/4));
		lmk42=$(($oom42*1024/4));
		lmk52=$(($oom52*1024/4));
		lmk62=$(($oom62*1024/4));
		oom13=8
		oom23=12
		oom33=35
		oom43=42
		oom53=56
		oom63=72
		lmk13=$(($oom13*1024/4));
		lmk23=$(($oom23*1024/4));
		lmk33=$(($oom33*1024/4));
		lmk43=$(($oom43*1024/4));
		lmk53=$(($oom53*1024/4));
		lmk63=$(($oom63*1024/4));
		oom14=8
		oom24=12
		oom34=38
		oom44=46
		oom54=70
		oom64=82
		lmk14=$(($oom14*1024/4));
		lmk24=$(($oom24*1024/4));
		lmk34=$(($oom34*1024/4));
		lmk44=$(($oom44*1024/4));
		lmk54=$(($oom54*1024/4));
		lmk64=$(($oom64*1024/4));
		oom15=8
		oom25=12
		oom35=45
		oom45=56
		oom55=72
		oom65=97
		lmk15=$(($oom15*1024/4));
		lmk25=$(($oom25*1024/4));
		lmk35=$(($oom35*1024/4));
		lmk45=$(($oom45*1024/4));
		lmk55=$(($oom55*1024/4));
		lmk65=$(($oom65*1024/4));
		oom16=8
		oom26=12
		oom36=48
		oom46=72
		oom56=90
		oom66=128
		lmk16=$(($oom16*1024/4));
		lmk26=$(($oom26*1024/4));
		lmk36=$(($oom36*1024/4));
		lmk46=$(($oom46*1024/4));
		lmk56=$(($oom56*1024/4));
		lmk66=$(($oom66*1024/4));
		oom17=8
		oom27=12
		oom37=52
		oom47=68
		oom57=82
		oom67=128
		lmk17=$(($oom17*1024/4));
		lmk27=$(($oom27*1024/4));
		lmk37=$(($oom37*1024/4));
		lmk47=$(($oom47*1024/4));
		lmk57=$(($oom57*1024/4));
		lmk67=$(($oom67*1024/4));
		if [ "$mem" -lt 524288 ]; then
			busybox chmod 644 /sys/module/lowmemorykiller/parameters/minfree
			busybox echo "$lmk11,$lmk21,$lmk31,$lmk41,$lmk51,$lmk61" > /sys/module/lowmemorykiller/parameters/minfree
		elif [ "$mem" -lt 786432 ]; then
			busybox chmod 644 /sys/module/lowmemorykiller/parameters/minfree
			busybox echo "$lmk12,$lmk22,$lmk32,$lmk42,$lmk52,$lmk62" >/sys/module/lowmemorykiller/parameters/minfree
		elif [ "$mem" -lt 1048576 ]; then
			busybox chmod 644 /sys/module/lowmemorykiller/parameters/minfree
			busybox echo "$lmk13,$lmk23,$lmk33,$lmk43,$lmk53,$lmk63" > /sys/module/lowmemorykiller/parameters/minfree
		elif [ "$mem" -lt 1572864 ]; then
			busybox chmod 644 /sys/module/lowmemorykiller/parameters/minfree
			busybox echo "$lmk14,$lmk24,$lmk34,$lmk44,$lmk54,$lmk64" > /sys/module/lowmemorykiller/parameters/minfree
		elif [ "$mem" -lt 2097152 ]; then
			busybox chmod 644 /sys/module/lowmemorykiller/parameters/minfree
			busybox echo "$lmk15,$lmk25,$lmk35,$lmk45,$lmk55,$lmk65" > /sys/module/lowmemorykiller/parameters/minfree
		elif [ "$mem" -lt 3145728 ]; then
			busybox chmod 644 /sys/module/lowmemorykiller/parameters/minfree
			busybox echo "$lmk16,$lmk26,$lmk36,$lmk46,$lmk56,$lmk66" > /sys/module/lowmemorykiller/parameters/minfree
		else 
			busybox chmod 644 /sys/module/lowmemorykiller/parameters/minfree
			busybox echo "$lmk17,$lmk27,$lmk37,$lmk47,$lmk57,$lmk67" > /sys/module/lowmemorykiller/parameters/minfree
		fi
		  if [ -e /sys/devices/system/cpu/cpu0/cpufreq/ondemand/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu0/cpufreq/ondemand/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu0/cpufreq/ondemand/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu1/cpufreq/ondemand/up_threshold ]; then

		    echo "70" > /sys/devices/system/cpu/cpu1/cpufreq/ondemand/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu1/cpufreq/ondemand/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu2/cpufreq/ondemand/up_threshold ]; then

		    echo "70" > /sys/devices/system/cpu/cpu2/cpufreq/ondemand/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu2/cpufreq/ondemand/down_differential;
		  fi;  
		  if [ -e /sys/devices/system/cpu/cpu3/cpufreq/ondemand/up_threshold ]; then

		    echo "70" > /sys/devices/system/cpu/cpu3/cpufreq/ondemand/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu3/cpufreq/ondemand/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu4/cpufreq/ondemand/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu4/cpufreq/ondemand/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu4/cpufreq/ondemand/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu5/cpufreq/ondemand/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu5/cpufreq/ondemand/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu5/cpufreq/ondemand/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu6/cpufreq/ondemand/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu6/cpufreq/ondemand/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu6/cpufreq/ondemand/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu7/cpufreq/ondemand/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu7/cpufreq/ondemand/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu7/cpufreq/ondemand/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpufreq/ondemand/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpufreq/ondemand/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpufreq/ondemand/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu0/cpufreq/ondemandx/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu0/cpufreq/ondemandx/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu0/cpufreq/ondemandx/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu1/cpufreq/ondemandx/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu1/cpufreq/ondemandx/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu1/cpufreq/ondemandx/down_differential;
		  fi;
		    if [ -e /sys/devices/system/cpu/cpu2/cpufreq/ondemandx/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu2/cpufreq/ondemandx/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu2/cpufreq/ondemandx/down_differential;
		  fi;
		    if [ -e /sys/devices/system/cpu/cpu3/cpufreq/ondemandx/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu3/cpufreq/ondemandx/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu3/cpufreq/ondemandx/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu4/cpufreq/ondemandx/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu4/cpufreq/ondemandx/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu4/cpufreq/ondemandx/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu5/cpufreq/ondemandx/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu5/cpufreq/ondemandx/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu5/cpufreq/ondemandx/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu6/cpufreq/ondemandx/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu6/cpufreq/ondemandx/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu6/cpufreq/ondemandx/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu7/cpufreq/ondemandx/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpu7/cpufreq/ondemandx/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpu7/cpufreq/ondemandx/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpufreq/ondemandx/up_threshold ]; then
		    echo "70" > /sys/devices/system/cpu/cpufreq/ondemandx/up_threshold;
		    echo "10" > /sys/devices/system/cpu/cpufreq/ondemandx/down_differential;
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu0/cpufreq/conservative/up_threshold ]; then
		    echo "90" > /sys/devices/system/cpu/cpu0/cpufreq/conservative/up_threshold;
		    echo "50" > /sys/devices/system/cpu/cpu0/cpufreq/conservative/down_threshold; 
		    echo "100" > /sys/devices/system/cpu/cpu0/cpufreq/conservative/freq_step; 
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu1/cpufreq/conservative/up_threshold ]; then
		    echo "90" > /sys/devices/system/cpu/cpu1/cpufreq/conservative/up_threshold;
		    echo "50" > /sys/devices/system/cpu/cpu1/cpufreq/conservative/down_threshold; 
		    echo "100" > /sys/devices/system/cpu/cpu1/cpufreq/conservative/freq_step; 
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu2/cpufreq/conservative/up_threshold ]; then
		    echo "90" > /sys/devices/system/cpu/cpu2/cpufreq/conservative/up_threshold;
		    echo "50" > /sys/devices/system/cpu/cpu2/cpufreq/conservative/down_threshold; 
		    echo "100" > /sys/devices/system/cpu/cpu2/cpufreq/conservative/freq_step; 
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu3/cpufreq/conservative/up_threshold ]; then
		    echo "90" > /sys/devices/system/cpu/cpu3/cpufreq/conservative/up_threshold;
		    echo "50" > /sys/devices/system/cpu/cpu3/cpufreq/conservative/down_threshold; 
		    echo "100" > /sys/devices/system/cpu/cpu3/cpufreq/conservative/freq_step; 
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu4/cpufreq/conservative/up_threshold ]; then
		    echo "90" > /sys/devices/system/cpu/cpu4/cpufreq/conservative/up_threshold;
		    echo "50" > /sys/devices/system/cpu/cpu4/cpufreq/conservative/down_threshold; 
		    echo "100" > /sys/devices/system/cpu/cpu4/cpufreq/conservative/freq_step; 
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu5/cpufreq/conservative/up_threshold ]; then
		    echo "90" > /sys/devices/system/cpu/cpu5/cpufreq/conservative/up_threshold;
		    echo "50" > /sys/devices/system/cpu/cpu5/cpufreq/conservative/down_threshold; 
		    echo "100" > /sys/devices/system/cpu/cpu5/cpufreq/conservative/freq_step; 
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu6/cpufreq/conservative/up_threshold ]; then
		    echo "90" > /sys/devices/system/cpu/cpu6/cpufreq/conservative/up_threshold;
		    echo "50" > /sys/devices/system/cpu/cpu6/cpufreq/conservative/down_threshold; 
		    echo "100" > /sys/devices/system/cpu/cpu6/cpufreq/conservative/freq_step; 
		  fi;
		  if [ -e /sys/devices/system/cpu/cpu7/cpufreq/conservative/up_threshold ]; then
		    echo "90" > /sys/devices/system/cpu/cpu7/cpufreq/conservative/up_threshold;
		    echo "50" > /sys/devices/system/cpu/cpu7/cpufreq/conservative/down_threshold; 
		    echo "100" > /sys/devices/system/cpu/cpu7/cpufreq/conservative/freq_step; 
		  fi;
		  if [ -e /sys/devices/system/cpu/cpufreq/conservative/up_threshold ]; then
		    echo "90" > /sys/devices/system/cpu/cpufreq/conservative/up_threshold;
		    echo "50" > /sys/devices/system/cpu/cpufreq/conservative/down_threshold; 
		    echo "100" > /sys/devices/system/cpu/cpufreq/conservative/freq_step; 
		  fi;
		sleep 1
		echo "."
		busybox echo "1708" > /proc/sys/kernel/random/read_wakeup_threshold
		busybox echo "2048" > /proc/sys/kernel/random/write_wakeup_threshold
		echo "\e[1;32mEdisi Gaming sudah diterapkan!!\e[0m tekan enter untuk kembali\e[0m"
		read enterKey
		nettool
	elif [ $opsi -eq 7 ]; then
		clear
		echo "=========================================================="
		echo "                      Kocok Nomer                         "
		echo "=========================================================="
		echo ""
		echo -n "No. Maksimal: "
		read nomer
		if [ $nomer -gt 0 ]; then
			sleep 1
			echo -n "Hasil:\e[1;32m "
			echo $((RANDOM % $nomer))
			echo "\e[0m"
			sleep 1
			echo "Enter untuk kembali"
			read enterKey
			nettool
		else
			clear
			echo "Perintah salah"
			sleep 3
			nettool
		fi
	elif [ $opsi -eq 90 ]; then
		nettool
	elif [ $opsi -eq 8 ]; then
			echo -n "Cek koneksi"
			sleep 1
			echo -n "."
			sleep 1
			echo -n "."
			sleep 1
			echo -n "."
			sleep 1
		if ping -q -c 1 -W 1 google.com >/dev/null; then
			echo "\e[1;32m OK!\e[0m"
			sleep 1
			if [ -f /system/bin/aircrack-ng ]; then 
				echo "Aircrack sudah terinstall, silahkan menggunakan perintah 'aircrack-ng' dijendela terminal lain"
				echo "Enter untuk kembali"
				read enterKey
				nettool
			else
			echo -n "File dukungan dipasang"
			sleep 1
			echo -n "."
			sleep 1
			echo -n "."
			sleep 1
			echo "."
			echo 'mkdir /sdcard/air/ &> /dev/null' >> /data/.air.sh
			echo 'cd /sdcard/air/ &> /dev/null' >> /data/.air.sh
			echo 'echo -n "Unduh file 1..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/airbase-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 2..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/aircrack-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 3..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/airdecap-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 4..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/airdecloak-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 5..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/aireplay-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 6..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/airodump-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 7..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/airolib-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 8..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/airserv-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 9..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/airtun-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 10..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/besside-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 11..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/besside-ng-crawler &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 12..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/buddy-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 13..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/easside-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 14..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/ifrename &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 15..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/ivstools &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 16..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/iwconfig &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 17..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/iwevent &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 18..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/iwgetid &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 19..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/iwlist &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 20..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/iwmulticall &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 21..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/iwpriv &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 22..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/iwspy &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 23..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/kstats &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 24..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/macaddr &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 25..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/makeivs-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 26..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/packetforge-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 27..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/tcpdump &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 28..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/tkiptun-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 29..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/wesside-ng &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 30..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/wmon &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'echo -n "Unduh file 31..."' >> /data/.air.sh
			echo 'wget http://sudonano.pe.hu/aircrack/wpaclean &> /dev/null' >> /data/.air.sh
			echo 'echo "\e[1;32m OK!\e[0m"' >> /data/.air.sh
			echo 'mv /sdcard/air/airbase-ng /system/bin/airbase-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/aircrack-ng /system/bin/aircrack-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/airdecap-ng /system/bin/airdecap-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/airdecloak-ng /system/bin/airdecloak-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/aireplay-ng /system/bin/aireplay-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/airodump-ng /system/bin/airodump-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/airolib-ng /system/bin/airolib-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/airserv-ng /system/bin/airserv-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/airtun-ng /system/bin/airtun-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/besside-ng /system/bin/besside-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/besside-ng-crawler /system/bin/besside-ng-crawler &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/buddy-ng /system/bin/buddy-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/easside-ng /system/bin/easside-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/ifrename /system/bin/ifrename &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/ivstools /system/bin/ivstools &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/iwconfig /system/bin/iwconfig &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/iwevent /system/bin/iwevent &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/iwgetid /system/bin/iwgetid &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/iwlist /system/bin/iwlist &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/iwmulticall /system/bin/iwmulticall &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/iwpriv /system/bin/iwpriv &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/iwspy /system/bin/iwspy &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/kstats /system/bin/kstats &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/macaddr /system/bin/macaddr &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/makeivs-ng /system/bin/makeivs-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/packetforge-ng /system/bin/packetforge-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/tcpdump /system/bin/tcpdump &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/tkiptun-ng /system/bin/tkiptun-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/wesside-ng /system/bin/wesside-ng &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/wmon /system/bin/wmon &> /dev/null' >> /data/.air.sh
			echo 'mv /sdcard/air/wpaclean /system/bin/wpaclean &> /dev/null' >> /data/.air.sh
			sh /data/.air.sh /sdcard/air/
			echo -n "Konfigurasi file"
			chmod 755 /system/bin/airbase-ng &> /dev/null
			chmod 755 /system/bin/aircrack-ng &> /dev/null
			chmod 755 /system/bin/airdecap-ng &> /dev/null
			chmod 755 /system/bin/airdecloak-ng &> /dev/null
			chmod 755 /system/bin/aireplay-ng &> /dev/null
			chmod 755 /system/bin/airodump-ng &> /dev/null
			chmod 755 /system/bin/airolib-ng &> /dev/null
			chmod 755 /system/bin/airserv-ng &> /dev/null
			chmod 755 /system/bin/airtun-ng &> /dev/null
			chmod 755 /system/bin/besside-ng &> /dev/null
			sleep 1
			echo -n "."
			chmod 755 /system/bin/besside-ng-crawler &> /dev/null
			chmod 755 /system/bin/buddy-ng &> /dev/null
			chmod 755 /system/bin/easside-ng &> /dev/null
			chmod 755 /system/bin/ifrename &> /dev/null
			chmod 755 /system/bin/ivstools &> /dev/null
			chmod 755 /system/bin/iwconfig &> /dev/null
			chmod 755 /system/bin/iwevent &> /dev/null
			chmod 755 /system/bin/iwgetid &> /dev/null
			chmod 755 /system/bin/iwlist &> /dev/null
			chmod 755 /system/bin/iwmulticall &> /dev/null
			chmod 755 /system/bin/iwpriv &> /dev/null
			sleep 1
			echo -n "."
			chmod 755 /system/bin/iwspy &> /dev/null
			chmod 755 /system/bin/kstats &> /dev/null
			chmod 755 /system/bin/macaddr &> /dev/null
			chmod 755 /system/bin/makeivs-ng &> /dev/null
			chmod 755 /system/bin/packetforge-ng &> /dev/null
			chmod 755 /system/bin/tcpdump &> /dev/null
			chmod 755 /system/bin/tkiptun-ng &> /dev/null
			chmod 755 /system/bin/wesside-ng &> /dev/null
			chmod 755 /system/bin/wmon &> /dev/null
			sleep 1
			echo "."
			chmod 755 /system/bin/wpaclean &> /dev/null
			if [ -d /sdcard/air/ ]; then rm -rf /sdcard/air/; fi
			if [ -f /data/.air.sh ]; then rm /data/.air.sh ; fi
			sleep 3
			echo -n "Instal selesai dan dapat digunakan, silahkan enter untuk kembali"
			read enterKey
			nettool
			fi
		else
			echo "\e[1;31m GAGAL!\e[0m"
			sleep 1
			echo ""
			echo "Koneksi mati atau tidak bisa di gunakan, silahkan cek koneksi dan ulangi kembali"
			echo "klik enter untuk kembali"
			read enterKey
			nettool
		fi
	else
		clear
		echo "Perintah Salah"
		sleep 3
		nettool
	fi
elif [ $option -eq 50 ]; then
	nettool
elif [ $option -eq 66 ]; then
	clear
	exit
	exit
else
	clear
	echo "Perintah salah"
	sleep 2
	nettool
fi
else
	echo ""
	echo ""
	echo "\e[1;36mTerms of Service (PERJANJIAN) NETTOOLS\e[0m"
	echo "Saya berjanji, untuk menyetujui hal dibawah ini:"
	echo "1. Penggunaan dan penyalahgunaan NETTOOLS adalah tanggung jawab pengguna"
	echo "2. Tidak boleh di share ke semua orang/sembarangan (Termasuk teman dan orang terdekat)"
	echo "3. DWYOR (Do With Your Own Risk), Lakukan dengan resikomu"
	echo "4. Pembuat tidak akan menjawab pertanyaan mengenai NETTOOLS"
	echo "\e[1;31m5. Tidak menjual NETTOOLS ini ke orang lain selain pembuat!! \e[0m"
	echo "6. Harus mentaati UU ITE yang berlaku di Negara Indonesia"
	echo "7. Nettool hanya untuk belajar dan tes di perangkatnya sendiri"
	echo "8. Tidak mengubah, memperbanyak (copy), ataupun dialihkan pembuat program nettool"
	echo ""
	echo "Terima kasih atas partisipasinya sudah tidak melakukan hal diatas"
	echo "HAK CIPTA @ DHJS 2017"
	echo ""
	echo "Ini hanya muncul saat pertama kali menggunakan nettool"
	echo ""
	echo "\e[1;31mSaya (pengguna) sudah membaca Terms of Service nettool dan saya sudah berjanji tidak akan melakukan didalam perjanjian tersebut\e[0m"
	echo ""
	echo "Dengan menekan enter pengguna sudah menyetujui ToS diatas"
	echo "Saya (pengguna) sudah membaca Terms of Service nettool dan saya sudah berjanji tidak akan melakukan didalam perjanjian tersebut" >> /data/tosnettool
	read enterKey
	sleep 2
	nettool
fi
fi